export class EditorMapLayout{constructor(){this.tileCurrent,this.mapCurrent,this.cssDisplay="display-none",this.cssButtonActive="button--active",this.cssDestak="destak",this.cssTabActive="tab--active",this.elMap=document.getElementById("map"),this.elMapTile,this.elTileset=document.getElementById("tileset"),this.elTilesetButton,this.elMenuMain=document.getElementById("main_menu"),this.elMapOptionDoor=document.getElementById("map_option_door"),this.elMapOptionTerrain=document.getElementById("map_option_terrain"),this.elMapOptionWalk=document.getElementById("map_option_walk"),this.elSelectMap=document.getElementById("data_select_map"),this.elButtonNew=document.getElementById("menu_main_new"),this.elButtonSave=document.getElementById("menu_main_save"),this.elSelectTileset=document.getElementById("tileset_select_select"),this.elNewMapForm=document.getElementById("form_new_map"),this.elNewMapFieldId=document.getElementById("new_map_id"),this.elNewMapFieldName=document.getElementById("new_map_name"),this.elNewMapButton=document.getElementById("new_map_create"),this.arrCategory=[],this.arrCategoryLength=0,this.isShowDoor=!1,this.isShowTerrain=!1,this.isShowWalkArea=!1}buildMenu(){this.elSelectMap.addEventListener("change",(e=>{const t=e.target.options[e.target.selectedIndex].value;this.mapCurrent=t,objEditorMap.buildMap(t)})),this.elButtonNew.addEventListener("click",(()=>{this.buildNewMap()})),this.elButtonSave.addEventListener("click",(()=>{this.save()})),this.elMapOptionDoor.addEventListener("click",(()=>{this.isShowDoor?this.isShowDoor=!1:this.isShowDoor=!0,this.buildMenuDestak(this.elMapOptionDoor)})),this.elMapOptionTerrain.addEventListener("click",(()=>{this.isShowTerrain?this.isShowTerrain=!1:this.isShowTerrain=!0,this.buildMenuDestak(this.elMapOptionTerrain)})),this.elMapOptionWalk.addEventListener("click",(()=>{this.isShowWalkArea?this.isShowWalkArea=!1:this.isShowWalkArea=!0,this.buildMenuDestak(this.elMapOptionWalk)})),this.elNewMapButton.addEventListener("click",(()=>{this.buildNewMapValidate()&&this.buildNewMapSend()}))}buildNewMap(){this.elNewMapForm.classList.toggle(this.cssDisplay)}buildNewMapValidate(){if(""!==this.elNewMapFieldId.value){if(""!==this.elNewMapFieldName.value)return!0;this.elNewMapFieldName.focus()}else this.elNewMapFieldId.focus()}buildNewMapSend(){const e=objEditorMap.getToken(),t=`c=EditorMap&m=buildNewMap&id=${this.elNewMapFieldId.value}&name=${this.elNewMapFieldName.value}`;libHelper.ajax({token:e,parameter:t,namespace:objEditorMap.namespace}).then((e=>this.buildNewMapSendSuccess(e)))}buildNewMapSendSuccess(){window.location.reload()}buildSelectTileSet(){let e="";for(let t in this.arrCategory)e+=`<option value="${this.arrCategory[t]}">${this.arrCategory[t]}</option>`;this.elSelectTileset.innerHTML+=e,this.elSelectTileset.addEventListener("change",(e=>{const t=e.target.options[e.target.selectedIndex].value;this.buildTileset(t)}))}buildMenuMain(e){const t=document.getElementById("menu_main_configuration");"initial"===e?(t&&(t.style.display="none"),this.elButtonSave.setAttribute("disabled",!0)):(t&&(t.style.display="block"),this.elButtonSave.removeAttribute("disabled"))}buildMenuDestak(e){e&&e.classList.toggle(this.cssTabActive),this.elMapTile&&([...this.elMapTile].forEach((e=>{libHelper.removeClass(e,this.cssDestak)})),this.buildMenuDestakDoor(),this.buildMenuDestakTerrain(),this.buildMenuDestakWalk())}buildMenuDestakDoor(){this.isShowDoor&&[...this.elMapTile].forEach((e=>{const t=e.getAttribute("class");"door"===objEditorMap.decodeMapIndice({searchBy:"class",key:t,returnBy:"tileset"})&&libHelper.addClass(e,this.cssDestak)}))}buildMenuDestakTerrain(){const e=document.querySelectorAll("#map_terrain_1, #map_terrain_2, #map_terrain_3, #map_terrain_4, #map_terrain_5, #map_terrain_6");[...e].forEach((e=>{libHelper.removeClass(e,this.cssDestak)})),this.isShowTerrain&&[...e].forEach((e=>{[...e.querySelectorAll("span")].forEach((e=>{libHelper.addClass(e,this.cssDestak)}))}))}buildMenuDestakWalk(){const e=document.querySelectorAll("#map_walk_horizontal_1, #map_walk_horizontal_2, #map_walk_horizontal_3, #map_walk_vertical_1, #map_walk_vertical_2, #map_walk_vertical_3, #map_walk_vertical_4, #map_walk_vertical_5, #map_walk_vertical_6, #map_walk_vertical_7, #map_walk_vertical_8");[...e].forEach((e=>{libHelper.removeClass(e,this.cssDestak)})),this.isShowWalkArea&&[...e].forEach((e=>{[...e.querySelectorAll("span")].forEach((e=>{libHelper.addClass(e,this.cssDestak)}))}))}buildTileset(e){const t=this.elTileset.children;[...t].forEach((e=>{e.style.display="none"})),"all"!==e?[...t].forEach((t=>{const a=t.getAttribute("class").split(" ")[0],i=objEditorMap.decodeMapIndice({searchBy:"class",key:a,returnBy:"tileset"});null!==i&&i===e&&(t.style.display="block")})):[...t].forEach((e=>{e.style.display="block"}))}buildMenuTile(){let e="";for(let t in globalTile){const a=globalTile[t].class;e+=`<button type="button" class="${a} button" title="${a}" data-tile="${a}"></button>`}this.elTileset.innerHTML=e}buildMenuTileAction(){[...this.elTilesetButton].forEach((e=>{e.addEventListener("click",(()=>{this.tileCurrent=e.getAttribute("data-tile"),this.buildMenuTileStyle(e)}))}))}buildMenuTileStyle(e){[...this.elTilesetButton].forEach((e=>{libHelper.removeClass(e,this.cssButtonActive)})),libHelper.addClass(e,this.cssButtonActive)}buildMenuMap(){this.elMapTile=this.elMap.querySelectorAll("span"),[...this.elMapTile].forEach((e=>{e.addEventListener("click",(()=>{e.removeAttribute("class"),libHelper.addClass(e,this.tileCurrent),this.buildMenuDestak()}))}))}decode(){this.buildMenuMap(),this.buildMenuDestak()}init(){objEditorMap.build("editor"),this.buildMenu(),this.buildMenuTile(),this.elTilesetButton=this.elTileset.querySelectorAll(".button"),this.buildMenuTileAction(),this.buildMenuMain("initial"),this.updateTile()}updateTile(){for(let e in globalTile){const t=globalTile[e].tileset;-1===this.arrCategory.indexOf(t)&&this.arrCategory.push(t)}this.arrCategory.sort(),this.buildSelectTileSet()}updateTerrain(){for(let e=0;e<objEditorMap.arrTerrainLength;e++)for(let t=0;t<objEditorMap.mapTerrainLength;t++){const a=t+1,i=document.getElementById(`${objEditorMap.mapTerrainId+a}_${e}`).getAttribute("class").split(" ")[0];objEditorMap[`arrTerrain${a}`].push(i)}for(let e=0;e<objEditorMap.arrTerrainLength;e++)for(let t=0;t<objEditorMap.mapTerrainLength;t++){const a=t+1,i=`arrTerrainDecoded${a}`,l=objEditorMap.decodeMapIndice({searchBy:"class",key:objEditorMap[`arrTerrain${a}`][e],returnBy:"id"});objEditorMap[i].push(l)}}updateWalkHorizontal(){for(let e=0;e<objEditorMap.arrWalkHorizontalLength;e++)for(let t=0;t<objEditorMap.mapWalkHorizontalLength;t++){const a=t+1,i=document.getElementById(`${objEditorMap.mapWalkHorizontalId+a}_${e}`).getAttribute("class").split(" ")[0];objEditorMap[`arrWalkHorizontal${a}`].push(i)}for(let e=0;e<objEditorMap.arrWalkHorizontalLength;e++)for(let t=0;t<objEditorMap.mapWalkHorizontalLength;t++){const a=t+1,i=`arrWalkHorizontalDecoded${a}`,l=objEditorMap.decodeMapIndice({searchBy:"class",key:objEditorMap[`arrWalkHorizontal${a}`][e],returnBy:"id"});objEditorMap[i].push(l)}}updateWalkVertical(){for(let e=0;e<objEditorMap.arrWalkVerticalLength;e++)for(let t=0;t<objEditorMap.mapWalkVerticalLength;t++){const a=t+1,i=document.getElementById(`${objEditorMap.mapWalkVerticalId+a}_${e}`).getAttribute("class").split(" ")[0];objEditorMap[`arrWalkVertical${a}`].push(i)}for(let e=0;e<objEditorMap.arrWalkVerticalLength;e++)for(let t=0;t<objEditorMap.mapWalkVerticalLength;t++){const a=t+1,i=`arrWalkVerticalDecoded${a}`,l=objEditorMap.decodeMapIndice({searchBy:"class",key:objEditorMap[`arrWalkVertical${a}`][e],returnBy:"id"});objEditorMap[i].push(l)}}save(){objEditorMap.clearArray(),this.updateTerrain(),this.updateWalkHorizontal(),this.updateWalkVertical(),this.saveAjax()}saveAjax(){const e=objEditorMap.getToken();let t=`&c=EditorMap&m=saveMap&id=${this.mapCurrent}&name=${objEditorMap.mapCurrentName}`;for(let e=0;e<objEditorMap.mapTerrainLength;e++){const a=e+1,i=objEditorMap[`arrTerrainDecoded${a}`];t+=`&terrain${a}=${JSON.stringify(i)}`}for(let e=0;e<objEditorMap.mapWalkHorizontalLength;e++){const a=e+1,i=objEditorMap[`arrWalkHorizontalDecoded${a}`];t+=`&walkHorizontal${a}=${JSON.stringify(i)}`}for(let e=0;e<objEditorMap.mapWalkVerticalLength;e++){const a=e+1,i=objEditorMap[`arrWalkVerticalDecoded${a}`];t+=`&walkVertical${a}=${JSON.stringify(i)}`}libHelper.ajax({token:e,parameter:t,namespace:objEditorMap.namespace}).then((e=>this.saveAjaxSuccess(e)))}saveAjaxSuccess(e){console.log(e),notification.add({text:e})}}
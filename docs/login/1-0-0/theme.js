export class Component{constructor(){this.elMain=document.getElementById("main")}drawButton(e){const t=e.id?`id="${e.id}"`:"",i=e.click,n=e.label,o=e.size?e.size:"regular",l=e.color?e.color:"black";return`\n            <button type="button" class="ds-button ds-button--${o} ${e.isRounded?"ds-button--rounded":""} ${e.isFull?"ds-button--full":""} ds-button--${l}" ${t} onclick="${i}">\n                ${n}\n            </button>\n        `}drawButtonProceed(e){return e.size="regular",e.isRounded=!0,e.isFull=!0,this.drawButton(e)}drawCaptcha(){return`\n            <div class="ds-content__captcha">\n                <div class="ds-row ds-center">\n                    ${libHelper.drawCaptcha()}\n                </div>\n            </div>\n        `}drawFormField(e){const t=e.id,i=e.type,n=e.label,o=e.onchange?`onchange="${e.onchange}"`:"",l=e.oninput?`oninput="${e.oninput}"`:"",s=e.required?'required=""':"",d=libComponent.buildIcon({icon:"eye_close",color:"grey",size:"regular",isFA:!1});return`\n            <div class="ds-row ds-form__field">\n                <label class="ds-form__label" for="${t}">${n}</label>\n                <input class="ds-form__input" id="${t}" type="${i}" value="" ${s} ${o} ${l}/>\n                <div class="ds-row ds-form__input-validation"></div>\n                ${"password"===i?`\n            <button type="button" class="ds-button ds-button--extra-small ds-button--transparent ds-button--proportional ds-button--over"\n                onclick="layout.handleShowPassword(this);">\n                ${d}\n            </button>\n        `:""}\n            </div>\n        `}drawFormFieldEmail(e){const t="layout.handleChange(this, `emailInvalid`)";return this.drawFormField({id:e.id,type:"email",label:layout.translation?.login?.default?.e_mail,onchange:t,oninput:t,required:!0})}drawFormFieldPassword(e){return this.drawFormField({id:e.id,type:"password",label:e.label||layout.translation?.login?.default?.password,required:!0})}drawFormButtonBack(){return this.drawLink({label:layout.translation?.interface?.action?.back,click:"layout.changeStep(`signIn`)"})}drawFormFieldCheckbox(e){const t=e.id;return`\n            <div class="ds-row ds-form__field">\n                <div class="ds-form__option">\n                    <input id="${t}" name="checkbox" type="checkbox">\n                    <label for="${t}" class="ds-checkbox-label ds-font--extra-small">${e.label}</label>\n                </div>\n            </div>\n        `}drawLink(e){return`\n            <div class="ds-row ds-form__field ds-right">\n                <a href="javascript:void(0);" class="ds-link ds-link--extra-small ds-link--black" ${e.id?`id="${e.id}"`:""} onclick="${e.click}">\n                    ${e.label}\n                </a>\n            </div>\n        `}drawPage(e){return`\n            <section id="${e.id}">\n                <div class="ds-modal__box ds-modal--login ds-content-theme">\n                    <header class="ds-page__header">\n                        <div class="ds-center">\n                            <div class="ds-ribbon">\n                                <div class="ds-ribbon__content">\n                                    <div class="ds-center">\n                                        <div class="ds-content__title">\n                                            <h2 class="ds-title">${e.title}</h2>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </header>\n                    <form class="ds-form">\n                        ${e.content}\n                    </form>\n                </div>\n            </section>\n        `}insertHTML(e){this.elMain.innerHTML=e}}export class ForgetPassword{constructor(){this.id="forget_password",this.idFieldEmail=`${this.id}_field_email`,this.idButtonProceed=`${this.id}_button_proceed`,this.frontEndClass="forgetPassword"}draw(){const e=component.drawPage({id:this.id,title:layout.translation?.login?.default?.forget,content:this.drawPage()});component.insertHTML(e),libHelper.renderCaptcha(),this.updateHtml(),this.elFieldEmail.focus()}drawPage(){const e=component.drawFormFieldEmail({id:this.idFieldEmail}),t=component.drawButtonProceed({id:this.idButtonProceed,label:layout.translation?.login?.default?.send,click:`${this.frontEndClass}.handleProceed();`}),i=component.drawFormButtonBack();return`\n            ${e}\n            ${component.drawCaptcha()}\n            <div class="ds-page__footer">\n                ${t}\n            </div>\n            ${i}\n        `}handleProceed(){const e=layout.validateForm(this.elFieldEmail,"emailInvalid"),t=libHelper.validateCaptcha(),i=e&&t,n={button:this.elButtonProceed,action:!0};if(i)return libHelper.toggleButtonEnabled(n),this.requestProceed()}async requestProceed(){const e=this.elFieldEmail.value,t=libHelper.getCaptchaResponse(),i={endpoint:`login/${this.id}`,email:e,captcha:t};libHelper.fetchData(i).then((e=>{this.requestProceedResponse(e)}))}requestProceedResponse(e){const t=e.content,i={isError:t.isError,propsButton:{button:this.elButtonProceed,action:!1},content:t};layout.requestProceedResponse(i)}updateHtml(){this.elFieldEmail=document.getElementById(this.idFieldEmail),this.elButtonProceed=document.getElementById(this.idButtonProceed)}}export class Layout{changeStep(e){window[e].draw()}handleChange(e,t){const i=this.validateForm(e,t),n=e.parentNode.querySelector(".form__input-validation");let o="";i||(o=libCode.getCode(t).translation),n&&(n.innerText=o)}handleShowPassword(e){const t="xlink:href",i=e.parentNode.querySelector("input"),n=e.querySelector("svg use"),o=n.getAttribute(t).split("#"),l=i.type,s="password"!==l?"password":"text",d="password"!==l?"eye_close":"eye_open",a=`${o[0]}#${d}`;i.type=s,n.setAttribute(t,a)}async init(){const e=this.getPage();await libTranslate.translate("interface"),await libTranslate.translate("login"),await libTranslate.translate("default"),this.translation=libTranslate?.translation,this.changeStep(e)}getPage(){const e=libHelper.getUrlParameter("page"),t=e=>e.frontEndClass,i=t(resetPassword);let n=t(signIn);return e===i&&(n=i),n}redirectPlay(){window.location.href="./play/"}requestProceedResponse(e){const t=e.isError,i=e.propsButton,n=e.content;t&&(libHelper.resetCaptcha(),libHelper.toggleButtonEnabled(i)),libHelper.handleResponse(n)}validateForm(e,t){let i;if("emailInvalid"===t)i=libHelper.validateEmail(e);else i=libHelper.validateFormFieldEmpty(e);return i}}export class ResendConfirmation{constructor(){this.id="resend_confirmation",this.idFieldEmail=`${this.id}_field_email`,this.idButtonProceed=`${this.id}_button_proceed`,this.frontEndClass="resendConfirmation"}draw(){const e=component.drawPage({id:this.id,title:layout.translation?.login?.default?.resend,content:this.drawPage()});component.insertHTML(e),libHelper.renderCaptcha(),this.updateHtml(),this.elFieldEmail.focus()}drawPage(){const e=component.drawFormFieldEmail({id:this.idFieldEmail}),t=component.drawButtonProceed({id:this.idButtonProceed,label:layout.translation?.login?.default?.send,click:`${this.frontEndClass}.handleProceed();`}),i=component.drawFormButtonBack();return`\n            ${e}\n            ${component.drawCaptcha()}\n            <div class="ds-page__footer">\n                ${t}\n            </div>\n            ${i}\n        `}handleProceed(){const e=layout.validateForm(this.elFieldEmail,"emailInvalid"),t=libHelper.validateCaptcha(),i=e&&t,n={button:this.elButtonProceed,action:!0};if(i)return libHelper.toggleButtonEnabled(n),this.requestProceed()}async requestProceed(){const e=this.elFieldEmail.value,t=libHelper.getCaptchaResponse(),i={endpoint:`login/${this.id}`,email:e,captcha:t};libHelper.fetchData(i).then((e=>{this.requestProceedResponse(e)}))}requestProceedResponse(e){const t=e.content,i={isError:t.isError,propsButton:{button:this.elButtonProceed,action:!1},content:t};layout.requestProceedResponse(i)}updateHtml(){this.elFieldEmail=document.getElementById(this.idFieldEmail),this.elButtonProceed=document.getElementById(this.idButtonProceed)}}export class ResetPassword{constructor(){this.id="reset_password",this.idFieldPassword=`${this.id}_field_password`,this.idButtonProceed=`${this.id}_button_proceed`,this.frontEndClass="resetPassword"}draw(){const e=component.drawPage({id:this.id,title:layout.translation?.login?.default?.password_reset,content:this.drawPage()});component.insertHTML(e),libHelper.renderCaptcha(),this.updateHtml(),this.elFieldPassword.focus()}drawPage(){const e=component.drawFormFieldPassword({id:this.idFieldPassword,label:layout.translation?.login?.default?.password_new}),t=component.drawButtonProceed({id:this.idButtonProceed,label:layout.translation?.login?.default?.send,click:`${this.frontEndClass}.handleProceed();`});return`\n            ${e}\n            ${component.drawCaptcha()}\n            <div class="ds-page__footer">\n                ${t}\n            </div>\n        `}handleProceed(){const e=layout.validateForm(this.elFieldEmail,"emailInvalid"),t=libHelper.validateCaptcha(),i=e&&t,n={button:this.elButtonProceed,action:!0};if(i)return libHelper.toggleButtonEnabled(n),this.requestProceed()}async requestProceed(){const e=this.elFieldEmail.value,t=libHelper.getCaptchaResponse(),i={endpoint:`login/${this.id}`,email:e,captcha:t};libHelper.fetchData(i).then((e=>{this.requestProceedResponse(e)}))}requestProceedResponse(e){const t=e.content,i={isError:t.isError,propsButton:{button:this.elButtonProceed,action:!1},content:t};layout.requestProceedResponse(i)}updateHtml(){this.elFieldPassword=document.getElementById(this.idFieldPassword),this.elButtonProceed=document.getElementById(this.idButtonProceed)}}export class SignIn{constructor(){this.id="sign_in",this.idFieldEmail=`${this.id}_field_email`,this.idFieldPassword=`${this.id}_field_password`,this.idButtonProceed=`${this.id}_button_proceed`,this.frontEndClass="signIn"}draw(){const e=component.drawPage({id:this.id,title:layout.translation?.interface?.action?.login,content:this.drawPage()});component.insertHTML(e),libHelper.renderCaptcha(),this.updateHtml(),this.elFieldEmail.focus()}drawPage(){const e=component.drawFormFieldEmail({id:this.idFieldEmail}),t=component.drawFormFieldPassword({id:this.idFieldPassword}),i=component.drawButtonProceed({id:this.idButtonProceed,label:layout.translation?.interface?.action?.login,click:`${this.frontEndClass}.handleProceed();`}),n=component.drawLink({label:layout.translation?.login?.default?.forget,click:"layout.changeStep(`forgetPassword`)"}),o=component.drawLink({label:layout.translation?.login?.default?.sign_up,click:"layout.changeStep(`signUp`)"}),l=component.drawLink({label:layout.translation?.login?.default?.play_guest,click:`${this.frontEndClass}.handlePlayGuest();`});return`\n            ${e}\n            ${t}\n            ${n}\n            ${component.drawCaptcha()}\n            <div class="ds-page__footer">\n                ${i}\n            </div>\n            ${o}\n            ${l}\n        `}handleProceed(){const e=layout.validateForm(this.elFieldEmail,"emailInvalid"),t=layout.validateForm(this.elFieldPassword,"fieldInvalid"),i=libHelper.validateCaptcha(),n=e&&t&&i,o={button:this.elButtonProceed,action:!0};if(n)return libHelper.toggleButtonEnabled(o),this.requestProceed()}async requestProceed(){const e=this.elFieldEmail.value,t=this.elFieldPassword.value,i=libHelper.getCaptchaResponse(),n={endpoint:`login/${this.id}`,email:e,password:t,captcha:i};libHelper.fetchData(n).then((e=>{this.requestProceedResponse(e)}))}requestProceedResponse(e){const t=e.content.isError,i={button:this.elButtonProceed,action:!1};libHelper.toggleButtonEnabled(i),t||layout.redirectPlay()}handlePlayGuest(){const e=libVariable.account.guest;this.elFieldEmail.value=e.email,this.elFieldPassword.value=e.password,this.elButtonProceed.click()}updateHtml(){this.elFieldEmail=document.getElementById(this.idFieldEmail),this.elFieldPassword=document.getElementById(this.idFieldPassword),this.elButtonProceed=document.getElementById(this.idButtonProceed)}}export class SignUp{constructor(){this.id="sign_up",this.idFieldUserName=`${this.id}_field_user`,this.idFieldEmail=`${this.id}_field_email`,this.idFieldPassword=`${this.id}_field_password`,this.idFieldNewsletter=`${this.id}_field_newsletter`,this.idFieldTerms=`${this.id}_field_terms`,this.idButtonProceed=`${this.id}_button_proceed`,this.frontEndClass="signUp"}draw(){const e=component.drawPage({id:this.id,title:layout.translation?.login?.default?.sign_up,content:this.drawPage()});component.insertHTML(e),libHelper.renderCaptcha(),this.updateHtml(),this.elFieldUserName.focus()}drawPage(){const e=component.drawFormField({id:this.idFieldUserName,type:"text",label:layout.translation?.login?.default?.username,required:!0}),t=component.drawFormFieldEmail({id:this.idFieldEmail}),i=component.drawFormFieldPassword({id:this.idFieldPassword}),n=component.drawFormFieldCheckbox({id:this.idFieldNewsletter,label:layout.translation?.login?.default?.sign_up_accept_newsletter}),o=component.drawFormFieldCheckbox({id:this.idFieldTerms,label:layout.translation?.login?.default?.sign_up_accept_terms,required:!0}),l=component.drawButtonProceed({id:this.idButtonProceed,label:layout.translation?.login?.default?.register,click:"signUp.handleProceed();"}),s=component.drawLink({label:layout.translation?.login?.default?.resend,click:"layout.changeStep(`resendConfirmation`)"}),d=component.drawFormButtonBack();return`\n            ${e}\n            ${t}\n            ${i}\n            ${n}\n            ${o}\n            ${component.drawCaptcha()}\n            <div class="ds-page__footer">\n                ${l}\n            </div>\n            ${s}\n            ${d}\n        `}handleProceed(){const e=this.validateForm(),t=libHelper.validateCaptcha(),i=e&&t,n={button:this.elButtonProceed,action:!0};if(i)return libHelper.toggleButtonEnabled(n),this.requestProceed()}async requestProceed(){const e=this.elFieldEmail.value,t=this.elFieldUserName.value,i=this.elFieldPassword.value,n=libHelper.getCaptchaResponse(),o=this.elFieldTerms.checked,l=this.elFieldNewsletter.checked,s={endpoint:`login/${this.id}`,userName:t,email:e,password:i,captcha:n,isTerms:o,isNewsletter:l};libHelper.fetchData(s).then((e=>{this.requestProceedResponse(e)}))}requestProceedResponse(e){const t=e.content,i={isError:t.isError,propsButton:{button:this.elButtonProceed,action:!1},content:t};layout.requestProceedResponse(i)}updateHtml(){this.elFieldUserName=document.getElementById(this.idFieldUserName),this.elFieldEmail=document.getElementById(this.idFieldEmail),this.elFieldPassword=document.getElementById(this.idFieldPassword),this.elFieldNewsletter=document.getElementById(this.idFieldNewsletter),this.elFieldTerms=document.getElementById(this.idFieldTerms),this.elButtonProceed=document.getElementById(this.idButtonProceed)}validateForm(){let e=!0;const t=layout.validateForm(this.elFieldUserName,"fieldInvalid"),i=layout.validateForm(this.elFieldEmail,"emailInvalid"),n=layout.validateForm(this.elFieldPassword,"fieldInvalid"),o=this.elFieldTerms.checked;return t&&i&&n&&o||(e=!1),o||this.elFieldTerms.focus(),e}}
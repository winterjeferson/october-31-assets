export class Analytics{send(e,t){const a=libHelper.isLocalHost(),i="function"==typeof gtag;!a&&i&&dataLayerModify.update({event:"gaEvent",category:e,action:t,label:"game"})}}export class Animation{constructor(){this.arrEfferctDefault=["animation-damage-value","animation-skill-cut","animation-skill-punch"],this.arrEfferctMagic=["animation-skill-bow","animation-skill-wand","animation-skill-fireball","animation-skill-arrow","animation-skill-power","animation-skill-stone"],this.arrEfferctCharacter=[],Array.prototype.push.apply(this.arrEfferctCharacter,this.arrEfferctDefault),Array.prototype.push.apply(this.arrEfferctCharacter,this.arrEfferctMagic)}animateDamage(e,t,a){e===gameHtml.elCharacter?(this.animateDamageCharacter(t),this.removeAnimationEnemy()):(this.animateDamageEnemy(),this.removeAnimationCharacter()),a&&setTimeout((function(){gameBattle.buildResult("character")}),700)}animateDamageCharacter(e){const t=gameData.getPlayerEquipments();let a,i;!1!==e?(i=this.animateDamageVerifyKind(e),gameAudio.buildSoundEffect(e)):(""!==t.weapon&&(a=gameConfiguration.getItemKind(t.weaponKind),gameAudio.buildSoundEffect("weapon")),i=this.animateDamageVerifyKind(a)),gameHtml.elCharacterDamage.classList.add("animation-damage-value"),gameHtml.elCharacterEffect.classList.add(i)}animateDamageEnemy(){if(null===gameHtml.elEnemyEffect)return;const e=gameData.getEnemy(),t=this.animateDamageVerifyKind(e.race);gameHtml.elEnemyCurrentDamage.classList.add("animation-damage-value"),gameHtml.elEnemyEffect.classList.add(t),gameAudio.buildSoundEffect("enemy")}animateDamageVerifyKind(e){switch(e){case"arrow":case"power":case"stone":case"fireball":return this.animateDamageCss(e);case"axe":case"sword":case"spider":case"rat":return this.animateDamageCss("cut");case"wand":return this.animateDamageCss("wand");case"bow":return this.animateDamageCss("bow");default:return this.animateDamageCss("punch")}}animateDamageCss(e){switch(e){case"arrow":case"bow":case"wand":case"power":case"stone":case"fireball":case"cut":return`animation-skill-${e}`;default:return"animation-skill-punch"}}removeAnimationCharacter(){libHelper.removeClass(gameHtml.elCharacterEffect,this.arrEfferctCharacter),libHelper.removeClass(gameHtml.elCharacter.querySelector(".damage"),["animation-damage-value"])}removeAnimationEnemy(){libHelper.removeClass(gameHtml.elEnemyEffect,this.arrEfferctDefault),libHelper.removeClass(gameHtml.elEnemyCurrent.querySelector(".damage"),["animation-damage-value"])}animateBuildSkin(e){return"character"===e?gameHtml.elCharacter?.querySelector(".person")?.querySelectorAll(".sprite-box"):"enemy"===e?gameHtml.elEnemyCurrent?.querySelectorAll(".skin"):void 0}animateMove(e,t,a){const i=this.animateBuildSkin(e,t),s=["stand-top","stand-right","stand-bottom","stand-left","walk-top","walk-bottom","walk-right","walk-left","idle-bottom","idle-bottom-sleep"];i&&i.forEach((e=>{libHelper.removeClass(e,s),libHelper.addClass(e,a)}))}animateEmote(e,t,a,i){let s="",n="";"character"===e?(s="animation-balloon-fast",n=gameHtml.elCharacterEmote):(s="animation-balloon-slow",n=gameHtml.elEnemyCurrentEmote),"addEmote"===a?(n.querySelector(".text").innerHTML=i,libHelper.addClass(n,s),libHelper.show(n)):(libHelper.removeClass(n,s),libHelper.hide(n))}animateSleep(e,t){t?(gameCharacter.isIdle=!0,this.animateMove(e,!1,"idle-bottom-sleep"),this.animateEmote(e,!1,"addEmote","ZzZz")):(gameCharacter.isIdle=!1,this.animateMove(e,!1,cssStandBottom),this.animateEmote(e,!1,"removeEmote",""))}animatePosition(e){if(!isNaN(e.vertical)&&!isNaN(e.vertical))return new Promise((t=>{const a=gameData.getPlayerAttributes(),i=libHelper.getTranslateValue(e.target),s=Math.floor(i.y),n=Math.floor(i.x),l=!1===e.vertical?s:Math.floor(e.vertical),r=[{transform:`translate(${n}px, ${s}px)`},{transform:`translate(${!1===e.horizontal?n:Math.floor(e.horizontal)}px, ${l}px)`}],o={duration:void 0!==e.speed?e.speed:a.speed,iterations:1,easing:void 0!==e.easing?e.easing:"linear",fill:"both"};e.target.animate(r,o).onfinish=e=>{t(e)}}))}}export class Audio{constructor(){this.isPlayMusic=!0,this.isPlaySoundEffect=!0,this.currentVolumeMusic=1,this.currentVolumeSoundEffect=1,this.volumeMaximum=1,this.volumeMinimum=0,this.volumeStepTotal=10,this.volumeStep=this.volumeMaximum/this.volumeStepTotal,this.pathAudio=`${globalPathAssets}audio/${globalVersion.audio}/`,this.themeTorgotes=`${this.pathAudio}theme-torgotes.mp3`,this.themeBattle=`${this.pathAudio}theme-battle.mp3`,this.soundEffect=`${this.pathAudio}sound-effect.mp3`,this.storageMusicPause="musicPause",this.storageMusicVolume="musicVolume",this.storageSoundEffectPause="soundEffectPause",this.storageSoundEffectVolume="soundEffectVolume"}buildSound(){const e=libHelper.useStorage({action:"get",target:this.storageMusicPause});gamePageSetting.elMusic.setAttribute("src",this.themeTorgotes),gamePageSetting.elMusicBattle.setAttribute("src",this.themeBattle),gamePageSetting.elSoundEffect.setAttribute("src",this.soundEffect),e||gamePageSetting.elMusic.setAttribute("autoplay",!0)}buildMusic(e){return this[`buildMusic${libHelper.capitalize(e)}`]()}buildMusicMusic(){gamePageSetting.update();const e=libHelper.useStorage({action:"get",target:this.storageMusicVolume}),t=libHelper.useStorage({action:"get",target:this.storageMusicPause});"paused"!==t||null===t?(gameBattle.isBattle?gamePageSetting.elMusicBattle.play():(gamePageSetting.elMusic.setAttribute("src",this.themeTorgotes),gamePageSetting.elMusic.play()),this.isPlayMusic=!0,libHelper.addClass(gamePageSetting.elMusicPlay?.parentNode,cssDisplayNone),libHelper.removeClass(gamePageSetting.elMusicPause?.parentNode,cssDisplayNone)):(this.isPlayMusic=!1,libHelper.removeClass(gamePageSetting.elMusicPlay?.parentNode,cssDisplayNone),libHelper.addClass(gamePageSetting.elMusicPause?.parentNode,cssDisplayNone)),null===e?libHelper.useStorage({action:"set",target:this.storageMusicVolume,value:this.currentVolumeMusic}):this.currentVolumeMusic=libHelper.useStorage({action:"get",target:this.storageMusicVolume}),this.buildVolume("result","music",this.currentVolumeMusic)}buildMusicBattle(){const e=libHelper.useStorage({action:"get",target:this.storageMusicPause});"paused"!==e&&null===e&&(gamePageSetting.elMusicBattle.currentTime=0,gamePageSetting.elMusic.pause(),gamePageSetting.elMusicBattle.play(),gamePageSetting.elMusic.volume=0)}buildMusicBattleEnd(){const e=libHelper.useStorage({action:"get",target:this.storageMusicPause});"paused"!==e&&null===e&&(gamePageSetting.elMusicBattle.pause(),gamePageSetting.elMusic.play(),gamePageSetting.elMusic.volume=this.currentVolumeMusic)}buildMusicSoundEffect(){const e=libHelper.useStorage({action:"get",target:this.storageSoundEffectPause}),t=libHelper.useStorage({action:"get",target:this.storageSoundEffectVolume}),a=gamePageSetting.elSoundEffectPause?.parentNode,i=gamePageSetting.elSoundEffectPlay?.parentNode;"paused"!==e||null===e?(this.isPlaySoundEffect=!0,libHelper.addClass(i,cssDisplayNone),libHelper.removeClass(a,cssDisplayNone)):(this.isPlaySoundEffect=!1,libHelper.removeClass(i,cssDisplayNone),libHelper.addClass(a,cssDisplayNone)),null===t?libHelper.useStorage({action:"set",target:this.storageSoundEffectVolume,value:this.currentVolumeSoundEffect}):this.currentVolumeSoundEffect=libHelper.useStorage({action:"get",target:this.storageSoundEffectVolume}),this.buildVolume("result","sound_effect",this.currentVolumeSoundEffect)}buildVolume(e,t,a){switch(e){case"increase":return this.buildVolumeIncrease(t,a);case"decrease":return this.buildVolumeDecrease(t,a);case"result":return this.buildVolumeResult(t,a)}}buildVolumeIncrease(e,t){const a=this.fixNumber(Number(t)+this.volumeStep);a<=this.volumeMinimum&&(a=this.volumeMinimum),this.buildVolumeResult(e,a)}buildVolumeDecrease(e,t){const a=this.fixNumber(Number(t)-this.volumeStep);a>=this.volumeMaximum&&(a=this.volumeMaximum),this.buildVolumeResult(e,a)}buildVolumeResult(e,t){const a=100*t+"%",i=gamePageSetting.elMusicPlay?.parentNode.parentNode.parentNode.parentNode.parentNode.querySelector(".progress-bar"),s=gamePageSetting.elSoundEffectPlay?.parentNode.parentNode.parentNode.parentNode.parentNode.querySelector(".progress-bar");"music"===e?(i&&(i.style.width=a),libHelper.useStorage({action:"set",target:this.storageMusicVolume,value:t}),gamePageSetting.elMusic.volume=t,gamePageSetting.elMusicBattle.volume=t,this.currentVolumeMusic=t):(s&&(s.style.width=a),libHelper.useStorage({action:"set",target:this.storageSoundEffectVolume,value:t}),gamePageSetting.elSoundEffect.volume=t,this.currentVolumeSoundEffect=t)}buildSoundEffect(e){if(this.isPlaySoundEffect)switch(e){case"weapon":return this.buildSoundEffectWeapon();case"enemy":return this.buildSoundEffectEnemy();default:return this.buildSoundEffectMagic(e)}}buildSoundEffectWeapon(){let e={2:"#t=1.0,1.5",3:"#t=2.9,3.5",4:"#t=2.2,2.8",20:"#t=5.1,5.4",21:"#t=5.1,5.4"}[gameData.getPlayerEquipments().weaponKind];void 0===e&&(e="#t=0.1,0.4"),this.playSoundEffect(e)}buildSoundEffectEnemy(){let e={worm:"#t=6.0,6.3",rat:"#t=4.1,4.7"}[gameData.getEnemy().race];void 0===e&&(e="#t=5.1,5.4"),this.playSoundEffect(e)}buildSoundEffectMagic(e){let t={magic_shield:"#t=6.9,8.2"}[e];void 0===t&&(t="#t=5.1,5.4"),this.playSoundEffect(t)}init(){this.buildVolume(),this.buildMusicMusic(),this.buildMusicSoundEffect()}fixNumber(e){return Number(parseFloat(e).toPrecision(12))}playSoundEffect(e){gamePageSetting.elSoundEffect.setAttribute("src",this.soundEffect+e),gamePageSetting.elSoundEffect.play()}}export class Battle{constructor(){this.isLoot=!0,this.isBattle=!1,this.isBattleAttack=!0,this.enemy=0,this.speed=300,this.turnDefense=0,this.namespace="Game",this.classBackEnd="&c=Battle"}buildLootNotification(e){this.isLoot=0!==e}build(e){gameHtml.updateEnemy(e);const t=gameHtml.elEnemyCurrent.getAttribute("data-kind"),a=gameHtml.elEnemyCurrent.querySelector(".animation-balloon"),i=gameHtml.elBattlefield;this.isBattle=!0,this.enemy=e,this.displayEnemy("hide"),libHelper.hide(a),libHelper.show(i),gameLayout.resize(),gameNpc.view("disabled"),gameAnimation.animateMove("character",!1,"stand-top"),gameEnemy.buildAnimationKind(this.enemy,t),gameAudio.buildMusic("battle"),this.loadEnemy()}buidDamage(e){const t=e.el.querySelector(".damage"),a=gameTranslation?.translation?.game?.battle.miss,i=e.damage>0?e.damage:a;t.innerHTML=i}buildResult(e){"character"===e?this.buildResultWin():this.buildResultLose(),this.unbuild(),gameAnimation.removeAnimationCharacter(),gameAnimation.removeAnimationEnemy(),gameAudio.buildMusic("battleEnd"),gameCamera.center(),gamePageAchievement.isUpdate=!1,gamePageAttribute.isUpdate=!1}buildResultWin(){const e=gameEnemy.lootId,t=gameEnemy.lootAmount,a=gameTranslation?.translation?.game?.battle.win;if(0===t)return gameInventory.drawNoRoom();gameInventory.addItem({id:e,quantity:t,text:a})}buildResultLose(){const e=gameData.getPlayerAttributes(),t=gameTranslation?.translation?.game?.battle.lose;libNotification.add({content:t}),gameData.setPlayerAttributes({hitPoint:e.hitPointMaximum,manaPoint:e.manaPointMaximum}),gameLayout.updateBarStatus()}buildTurn(e){const t="verify"===e;gameLayout.updateBarBattle(),t?this.buildTurnVerify():this.buildTurnPass()}buildTurnVerify(){const e=this.namespace,t=`${this.classBackEnd}&m=buildTurn&p=initial`;libHelper.ajax({namespace:e,parameter:t}).then((e=>this.buildTurnVerifyResponse({response:e})))}buildTurnVerifyResponse(e){const t=gameHtml.elEnemyCurrent.querySelector(".progress-bar");libHelper.show(t.parentNode),t.style.width="100%",this.buildTurnPassResponse(e)}buildTurnPass(e=""){const t=""!==e?e:"verify",a=this.namespace,i=`${this.classBackEnd}&m=buildTurn&p=${t}`;libHelper.ajax({namespace:a,parameter:i}).then((e=>this.buildTurnPassResponse({response:e})))}buildTurnPassResponse(e){"c"===e.response?(this.isBattleAttack=!1,this.enable()):gameEnemy.moveBattle(gameBattle.enemy,"go")}displayEnemy(e){const t=gameHtml.elEnemy.querySelectorAll(".tile");t&&t.forEach((t=>{const a=t.parentNode;"hide"===e?gameHtml.elEnemyCurrent!==a&&libHelper.addClass(a,cssDisplayNone):libHelper.removeClass(a,cssDisplayNone)}))}disable(){libHelper.show(gameResource.elResource),libHelper.hide(gameHtml.elBattle),gameTutorial.build("unbuild",!1)}enable(){const e=gameData.getPlayerAttributes().experience<=1;libHelper.hide(gameResource.elResource),libHelper.show(gameHtml.elBattle),gameLayout.centerBattleField(),gameAnimation.removeAnimationEnemy(),gameAnimation.removeAnimationCharacter(),e?gameTutorial.build("build","combat"):gameTutorial.build("unbuild",!1)}async loadEnemy(){const e=gameHtml.elEnemyCurrent,t=e.getAttribute("data-race"),a=e.getAttribute("data-level"),i=`&c=Enemy&m=build&enemy=${t}&level=${Number(a)}`;await libHelper.ajax({namespace:"Game",parameter:i}).then((e=>{this.loadEnemyResponse({response:e,hitPoint:e,race:t,level:a})}))}loadEnemyResponse(e){const t=e.race,a=Number(e.level),i=Number(e.hitPoint),s=i,n=e.response;gameAnalytics.send("battle build enemy",`${t} level ${a}`),gameLayout.decodeMessage(n),gameData.setEnemy({hitPoint:i,hitPointMaximum:s,race:t,level:a}),this.buildTurn("verify")}unbuild(){const e=gameEnemy[`enemy${this.enemy}Position`];libHelper.hide(gameHtml.elBattlefield),gameMap.setPosition({target:gameHtml.elCharacter,tile:gameCharacter.dataTile}),this.isBattle=!1,this.isBattleAttack=!0,gameAnimation.animateMove("character",!1,cssStandBottom),gameCharacter.updatePosition(),this.displayEnemy("show"),this.disable(),gameData.resetEnemy(),libHelper.remove(gameHtml.elEnemyCurrent),libHelper.removeInArray({arr:gameEnemy.arrEnemyPosition,value:e}),gameNpc.view("enabled")}}export class BattleSkill{constructor(){this.namespace="Game",this.classBackEnd="&c=Battle"}async attack(e){if(gameBattle.isBattleAttack)return;const t=this.namespace,a=`${this.classBackEnd}&m=buildSkill&skill=${e}`;gameBattle.isBattleAttack=!0,await libHelper.ajax({namespace:t,parameter:a}).then((t=>{this.attackResponse({data:t,attack:e})}))}attackResponse(e){const t=e.data,a=JSON.parse(t),i=a.battle,s="physical"!==e.attack&&e.attack,n=Number(i.lootId),l=Number(i.lootAmount),r=Number(i.damage),o=Number(i.distribute),c=i.levelUp,d="win"===i.win;gameData.setPlayerAttributes({hitPoint:i.characterHitPoint,hitPointMaximum:i.characterHitPointTotal,manaPoint:i.characterManaPoint,manaPointMaximum:i.characterManaPointTotal,distribute:i.distribute,experience:i.experience}),gamePageInventory.buildEquipment(),gameAnalytics.send("battle skill",s),gameLayout.decodeMessage(t),this.updateStatus(a),this.attackRemoveEquipment(),d?(gameBattle.buildLootNotification(n),gameMove.moveBattle(r,!0,n,l,c,o,s)):gameMove.moveBattle(r,!1,!1,!1,!1,!1,s)}attackByClass(){switch(gameData.getPlayerAttributes().class){case 0:return this.attackPower();case 1:return this.attackFireball();case 2:return this.attackArrow();case 3:return this.attackStone()}}attackPhysical(){this.attack("physical")}attackFireball(){this.attackUseMana("fireball")}attackStone(){this.attackUseMana("stone")}attackPower(){this.attackUseMana("power")}attackArrow(){const e=gameData.getPlayerEquipments();if(!("bow"===gameConfiguration.getItemKind(e.weaponKind)))return this.notifyEquipment();this.attackUseMana("arrow")}attackUseMana(e){if(!this.hasMana(e))return this.notifyNoMana();this.attack(e)}attackRemoveEquipment(){const e=gameEquipment.equipments,t=Object.entries(e),a=gameHtml.elCharacter;let i=[];t.forEach((([t,a])=>{const s=e[t];null===gameData.getPlayerEquipments()[s]&&i.push(s)})),i.length>0&&i.forEach((e=>{gameCharacter.removeEquipment({el:a,part:e})}))}hasMana(e){const t=gameData.getPlayerAttributes(),a=gameConfiguration.getClassName(t.class),i=gameConfiguration.skills[a].skill[e].cost;return t.manaPoint>=i}notify(e){const t=gameTranslation?.translation?.game?.battle[e];gameBattle.isBattle&&libNotification.add({content:t})}notifyEquipment(){this.notify("wrong_equipment")}notifyNoMana(){this.notify("no_mana")}async run(){if(gameBattle.isBattleAttack)return;const e=this.namespace,t=`${this.classBackEnd}&m=buildSkill&skill=run`;await libHelper.ajax({namespace:e,parameter:t}).then((e=>{this.runResponse(e)}))}runResponse(e){const t=JSON.parse(e),a=gameTranslation?.translation?.game?.battle.run_fail;if(gameLayout.decodeMessage(t.battle),gameAnalytics.send("battle skill","run"),"run"===t.battle)return gameBattle.unbuild();libNotification.add({content:a,color:"red"}),gameBattle.buildTurn("e")}updateStatus(e){const t=e.n,a=e.battle;this.updateStatusCharacter(a),this.updateStatusEnemy(a),t&&libNotification.add({content:t})}updateStatusCharacter(e){const t=Number(e.experience),a=Number(e.characterHitPoint),i=Number(e.characterHitPointTotal),s=Number(e.characterManaPoint),n=Number(e.characterManaPointTotal),l=Number(e.wk);t&&gameData.setPlayerAttributes({experience:t}),a&&gameData.setPlayerAttributes({hitPoint:a}),i&&gameData.setPlayerAttributes({hitPointMaximum:i}),s&&gameData.setPlayerAttributes({manaPoint:s}),n&&gameData.setPlayerAttributes({manaPointMaximum:n}),l&&gameData.setPlayerEquipments({weaponKind:l})}updateStatusEnemy(e){const t=Number(e.enemyHitPoint),a=Number(e.enemyHitPointTotal);t&&gameData.setEnemy({hitPoint:t}),a&&gameData.setEnemy({hitPointMaximum:a})}}export class Camera{update(){this.limitBottom=Number(-(gameLayout.mapHeight-gameLayout.windowHeight+gameLayout.barMainHeight)),this.limitRight=Number(-(gameLayout.mapWidth-gameLayout.windowWidth)),this.halfTile=gameLayout.tileSize/2}center(e=!1){this.update();const t=gameData.getPlayerAttributes(),a=this.centerGetVertical(),i=this.centerGetHorizontal(),s=!1!==e?e:t.speed,n={target:gameHtml.elGame,vertical:a,horizontal:i,easing:"ease-in-out",speed:s};gameAnimation.animatePosition(n)}centerGetVertical(){const e=libHelper.getTranslateValue(gameHtml.elCharacter).y,t=gameLayout.barMainHeight/2,a=gameLayout.windowHeight/2,i=Number(-e+a-this.halfTile-t);return this.centerConditional(i,this.limitBottom)}centerGetHorizontal(){const e=libHelper.getTranslateValue(gameHtml.elCharacter).x,t=gameLayout.windowWidth/2,a=Number(-e+t-this.halfTile);return this.centerConditional(a,this.limitRight)}centerConditional(e,t){return e<t?t:e>0?0:e}}export class Character{buildLevelUp(e){const t=gameTranslation?.translation?.game?.generic.level_up;this.distribute=Number(e),libNotification.add({content:t}),gameLayout.updateBar()}buildCharacterAppearancePerson(e){const t=gameEquipment.equipments,a=Object.entries(t),i=e.el,s=e.elSetting;let n,l;switch(s){case"class":n=document.getElementById(`select_class_${i}`),l=`class${i}`;break;case"loadCharacter":n=document.getElementById(`select_character_${i}`),l="loadedCharacter";break;default:n=i,l=s}a.forEach((([t,a])=>{const i=e.css,s=this.buildCharacterAppearancePersonGetEquipment(l,t);this.buildCharacterAppearance({target:n,part:a,newClass:s,css:i})})),this.buildCustomization(e.el,e.elSetting)}buildCharacterAppearancePersonGetEquipment(e,t){const a="gameNpc"===e.slice(0,7),i=gameEquipment.equipments[t],s="player"===e||"customize"===e||"customizeBuy"===e,n=gameData.getPlayerEquipments();if(a){const t=i,a=window[e].appearance;if(!a)return;return a[t]}if(s)return n[i];const l=this[e];return i&&l?l[i]:void 0}buildCharacterAppearance(e){const t=e.newClass,a=e.target;if(!t||!a)return;const i="object"==typeof t?Number(t.il):t,s=gameLayout.findInObject(globalLoot,"id",i,"cssPerson"),n=e.part,l=e.classToKeep,r=a.querySelector(`[data-element="${n}"]`);if(!r||!s)return;const o={el:a,part:n};this.removeEquipment(o),libHelper.addClass(r,["sprite-box",n,s]),""!==l&&!1!==l&&libHelper.addClass(r,l)}buildCustomization(e,t){switch(t){case"player":case"customize":return this.buildCustomizationPlayer(e);case"customizeBuy":return this.buildCustomizationBuy();case"loadCharacter":return this.buildCustomizationLoadCharacter(e);default:return this.buildCustomizationDefault(e,t)}}buildCustomizationPlayer(e){const t=gameData.getPlayerCustomizations(),a=gameCustomization.colors,i=gameCustomization.skins,s=t.skin,n=t.eye,l=t.hair,r=i[s],o=a[n],c=a[l];if(!r||!r||!c)return;const d={el:e,skin:r.css,eye:o.css,hair:c.css};this.customize(d)}buildCustomizationBuy(){let e=document.getElementById("list_customization_buy_character");const t=gameCharacterSelect.arrCustomizationSkin[this.customizationSkin].css,a=gameCharacterSelect.arrCustomizationColor[this.customizationEye].css,i=gameCharacterSelect.arrCustomizationColor[this.customizationHair].css;this.customize({el:e,skin:t,eye:a,hair:i})}buildCustomizationLoadCharacter(e){const t={el:document.getElementById(`select_character_${e}`),skin:gameCharacterSelect.arrCustomizationSkin[Number(this.loadedCharacter.customization_skin)].css,eye:gameCharacterSelect.arrCustomizationColor[Number(this.loadedCharacter.customization_eye)].css,hair:gameCharacterSelect.arrCustomizationColor[Number(this.loadedCharacter.customization_hair)].css};this.customize(t)}buildCustomizationDefault(e,t){const a=e,i=window[t].appearance;if(!i)return;const s=i.customization_skin,n=i.customization_eye,l=i.customization_hair,r={el:a,skin:gameCharacterSelect.arrCustomizationSkin[s].css,eye:gameCharacterSelect.arrCustomizationColor[n].css,hair:gameCharacterSelect.arrCustomizationColor[l].css};this.customize(r)}customize(e){const t=e.el;if(!t)return;const a=gameData.getPlayerCustomizations(),i=t.querySelector('[data-element="skin"]'),s=t.querySelector('[data-element="eye_color"]'),n=t.querySelector('[data-element="hair"]');libHelper.addClass(i,e.skin),libHelper.addClass(s,e.eye),libHelper.addClass(n,e.hair);const l=a.clothes;gameCustomization.applyClothes(t,l)}customizePlayer(){const e=gameHtml.elCharacter,t={el:e,elSetting:"player",css:cssStandBottom};gameAnimation.animateMove("character",!1,cssStandBottom),this.customizeClear({el:e}),this.buildCharacterAppearancePerson(t)}customizeClear(e){const t=gameCustomization.colors,a=gameCustomization.skins;t&&(t.forEach((t=>{const a=e.el.querySelector('[data-element="eye_color"]'),i=e.el.querySelector('[data-element="hair"]');libHelper.removeClass(a,t.css),libHelper.removeClass(i,t.css)})),a&&a.forEach((t=>{const a=e.el.querySelector('[data-element="skin"]');libHelper.removeClass(a,t.css)})))}equip(e,t){gameData.setPlayerEquipments({[e]:t})}init(){this.reset()}removeEquipment(e){const t=e.el,a=e.part;if(!t||!a)return;const i=t.querySelector(`[data-element="${a}"]`);if(!i)return;const s=i.classList;s.forEach((e=>{"g-"===e.substring(0,2)&&i.classList.remove(e)}))}recoverStatus(e,t){this.recover(e,t),gameLayout.updateBar()}recover(e,t){const a=this[`${e}Maximum`];this[e]+=Number(t),this[e]>=a&&(this[e]=a)}reset(){this.dataTile=gameConfiguration.player.map.initial.tile,this.customizeClear({el:gameHtml.elCharacter}),this.unequipAll(),gameData.resetPlayer(),gameMap.reset(),gamePage.resetPages()}updatePosition(){gameMap.setPosition({target:gameHtml.elCharacter,tile:this.dataTile});let e=gameMap.getPosition({target:gameHtml.elCharacter,tile:this.dataTile,coordinate:"x"})*gameLayout.tileSize,t=gameMap.getPosition({target:gameHtml.elCharacter,tile:this.dataTile,coordinate:"y"})*gameLayout.tileSize,a=gameAnimation.animatePosition({target:gameHtml.elCharacter,vertical:t,horizontal:e,speed:0});isNaN(t)||isNaN(e)||a.then((()=>gameCamera.center(0)))}unequip(e){const t=gameLayout.findInObject(globalLoot,"id",Number(e),"cssPerson"),a=gameLayout.findInObject(globalLoot,"id",Number(e),"kind"),i=gameHtml.elCharacter.querySelector(`[data-element="${a}"]`);t&&a&&i&&libHelper.removeClass(i,t)}unequipAll(){const e=gameHtml.elCharacter;gameEquipment.equipments.forEach((t=>{this.removeEquipment({el:e,part:t})}))}updateData(e){gameConfiguration.isDevelop&&(console.log("updateData() character"),console.log(e))}}export class CharacterSelect{constructor(){this.currentDirection="bottom",this.classes={},this.arrCssWalk=["walk-bottom","walk-top","walk-right","walk-left"],this.handlePageCharacterCustomizeSkin=this.buildCharacterCustomizeAppearanceSkin.bind(this),this.handlePageCharacterCustomizeHair=this.buildCharacterCustomizeAppearanceHair.bind(this),this.namespace="Game",this.classBackEnd="&c=Character"}buildCharacterSelect(){gamePage.open({page:"page_character_select",position:"middle"}),this.buildCharacterSelectList()}buildCharacterCustomize(){const e=gameData.getPlayerAttributes(),t=gameConfiguration.getClassName(e.class),a=this.elPageCharacterSelectCustomize.querySelector(".card-title");gamePage.open({page:"page_character_select_customize",position:"middle"}),this.update(),this.elPageCharacterCustomizeName.focus();const i=this.getClassTranslation(t).name;a.innerHTML=i}buildCharacterSelectList(){const e=`${this.classBackEnd}&m=buildCharacter`,t=this.namespace;let a=libHelper.ajax({namespace:t,parameter:e});this.update(),gamePageCharacterSelect.elPageList.innerHTML="",a.then((e=>this.buildCharacterSelectListResponse(e)))}buildCharacterSelectListResponse(e){const t=JSON.parse(e),a=Object.entries(t),i=gamePageSetting.eMail===gameConfiguration.account.guest.email;let s,n="";if(a.forEach((([e,a])=>{this.elPageCharacterSelect.querySelector(`[data-id="${a.id}"]`)||(n+=this.buildCharacterSelectListLayout(t,e))})),gamePageCharacterSelect.elPageList.insertAdjacentHTML("beforeBegin",n),i){const e=gamePageCharacterSelect.elPageList.querySelector('[data-id="button_delete"]');if(!e)return;s=e.parentNode,libHelper.addClass(s,"hide")}t.length>=1?(s=this.elPageCharacterSelectClassBack,this.requestVerfyNew(),libHelper.addClass(s,"show")):(s=this.elPageCharacterSelectClassBack,libHelper.addClass(s,"hide"),this.buildCharacterSelectClass())}buildCharacterSelectClass(){this.update();const e=gameConfiguration.getPlayerClass();let t="";gamePageCharacterSelectCustomize.init(),this.elPageCharacterSelectClassList.innerHTML="",e.forEach((e=>{const a=e[0],i=e[1].id;t+=this.buildCharacterSelectClassLayout(a,i)})),this.elPageCharacterSelectClassList.insertAdjacentHTML("afterbegin",t),gamePage.open({page:"page_character_select_class",position:"middle"})}buildCharacterSelectClassLayout(e,t){const a=this.getClassTranslation(e),i=a.name,s=a.description,n=this.classes[e];n.animation=cssWalkBottom;const l=gameComponent.buildPerson(n);return`\n        <div class="${gameLayout.classResponsiveBoxBig}">\n           <div class="card">\n               <header>\n                   <h4 class="card-title">${i}</h4>\n               </header>\n               <div class="card-body">\n                   <div class="responsive-row">\n                       <div class="responsive-column-regular-12">\n                           <div class="character-select item-box" id="select_class_${t}">\n                                ${l}\n                           </div>\n                       </div>\n                   </div>\n                   <div class="responsive-row">\n                       <div class="responsive-column-regular-12">\n                           <div class="padding-big">\n                                ${s}\n                           </div>\n                       </div>\n                   </div>\n               </div>\n               <footer>\n                   <nav class="menu menu-horizontal">\n                       <ul>\n                           <li>\n                               <button type="button" class="button button-regular button-green" data-class="${t}" onclick="gameCharacterSelect.handleBuildCharacterSelectClassButton(this)">\n                                    ${gameTranslation?.translation?.interface?.action?.select}\n                               </button>\n                           </li>\n                       </ul>\n                   </nav>\n               </footer>\n           </div>\n        </div>\n        `}buildCharacterNewLayout(e){const t=gameTranslation?.translation?.game?.generic?.free_slot,a=gameTranslation?.translation?.game?.quest?.quest_0_build_new_character_title;return`\n            <div class="${gameLayout.classResponsiveBoxBig}">\n                <div class="card">\n                    <header>\n                        <h4 class="card-title">${t} (<span data-id="free_slot">${e}</span>)</h4>\n                        <h6 class="card-subtitle"> &nbsp;</h6>\n                    </header>\n                    <div class="card-body">\n                        <div class="responsive-row">\n                            <div class="responsive-column-regular-12">\n                                <div class="character-select item-box"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <footer>\n                        <nav class="menu menu-horizontal">\n                            <ul>\n                                <li>\n                                    <button type="button" class="button button-regular button-green" data-id="new_character" onclick="gameCharacterSelect.buildCharacterSelectClass();">\n                                        ${a}\n                                    </button>\n                                </li>\n                            </ul>\n                        </nav>\n                    </footer>\n                </div>\n            </div>\n        `}buildCharacterSelectListLayout(e,t){const a=e[t],i=`${gameTranslation?.translation?.interface?.page_attribute?.level}: ${a.level}`,s=`\n            <li>\n                <button type="button" class="button button-regular button-red" data-id="button_delete" onclick="gameCharacterSelect.handleDelete(this)">\n                    ${gameTranslation?.translation?.interface?.action?.delete}\n                </button>\n            </li>\n        `,n=gameLogin.isGuest?"":s,l=this.buildCharacterSelectListLayoutProps(a),r=gameComponent.buildPerson(l);return`\n            <div class="${gameLayout.classResponsiveBoxBig}">\n                <div class="card" data-id="${a.id}">\n                    <header>\n                        <h4 class="card-title">${a.name}</h4>\n                        <h6 class="card-subtitle">${i}<h6>\n                    </header>\n                    <div class="card-body">\n                        <div class="responsive-row">\n                            <div class="responsive-column-regular-12">\n                                <div class="character-select item-box" id="select_character_${t}">\n                                    ${r}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <footer>\n                        <nav class="menu menu-horizontal">\n                            <ul>\n                                <li>\n                                    <button type="button" class="button button-regular button-blue" data-id="button_play" onclick="gameCharacterSelect.handlePlay(this)">\n                                        ${gameTranslation?.translation?.interface?.action?.play}\n                                    </button>\n                                </li>\n                               ${n}\n                            </ul>\n                        </nav>\n                    </footer>\n                </div>\n            </div>\n            `}buildCharacterSelectListLayoutProps(e){const t=gamePerson.buildData(),a=cssWalkBottom,i=e.id,s=e=>null!=e,n=(e,a)=>s(a)?t[e]=a:null,l=(e,a)=>s(a)?t.attributes[e]=a:null,r=(e,a)=>s(a)?t.equipments[e]=a:null,o=(e,a)=>s(a)?t.customizations[e]=a:null,c=e=>libHelper.isJson(e)?JSON.parse(e):{};return n("animation",a),n("id",i),l("name",e.name),l("level",e.level),o("eye",e.customization_eye),o("hair",e.customization_hair),o("skin",e.customization_skin),o("clothes",e.skin),r("armor",c(e.armor)),r("backpack",c(e.backpack)),r("bracelet",c(e.bracelet)),r("eye",c(e.eye)),r("face",c(e.face)),r("glove",c(e.glove)),r("hair",c(e.hair)),r("helmet",c(e.helmet)),r("pants",c(e.pants)),r("shield",c(e.shield)),r("weapon",c(e.weapon)),t}buildCharacterSelectListAppearance(e,t){const a=e[t];gameCharacter.loadedCharacter.pants=JSON.parse(a.pants),gameCharacter.loadedCharacter.armor=JSON.parse(a.armor),gameCharacter.loadedCharacter.weapon=JSON.parse(a.weapon),gameCharacter.loadedCharacter.shield=JSON.parse(a.shield),gameCharacter.loadedCharacter.hair=JSON.parse(a.hair),gameCharacter.loadedCharacter.helmet=JSON.parse(a.helmet),gameCharacter.loadedCharacter.face=JSON.parse(a.face),gameCharacter.loadedCharacter.boot=JSON.parse(a.boot),gameCharacter.loadedCharacter.backpack=JSON.parse(a.backpack),gameCharacter.loadedCharacter.glove=JSON.parse(a.glove),gameCharacter.loadedCharacter.bracelet=JSON.parse(a.bracelet),gameCharacter.loadedCharacter.eye=JSON.parse(a.eye),gameCharacter.loadedCharacter.skin=a.skin,gameCharacter.loadedCharacter.customization_eye=a.customization_eye,gameCharacter.loadedCharacter.customization_hair=a.customization_hair,gameCharacter.loadedCharacter.customization_skin=a.customization_skin,gameCharacter.buildCharacterAppearancePerson({el:t,elSetting:"loadCharacter",css:cssWalkBottom})}async buildCharacterCustomizeSelect(e){const t=`${gameLogin.classBackEndLogin}&m=getCustomization`,a=this.namespace;await libHelper.ajax({namespace:a,parameter:t}).then((t=>{this.buildCharacterCustomizeSelectResponse(t,e)}))}buildCharacterCustomizeSelectResponse(e,t){let a=this.buildCharacterCustomizeSelectBuildSelect(e);const i=JSON.parse(e);switch(gameData.setPlayerCustomizations({available:i}),t){case"initial":return this.buildCharacterCustomizeSelectPlaceInitial(a);case"npc":return this.buildCharacterCustomizeSelectPlaceNpc(a);case"npc_buy":return this.buildCharacterCustomizeSelectPlaceNpcBuy(a);default:return this.buildCharacterCustomizeSelectPlaceDefault(a)}}buildCharacterCustomizeSelectPlaceInitial(e){this.elCustomizeColorEye.forEach((t=>{t.innerHTML=e.eye,libHelper.sortSelect(t)})),this.elCustomizeColorHair.forEach((t=>{t.innerHTML=e.hair,libHelper.sortSelect(t)})),this.elCustomizeColorSkin.forEach((t=>{t.innerHTML=e.skin,libHelper.sortSelect(t)})),this.buildCharacterCustomizeAppearance()}buildCharacterCustomizeSelectPlaceNpc(e){const t=window.gameHtml.elModalLeft.querySelector(`[data-id="${gameNpcActionCustomize.dataIdCustomizeApply}"]`),a=t.querySelector('[data-id="select_customize_color_apply_eye"]'),i=t.querySelector('[data-id="select_customize_color_apply_hair"]'),s=t.querySelector('[data-id="select_customize_color_apply_skin"]');this.buildCharacterCustomizeSelectBuildSelectClear(),a.innerHTML+=e.eye,i.innerHTML+=e.hair,s.innerHTML+=e.skin}buildCharacterCustomizeSelectPlaceNpcBuy(e){const t=window.gameHtml.elModalLeft.querySelector(`[data-id="${gameNpcActionCustomize.dataIdCustomizeBuy}"]`),a=t.querySelector('[data-id="customize_color_eye"]'),i=t.querySelector('[data-id="customize_color_hair"]'),s=t.querySelector('[data-id="customize_color_skin"]');a.innerHTML+=e.eye,i.innerHTML+=e.hair,s.innerHTML+=e.skin}buildCharacterCustomizeSelectPlaceDefault(){const e=window.gameHtml.elModalLeft.querySelector('[data-id="list_customize_buy"]'),t=e.querySelector('[data-id="customize_color_eye"]'),a=e.querySelector('[data-id="customize_color_hair"]'),i=e.querySelector('[data-id="customize_color_skin"]'),s=`<option value="">${gameTranslation?.translation?.interface?.action?.select}</option>`;t.innerHTML+=s,a.innerHTML+=s,i.innerHTML+=s}buildCharacterCustomizeSelectBuildSelect(e){const t=JSON.parse(e),a=t.e,i=t.h,s=t.s;return{eye:this.buildCharacterCustomizeSelectBuildSelectOption(a,!1),hair:this.buildCharacterCustomizeSelectBuildSelectOption(i,!1),skin:this.buildCharacterCustomizeSelectBuildSelectOption(s,!0)}}buildCharacterCustomizeSelectBuildSelectOption(e,t){let a="";return gameCustomization.update(),e.forEach((e=>{const i=t?gameCustomization.skins[e].name:gameCustomization.colors[e].color,s=gameTranslation?.translation?.character?.customization[i];a+=`<option value="${e}">${s}</option>`})),a}buildCharacterCustomizeSelectBuildSelectClear(){this.elCustomizeColorEye.forEach((e=>{this.buildCharacterCustomizeSelectBuildSelectClearOption(e)})),this.elCustomizeColorHair.forEach((e=>{this.buildCharacterCustomizeSelectBuildSelectClearOption(e)})),this.elCustomizeColorSkin.forEach((e=>{this.buildCharacterCustomizeSelectBuildSelectClearOption(e)}))}buildCharacterCustomizeSelectBuildSelectClearOption(e){e.querySelectorAll("option").forEach((e=>{libHelper.remove(e)}))}buildCharacterCustomizeAppearance(){libHelper.addChange(this.elPageCharacterCustomizeHair,this.handlePageCharacterCustomizeHair),libHelper.addChange(this.elPageCharacterCustomizeSkin,this.handlePageCharacterCustomizeSkin),this.elCustomizeColorEye.forEach((e=>{libHelper.addChange(e,this.handleCustomizeColorEye)})),this.elCustomizeColorHair.forEach((e=>{libHelper.addChange(e,this.handleCustomizeColorHair)})),this.elCustomizeColorSkin.forEach((e=>{libHelper.addChange(e,this.handleCustomizeColorSkin)}))}buildCharacterCustomizeAppearanceSkin(){gameData.getPlayerCustomizations().skin=this.elPageCharacterCustomizeSkin.value,this.buildCharacterCustomizeAppearanceDefault()}buildCharacterCustomizeAppearanceHair(){gameData.getPlayerCustomizations().hair=this.elPageCharacterCustomizeHair.value,this.buildCharacterCustomizeAppearanceDefault()}buildCharacterCustomizeAppearanceDefault(){gameCharacter.buildCharacterAppearancePerson({el:this.elPageCharacterCustomizeCharacter,elSetting:"customize",css:cssWalkBottom}),this.buildCharacterCustomizeChangeDirection(this.currentDirection)}buildCharacterCustomizePageCharacterSelectCustomizeProceed(){if(""===this.elPageCharacterCustomizeName.value){const e=`${gameTranslation?.translation?.game?.generic.fill_field} "${gameTranslation?.translation?.game?.player?.name}"`;return this.elPageCharacterCustomizeName.focus(),libNotification.add({content:e})}this.requestName(this.elPageCharacterCustomizeName.value)}buildAjaxDone(){this.buildCharacterSelectList()}changeDirection(e){const t=this.elPageCharacterCustomizeCharacter.querySelector(".person").querySelectorAll("div");this.currentDirection=e,t.forEach((t=>{this.arrCssWalk.forEach((e=>{libHelper.removeClass(t,e)})),libHelper.addClass(t,`walk-${e}`)}))}enableButtonPlay(){this.elPageCharacterSelect.querySelectorAll('[data-id="button_play"]').forEach((e=>{e.disabled=!1}))}getClassTranslation(e){const t=gameTranslation?.translation?.game?.player,a=t?.[`class_${e}`],i=t?.[`class_${e}_description`];return{name:a,description:i}}handleBuildCharacterSelectClassButton(e){const t=e.getAttribute("data-class"),a=Number(t);this.requestSelectClass(a)}handlePlay(e){const t=e.parentNode.parentNode.parentNode.parentNode.parentNode.getAttribute("data-id");e.setAttribute("disabled",!0),this.loadCharacterAjax(t)}handleDelete(e){const t=`gameCharacterSelect.loadCharacterDelete(${e.parentNode.parentNode.parentNode.parentNode.parentNode.getAttribute("data-id")})`;window.gameConfirmation.open({action:t})}init(){this.update(),this.updateVariable()}async loadCharacterAjax(e){const t=`${this.classBackEnd}&m=loadCharacter&id=${e}`,a=this.namespace;await libHelper.ajax({namespace:a,parameter:t}).then((e=>{this.loadCharacterResponse(e)}))}loadCharacterResponse(e){const t=JSON.parse(e),a=t.player,i=t.statistics,s=t.achievements,n=t.customizations,l=t.n,r=t.craft,o=t.t,c=t.map,d=t.equipments,u={amulet:d.amulet,armor:d.armor,backpack:d.backpack,bracelet:d.bracelet,belt:d.belt,boot:d.boot,face:d.face,glove:d.glove,hair:d.hair,helmet:d.helmet,ring:d.ring,rune:d.rune,shield:d.shield,pants:d.pants,weapon:d.weapon,weaponKind:d.weaponKind,eye:d.eye},m={plant:r?.craft_plant,drawWell:r?.craft_draw_well,witch:r?.craft_witch,wood:r?.craft_wood,stone:r?.craft_stone,fabric:r?.craft_fabric},g={clothes:n.clothes,eye:n.eye,skin:n.skin,hair:n.hair};gameCharacter.reset(),gameMap.current=Number(c.current),gameCharacter.dataTile=Number(o),gameData.setPlayerAchievements(s),gameData.setPlayerAttributes(a),gameData.setPlayerEquipments(u),gameData.setPlayerCrafts(m),gameData.setPlayerStatistics(i),gameData.setPlayerCustomizations(g),l&&libNotification.length>0&&(gameManagement.notification=l),gamePageInventory.updateLoot(!1),gameManagement.status="updateQuest",gameManagement.build()}async loadCharacterDelete(e){const t=`${this.classBackEnd}&m=deleteCharacter&id=${Number(e)}`,a=this.namespace;await libHelper.ajax({namespace:a,parameter:t}).then((t=>{this.loadCharacterDeleteResponse(t,e)}))}loadCharacterDeleteResponse(e,t){let a=this.elPageCharacterSelect.querySelector(`[data-id="${t}"]`);const i=this.elPageCharacterSelect.querySelector('[data-id="free_slot"]'),s=i?i.innerText:null;"done"===e&&(gameManagement.status="characterSelect",gameManagement.build(),libHelper.remove(a.parentNode),i.innerText=Number(s)+1)}async requestName(e){const t=`&c=ForbiddenWord&m=isForbidden&word=${e}`;await libHelper.ajax({namespace:"Core",parameter:t}).then((t=>{this.requestNameResponse({response:t,name:e})}))}requestNameResponse(e){const t=gameTranslation?.translation?.login?.response?.forbidden_name;if(!e.response)return gameData.setPlayerAttributes({name:e.name}),this.requestNewCharacter();libNotification.add({content:t})}async requestNewCharacter(){const e=gameData.getPlayerAttributes(),t=gameData.getPlayerEquipments(),a=gameData.getPlayerCustomizations(),i=this.elPageCharacterCustomizeClothes,s=this.elPageCharacterCustomizeHair,n=gameCustomization.getColors(this.elPageCharacterSelectCustomize),l=n.eye,r=n.hair,o=n.skin,c=Number(libHelper.getSelectValue(s)),d=Number(libHelper.getSelectValue(i)),u=`${this.classBackEnd}&m=buildCharacterNew&name=${e.name}&equipmentHair=${c}&customizationClothe=${d}&customizationEye=${l}&customizationHair=${r}&customizationSkin=${o}`,m=this.namespace;t.hair={il:c},a.clothes=d,a.eye=l,a.hair=r,a.skin=o,await libHelper.ajax({namespace:m,parameter:u}).then((e=>{this.requestNewCharacterResponse(e)}))}requestNewCharacterResponse(e){const t=JSON.parse(e),a=t.equipments,i=t.achievements;gameData.setPlayerAchievements(i),gameData.setPlayerEquipments(a),gamePage.open({page:"page_character_tutorial_history",position:"middle"})}async requestVerfyNew(){const e=`${this.classBackEnd}&m=buildCharacterVerfyNew`,t=this.namespace;await libHelper.ajax({namespace:t,parameter:e}).then((e=>{this.requestVerfyNewResponse(e)}))}requestVerfyNewResponse(e){const t=Number(e),a=this.buildCharacterNewLayout(t),i=this.elPageCharacterSelect.querySelectorAll('[data-id="new_character"]').length;t<=0||i>0||gamePageCharacterSelect.elPageList.insertAdjacentHTML("beforeBegin",a)}async requestSelectClass(e){const t=`${this.classBackEnd}&m=setNewCharacter&class=${e}`,a=this.namespace;await libHelper.ajax({namespace:a,parameter:t}).then((t=>{this.requestSelectClassResponse({response:t,id:e})}))}requestSelectClassResponse(e){const t=Number(e.id);gameAnalytics.send("new character",t),gameData.setPlayerAttributes({class:t}),this.buildCharacterCustomize(),gamePageInventory.updateLoot(!1)}triggerColor(){libHelper.trigger(this.elCustomizeColorHair[0],"change"),libHelper.trigger(this.elCustomizeColorSkin[0],"change"),libHelper.trigger(this.elCustomizeColorEye[0],"change")}update(){this.classes={warrior:{attributes:{class:0},customizations:{clothes:52,eye:2,hair:0,skin:3},equipments:{boot:61,face:49,glove:28,helmet:23,shield:32,pants:35,weapon:14}},wizard:{attributes:{class:0},customizations:{clothes:53,eye:4,hair:3,skin:0},equipments:{boot:61,hair:48,helmet:51,pants:35,weapon:81}},hunter:{attributes:{class:0},customizations:{clothes:52,eye:0,hair:1,skin:2},equipments:{armor:29,boot:61,helmet:24,skin:52,pants:35,weapon:84}},merchant:{attributes:{class:0},customizations:{clothes:53,eye:6,hair:8,skin:1},equipments:{armor:29,boot:61,hair:47,skin:53,weapon:17}}},this.elPageCharacterSelect=document.getElementById("page_character_select"),this.elPageCharacterSelectCustomize=document.getElementById("page_character_select_customize"),this.elPageCharacterSelectClass=document.getElementById("page_character_select_class"),this.elPageCharacterSelectClassBack=document.getElementById("page_character_select_class_back"),this.elPageCharacterSelectClassList=document.getElementById("page_character_select_class_list"),this.elPageCharacterSelectCustomizeProceed=document.getElementById("page_character_select_customize_proceed"),this.elPageCharacterCustomizeCharacter=document.getElementById("page_character_select_person"),this.elPageCharacterCustomizeSkin=document.getElementById("customize_skin"),this.elPageCharacterCustomizeBack=document.getElementById("page_character_select_customize_back"),this.elPageCharacterCustomizeClothes=document.getElementById("customize_clothes"),this.elPageCharacterCustomizeHair=document.getElementById("customize_hair"),this.elPageCharacterCustomizeName=document.getElementById("customize_name"),this.elPageCharacterCustomizeDirectionLeft=document.getElementById("page_character_select_customize_direction_left"),this.elPageCharacterCustomizeDirectionRight=document.getElementById("page_character_select_customize_direction_right"),this.elPageCharacterCustomizeDirectionTop=document.getElementById("page_character_select_customize_direction_top"),this.elPageCharacterCustomizeDirectionBottom=document.getElementById("page_character_select_customize_direction_bottom")}updateVariable(){this.updateVariableCustomize(),this.updateVariableCustomizeBuy()}updateVariableCustomize(){const e=window.gameHtml.elMainContent;this.elCustomizeColorEye=e?.querySelectorAll('[data-id="customize_color_eye"]'),this.elCustomizeColorHair=e?.querySelectorAll('[data-id="customize_color_hair"]'),this.elCustomizeColorSkin=e?.querySelectorAll('[data-id="customize_color_skin"]')}updateVariableCustomizeBuy(){const e=window.gameHtml.elMainContent?.querySelector('[data-id="list_customize_buy"]');e&&(this.elCustomizeBuyColorEye=e.querySelector('[data-id="customize_color_eye"]'),this.elCustomizeBuyColorHair=e.querySelector('[data-id="customize_color_hair"]'),this.elCustomizeBuyColorSkin=e.querySelector('[data-id="customize_color_skin"]'))}}export class Chat{constructor(){this.interval}async verifyNewMessage(){await libHelper.ajax({parameter:"&c=Chat&m=verifyNewMessage"}).then((e=>{this.verifyNewMessageSuccess({data:e})}))}verifyNewMessageSuccess(e){gameLayout.decodeMessage(e)}}export class Configuration{constructor(){this.costBuy=e=>Number(2*e),this.attributesHitPoint=e=>Number(5*e),this.attributesManaPoint=e=>Number(3*e),this.recaptcha="6LfggRMaAAAAAGtcCInz0HXWEKcnJYxaeQTKrPnT",this.itens={2:{name:"sword"},3:{name:"axe"},4:{name:"hammer"},20:{name:"wand"},21:{name:"bow"}},this.account={guest:{email:"guest@october31.com.br",password:"AcC4654@!jjsdf"}},this.player={idle:10,speed:300,class:{warrior:{id:0,attribute:"strength"},wizard:{id:1,attribute:"intelligence"},hunter:{id:2,attribute:"dexterity"},merchant:{id:3,attribute:"vitality"}},map:{initial:{id:0,tile:181}}},this.item={durability:{maximum:1e3},itens:{diamond:{id:76},gold:{id:4}}},this.npc={craft:{maximum:20},bank:{cost:1,level:5},customization:{idCoin:76,cost:3}},this.skills={defense:{cost:3,turns:3},power:{cost:3},stone:{cost:3},arrow:{cost:3},fireball:{cost:3},run:{cost:0}}}isLocalHost(){return libHelper.getUrlWord("localhost")}define(){if(this.isLocalHost())return this.develop();this.deploy()}develop(){this.isDevelop=!0,this.isDevelopEnemy=!1,this.isDevelopResource=!1,this.timeTransitionTip=0,gameData.setPlayerAttributes({speed:0})}deploy(){this.isDevelop=!1,this.isDevelopEnemy=!1,this.isDevelopResource=!1,this.timeTransitionTip=5e3,gameData.setPlayerAttributes({speed:this.player.speed})}getPlayerClass(e=""){const t=Object.entries(this.player.class);let a;return""===e?t:(t.forEach((t=>{t[1].id===Number(e)&&(a=t)})),a)}getClassName(e){return this.getPlayerClass(e)[0]}getItemKind(e){const t=Number(e),a=this.itens[t];return a?a.name:this.itens[4].name}}export class Confirmation{constructor(){}addAction(e){this[`elButton${libHelper.capitalize(e.button)}`].setAttribute("onclick",e.action+";gameConfirmation.close();")}close(){libHelper.addClass(this.elConfirmation,cssDisplayNone)}init(){this.update(),this.addAction({action:"",button:"cancel"})}open(e){const t=e.action;this.addAction({action:t,button:"confirm"}),libHelper.removeClass(this.elConfirmation,cssDisplayNone)}update(){this.elConfirmation=gameHtml.elConfirm,this.elConfirmationBody=this.elConfirmation,this.elButtonCancel=this.elConfirmation.querySelector('[data-id="button_cancel"]'),this.elButtonConfirm=this.elConfirmation.querySelector('[data-id="button_confirm"]')}}export class Customization{constructor(){this.prefixSelect="customize_",this.customizations=["eye","hair","skin"],this.cssCustomization="customization--",this.cssSkin="skin--"}apply(e){const t=t=>`${e.cssPrefix+t}`,a=e.customization,i=e.customizations,s=e.elSelect,n=Number(libHelper.getSelectValue(s)),l=e.customizations?.[n].color,r=document.getElementById(e.targetId).querySelector(`[data-color="${a}"]`);i.forEach((e=>{libHelper.removeClass(r,t(e.color))})),libHelper.addClass(r,t(l)),gameData.setPlayerCustomizations({customization:n})}applyClothes(e,t){if(!e)return;const a=e.querySelector('[data-element="clothes"]'),i=t.il?t.il:t,s=gameLayout.findInObject(this.clothes,"id",i,"cssPerson");this.clothes.forEach((e=>{libHelper.removeClass(a,e.cssPerson)})),libHelper.addClass(a,s)}applyColor(e){e.customizations=this.colors,e.cssPrefix=this.cssCustomization,this.apply(e)}applyItem(e){const t=e.customization,a=e.elSelect,i=document.getElementById(e.targetId).querySelector(`[data-customization="${t}"]`),s=Number(libHelper.getSelectValue(a)),n=this[t],l=gameLayout.findInObject(n,"id",s,"cssPerson");n.forEach((e=>{const t=e.cssPerson;libHelper.removeClass(i,t)})),libHelper.addClass(i,l),gameData.setPlayerCustomizations({[e.customization]:{il:s}})}applySkin(e){e.customizations=this.skins,e.cssPrefix=this.cssSkin,this.apply(e)}getColors(e){let t={};return this.customizations.forEach((a=>{const i=e.querySelector(`[data-id="${this.prefixSelect+a}"`),s=Number(libHelper.getSelectValue(i));t[a]=s})),t}init(){this.update()}update(){const e=gameTranslation?.translation?.game?.loot,t=e=>gameLayout.findInObject(globalLoot,"id",e,"cssPerson");this.colors=[{id:0,color:"blue"},{id:1,color:"red"},{id:2,color:"brown"},{id:3,color:"green"},{id:4,color:"purple"},{id:5,color:"pink"},{id:6,color:"black"},{id:7,color:"white"},{id:8,color:"grey"},{id:9,color:"yellow"},{id:10,color:"orange"}],this.colors.forEach((e=>{const t=e.color;e.css=`${this.cssCustomization+t}`})),this.skins=[{id:0},{id:1},{id:2},{id:3},{id:4}];Object.entries(this.skins).forEach((([e,t])=>{this.skins[e].css=`${this.cssSkin+e}`,this.skins[e].color=`${e}`,this.skins[e].name=`color_${e}`})),this.clothes=[{id:52,text:e?.skin_1,cssPerson:t(52)},{id:53,text:e?.skin_2,cssPerson:t(53)}],this.hair=[{id:45,text:e?.hair_mohican,cssPerson:t(45)},{id:46,text:e?.hair_short,cssPerson:t(46)},{id:47,text:e?.hair_long,cssPerson:t(47)}]}}export class Data{constructor(){this.labelAccount="account",this.labelEnemy="enemy",this.labelMap="map",this.labelMapMini="mapMini",this.labelPlayerAchievements="playerAchievements",this.labelPlayerAttributes="playerAttributes",this.labelPlayerCrafts="playerCrafts",this.labelPlayerCustomizations="playerCustomizations",this.labelPlayerEquipments="playerEquipments",this.labelPlayerInventory="playerInventory",this.labelPlayerQuests="playerQuests",this.labelPlayerStatistics="playerStatistics",this.labelSetting="setting",this.updates=[{item:"character",obj:"gameCharacter"},{item:"map",obj:"gameMap"},{item:"notification",obj:"gameNotification"},{item:"npc",obj:"gameNpc"}],this.handler={get:(e,t)=>e[t],set:(e,t,a)=>{const i=libHelper.capitalize(t);return e[t]=a,this[`update${i}`](),!0}},this.data=new Proxy({},this.handler),this.valueDefault=void 0}buildProperty(e,t){const a=e=>e||this.valueDefault,i={};return t.forEach((t=>{const s=t.id,n=e[s],l=t.type;if(!(typeof n==`${this.valueDefault}`)){const e="string"===l,t="object"===l;let r=n;"number"===l&&(r=Number(n)),e&&(r=String(n)),t&&(r=a(n)),i[s]=r}})),i}debug(e=null){const t=e?this.data[e]:this.data;libHelper.debug(t)}get(e){return this.data[e]}getAccount(){return this.get(this.labelAccount)}getEnemy(){return this.get(this.labelEnemy)}getMap(){return this.get(this.labelMap)}getMapMini(){return this.get(this.labelMapMini)}getPlayerAchievements(){return this.get(this.labelPlayerAchievements)}getPlayerAttributes(){return this.get(this.labelPlayerAttributes)}getPlayerCrafts(){return this.get(this.labelPlayerCrafts)}getPlayerCustomizations(){return this.get(this.labelPlayerCustomizations)}getPlayerEquipments(){return this.get(this.labelPlayerEquipments)}getPlayerInventory(){return this.get(this.labelPlayerInventory)}getPlayerQuests(){return this.get(this.labelPlayerQuests)}getPlayerStatistics(){return this.get(this.labelPlayerStatistics)}getSetting(){return this.get(this.labelSetting)}init(){this.resetAll()}remove(e,t){const a=libHelper.capitalize(e),i=this[`get${a}`](),s=Object.entries(i),n="object"==typeof t?t.i:t;s.forEach((e=>{const t=e[0];t===String(n)&&delete i[t]})),this[`set${a}`](i)}removeAccount(e){return this.remove(this.labelAccount,e)}removeEnemy(e){return this.remove(this.labelEnemy,e)}removeMap(e){return this.remove(this.labelMap,e)}removeMapMini(e){return this.remove(this.labelMapMini,e)}removePlayerAchievements(e){return this.remove(this.labelPlayerAchievements,e)}removePlayerAttributes(e){return this.remove(this.labelPlayerAttributes,e)}removePlayerCrafts(e){return this.remove(this.labelPlayerCrafts,e)}removePlayerCustomizations(e){return this.remove(this.labelPlayerCustomizations,e)}removePlayerEquipments(e){return this.remove(this.labelPlayerEquipments,e)}removePlayerInventory(e){return this.remove(this.labelPlayerInventory,e)}removePlayerQuests(e){return this.remove(this.labelPlayerQuests,e)}removePlayerStatistics(e){return this.remove(this.labelPlayerStatistics,e)}removeSetting(e){return this.remove(this.labelSetting,e)}reset(e){const t=this.get(e),a=libHelper.capitalize(e);if(t){Object.keys(t).forEach((e=>{this[`remove${a}`](e)}))}else this[`set${a}`]({})}resetAll(){this.resetAccount(),this.resetEnemy(),this.resetMap(),this.resetPlayer(),this.resetSetting()}resetAccount(){this.reset(this.labelAccount)}resetEnemy(){this.reset(this.labelEnemy)}resetMap(){this.reset(this.labelMap)}resetMapMini(){this.reset(this.labelMapMini)}resetPlayer(){this.resetPlayerAchievements(),this.resetPlayerAttributes(),this.resetPlayerCrafts(),this.resetPlayerCustomizations(),this.resetPlayerEquipments(),this.resetPlayerInventory(),this.resetMapMini(),this.resetPlayerQuests(),this.resetPlayerStatistics()}resetPlayerAchievements(){this.reset(this.labelPlayerAchievements)}resetPlayerAttributes(){this.reset(this.labelPlayerAttributes)}resetPlayerCrafts(){this.reset(this.labelPlayerCrafts)}resetPlayerCustomizations(){this.reset(this.labelPlayerCustomizations)}resetPlayerEquipments(){this.reset(this.labelPlayerEquipments)}resetPlayerInventory(){this.reset(this.labelPlayerInventory)}resetPlayerQuests(){this.reset(this.labelPlayerQuests)}resetPlayerStatistics(){this.reset(this.labelPlayerStatistics)}resetSetting(){this.reset(this.labelSetting)}set(e,t){if(null===t)return;const a=Object.entries(t),i=this.data[e]?this.data[e]:{};if(!this.data[e])return this.data[e]={};a.forEach((([e,t])=>{i[e]=t})),this.data[e]=i}setAccount(e){this.set(this.labelAccount,e)}setEnemy(e){this.set(this.labelEnemy,e)}setMap(e){this.set(this.labelMap,e)}setMapMini(e){this.set(this.labelMapMini,e)}setPlayerAchievements(e){this.set(this.labelPlayerAchievements,e)}setPlayerAttributes(e){const t=this.labelPlayerAttributes;this.set(t,e),this.setPlayerAttributesCapacity(),gameLayout.updateBar()}setPlayerAttributesCapacity(){const e=e=>e||0,t=this.labelPlayerAttributes,a=this.getPlayerAttributes(),i=e(a.capacity),s=e(a.capacityMaximum),n={capacityPercentage:Math.round(100*i/s)};this.set(t,n)}setPlayerCrafts(e){this.set(this.labelPlayerCrafts,e)}setPlayerCustomizations(e){this.set(this.labelPlayerCustomizations,e)}setPlayerInventory(e){const t=e.itens?e.itens:e;this.set(this.labelPlayerInventory,t)}setPlayerEquipments(e){this.set(this.labelPlayerEquipments,e)}setPlayerQuests(e){this.set(this.labelPlayerQuests,e)}setPlayerStatistics(e){this.set(this.labelPlayerStatistics,e)}setSetting(e){this.set(this.labelSetting,e)}updateAccount(){}updateEnemy(){gameLayout.updateBarEnemy()}updateMap(){}updateMapMini(){gamePageMap.updateData()}updatePlayerAttributes(){gamePageAttribute.updateData(),this.updatePlayerInventory(),gameLayout.updateBarStatus()}updatePlayerAchievements(){gamePageAchievement.updateData()}updatePlayerCrafts(){}updatePlayerCustomizations(){}updatePlayerEquipments(){gamePageInventory.updateData()}updatePlayerInventory(){gamePageInventory.updateData(),gameNpc.buildCurrentMoney()}updateObserver(e){if(!libHelper.isJson(e))return;const t=JSON.parse(e);this.updates.forEach((e=>{const a=e.item,i=e.obj,s=t[a];s&&window[i].updateData(s.value)}))}updatePlayerQuests(){gamePageQuest.updateData()}updatePlayerStatistics(){gamePageStatistic.updateData()}updateSetting(){gamePageSetting.updateData()}}export class Enemy{constructor(){this.arrEnemy=[],this.arrEnemyPosition=[],this.enemyOnTheMap=0,this.initiative=0,this.actionPoint=0,this.experience=0,this.attack=0,this.defense=0,this.lootId=0,this.lootAmount=0,this.enemyKind=["air","earth"],this.enemy={butterfly:{kind:0},rat:{kind:1},spider:{kind:1},worm:{kind:1},bat:{kind:0},ant:{kind:1},ladybug:{kind:1}}}buildAnimationKind(e,t){switch(t){case"earth":gameAnimation.animateMove("enemy",e,"idle-bottom");break;case"air":gameAnimation.animateMove("enemy",e,cssWalkBottom)}}build(){const e=this.arrEnemy.length;this.buildLayout();for(let t=0;t<gameMap.enemySlot;t++){const a=Math.floor(Math.random()*e),i=this.arrEnemy[a];""!==i&&this.buildLoop(t,i)}}buildLoop(e,t){const a=gameMap.randomPlace(e),i=`enemy${e}Position`,s=libHelper.randomInArray(gameMap.arrEnemyLevel),n=document.getElementById(`enemy_${e}`),l=n.querySelector(".tile .skin"),r=`: <span class="color-red">${s}</span>`,o=gameTranslation?.translation?.interface?.page_attribute?.level+r,c=this.enemy[t].kind,d=this.enemyKind[c];this[i]=a,gameHtml.updateEnemy(e),n.setAttribute("data-race",t),n.setAttribute("data-level",s),n.setAttribute("data-kind",d),libHelper.addClass(l,t),this.buildAnimationKind(e,d),gameAnimation.animateEmote("enemy",e,"addEmote",o),this.arrEnemyPosition.push(a),gameMap.setPosition({target:n,tile:a})}buildLayout(){let e="";this.enemyOnTheMap=gameMap.enemySlot;for(let t=0;t<this.enemyOnTheMap;t++){const a=this.buildHtml(t);void 0!==a&&(e+=a)}gameHtml.elEnemy.innerHTML=e}buildHtml(e){return`\n            <div id="enemy_${e}" data-x="" data-y="" data-race="" data-level="" data-kind="">\n                <div class="tile">\n                    ${gameConfiguration.isDevelopEnemy?`<span class="dev">${e}</span>`:""}\n                    <div class="hit sprite-box">\n                        <div></div>\n                    </div>\n                    <div class="skin sprite-box"></div>\n                    <div class="damage"></div>\n                    <div class="progress progress-style-red progress-regular ${cssDisplayNone}">\n                        <div class="progress-bar"></div>\n                    </div>\n                    <div class="emote sprite-box">\n                        <div class="animation-balloon">\n                            <div class="balloon">\n                                <div class="text"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `}moveBattle(e,t){"go"===t?this.moveBattleGo(e):this.moveBattleBack(e)}moveBattleGo(e){const t=gameBattle.namespace,a=`${gameBattle.classBackEnd}&m=attackEnemy`;libHelper.ajax({namespace:t,parameter:a}).then((t=>this.moveBattleGoSuccess({id:e,response:t})))}moveBattleGoSuccess(e){const t=e.response;void 0===t&&document.location.reload();const a=JSON.parse(t),i=Number(a.experience),s=Number(a.characterHitPoint),n=Number(a.characterHitPointTotal);gameData.setPlayerAttributes({experience:i,hitPoint:s,hitPointTotal:n}),this.moveBattleAnimation({id:e.id,json:a})}moveBattleAnimation(e){gameAnimation.animateMove("enemy",e.id,cssWalkBottom);const t=gameHtml.elEnemyCurrent,a=libHelper.getTranslateValue(t),i=a.y+gameLayout.tileSize,s=a.x;gameAnimation.animatePosition({target:t,vertical:i,horizontal:s}).then((()=>this.moveBattleAnimationDone(e)))}moveBattleAnimationDone(e){gameBattle.buidDamage({el:gameHtml.elEnemyCurrent,damage:e.json.damage}),gameAnimation.animateDamage(gameHtml.elEnemyCurrent,!1),this.moveBattleAnimationBack(e)}moveBattleAnimationBack(e){const t=gameHtml.elEnemyCurrent,a=libHelper.getTranslateValue(t),i=a.y-gameLayout.tileSize,s=a.x,n=t;gameAnimation.animatePosition({target:n,vertical:i,horizontal:s}).then((()=>this.moveBattleAnimationBackDone(e)))}moveBattleAnimationBackDone(e){const t=document.getElementById(`enemy_${e.id}`).getAttribute("data-kind");this.buildAnimationKind(e.id,t),e.json.death?gameBattle.buildResult("enemy"):gameBattle.buildTurn("pass")}}export class Equipment{constructor(){this.equipments=["amulet","armor","backpack","bracelet","belt","boot","face","glove","hair","helmet","ring","rune","shield","skin","pants","eye","weapon","orb","quiver"],this.invisibles=["skin","orb","quiver"],this.noDurabilities=["hair","face"],this.visibles=this.equipments.filter((e=>!this.invisibles.includes(e)))}searchById(e){const t=gameData.getPlayerEquipments();let a;return Object.entries(t).forEach((([t,i])=>{const s=i?.i;s===e&&(a=t)})),a}}export class Hotkey{constructor(){this.hotkeys=[{id:"pageAttributes",shortcut:"a",action:()=>gamePageAttribute.open(),actionString:"gamePageAttribute.open()"},{id:"pageSetting",shortcut:"c",action:()=>gamePageSetting.open(),actionString:"gamePageSetting.open()"},{id:"pageInventory",shortcut:"i",action:()=>gamePageInventory.open(),actionString:"gamePageInventory.open()"},{id:"pageMap",shortcut:"m",action:()=>gamePageMap.open(),actionString:"gamePageMap.open()"},{id:"pageQuest",shortcut:"q",action:()=>gamePageQuest.open(),actionString:"gamePageQuest.open()"},{id:"pageAchievement",shortcut:"r",action:()=>gamePageAchievement.open(),actionString:"gamePageAchievement.open()"},{id:"useItem",shortcut:"t",action:()=>gameMenu.useItem(5),actionString:"gameMenu.useItem(5)"},{id:"useItem",shortcut:"u",action:()=>gameMenu.useItem(11),actionString:"gameMenu.useItem(11)"},{id:"useItem",shortcut:"y",action:()=>gameMenu.useItem(8),actionString:"gameMenu.useItem(8)"},{id:"attackPhysical",shortcut:"1",action:()=>gameBattleSkill.attackPhysical(),actionString:"gameBattleSkill.attackPhysical()"},{id:"attackByClass",shortcut:"3",action:()=>gameBattleSkill.attackByClass(),actionString:"gameBattleSkill.attackByClass()"},{id:"attackRun",shortcut:"4",action:()=>gameBattleSkill.run(),actionString:"gameBattleSkill.run()"},{id:"escape",shortcut:"Escape",action:()=>gamePage.close(),actionString:"gamePage.close()"}]}build(){document.addEventListener("keydown",(e=>{const t=this.find("shortcut",e.key),a=this.findAction(t);if(a)return a}))}find(e,t){return this.hotkeys.find((a=>a[e]===t))}findAction(e){const t=e?.action;if(t)return t()}}export class Html{constructor(){this.attTooltip="data-tooltip",this.attShortcut="data-shortcut"}init(){this.update()}update(){this.elEnemy=document.getElementById("enemy"),this.elEnemyCurrent=null,this.elEnemyCurrentDamage=null,this.elEnemyCurrentEmote=null,this.elEnemyEffect=null,this.elCharacter=document.getElementById("character"),this.elBattle=document.getElementById("battle"),this.elBattleBox=document.getElementById("battle_box"),this.elBattlefield=document.getElementById("battlefield"),this.elGame=document.getElementById("game"),this.elTalk=document.getElementById("talk"),this.elTalkDetail=document.getElementById("talk_detail"),this.elTalkResponse=document.getElementById("talk_response"),this.elMap=document.getElementById("map"),this.elModal=document.getElementById("modal"),this.elModalRight=document.getElementById("modal_right"),this.elModalLeft=document.getElementById("modal_left"),this.elMainContent=document.getElementById("main_content"),this.elMainBar=document.getElementById("main_bar"),this.elMainBarBars=document.getElementById("main_bar_bars"),this.elMainMenu=document.getElementById("menu_main_box"),this.elPageMenu=document.getElementById("page_menu"),this.elNpc=document.getElementById("npc"),this.elPageInventory=document.getElementById("page_inventory"),this.elPageDetail=document.getElementById("page_inventory_detail")}updateConfirmation(){this.elConfirm=document.getElementById("confirm"),this.elConfirmWarning=document.getElementById("confirm_warning")}updatePlayer(){this.elCharacterDamage=this.elCharacter.querySelector(".damage"),this.elCharacterEffect=this.elCharacter.querySelector('[data-element="effect-hit"] div'),this.elCharacterEmote=document.getElementById("character_emote")}updateBars(){this.elMainBarExperience=document.getElementById("bar_status_experience"),this.elMainBarMana=document.getElementById("bar_status_mana_point"),this.elMainBarHit=document.getElementById("bar_status_hit_point")}updateBattle(){this.elBattleAttack=document.getElementById("battle_attack"),this.elBattleFireball=document.getElementById("battle_fireball"),this.elBattlePower=document.getElementById("battle_power"),this.elBattleStone=document.getElementById("battle_stone"),this.elBattleArrow=document.getElementById("battle_arrow"),this.elBattleRun=document.getElementById("battle_run"),this.elBattleDefense=document.getElementById("battle_defense")}updateEnemy(e){this.elEnemyCurrent=document.getElementById(`enemy_${e}`),this.elEnemyCurrent&&(this.elEnemyCurrentDamage=gameHtml.elEnemyCurrent.querySelector(".damage"),this.elEnemyCurrentEmote=gameHtml.elEnemyCurrent.querySelector(".animation-balloon"),this.elEnemyEffect=this.elEnemyCurrent.querySelector(".hit div"))}updateResource(e){this.elResourceCurrent=document.getElementById(`resource_${e}`)}}export class Interface{constructor(){this.elBody=document.querySelector("body"),this.cssButtonClose="modal-close-button",this.pagesCenter=[{id:"login",css:""},{id:"login_forget",css:""},{id:"login_sign_up",css:""},{id:"login_resend",css:""},{id:"character_select",css:""},{id:"character_select_class",css:"page-character-select-class"},{id:"character_select_customize",css:""},{id:"character_tutorial_history",css:""},{id:"character_tutorial_walk",css:""},{id:"advise",css:""}],this.pagesRight=[{id:"achievement",css:""},{id:"attribute",css:""},{id:"inventory",css:"page-inventory"},{id:"inventory_detail",css:""},{id:"map",css:"page-map"},{id:"quest",css:"page-character-select-class"},{id:"setting",css:""},{id:"menu",css:""}]}init(){const e=this.elBody,t=this.draw();e.insertAdjacentHTML("afterBegin",t),this.updateHtml(),this.toggleModalMidleClose("hide")}draw(){return`\n            <section id="tutorial" class="display-none tutorial">\n                <div class="tutorial-cursor"></div>\n            </section>\n            <section id="main" class="responsive-row full-window">\n                <div class="responsive-row full-window main-content" id="main_content">\n                    ${this.drawModalCenter()}\n                    ${this.drawModalLeft()}\n                    ${this.drawModalRight()}\n                    <section id="page_transition" class="responsive-row display-none page-transition"></section>\n                    <section id="game" class="game responsive-row">\n                        <div id="character" class="person player" data-x="" data-y=""></div>\n                        <div id="resource" class="resource"></div>\n                        <div id="npc" class="npc"></div>\n                        <div id="enemy"></div>\n                        <div id="battlefield" class="battlefield display-none"></div>\n                        <div id="map" class="map__main"></div>\n                    </section>\n                    <div id="battle_box" class="battle">\n                        <nav class="menu menu-horizontal display-none battle__menu" id="battle"></nav>\n                    </div>\n                </div>\n                <div class="responsive-row theme-black display-none main-bar" id="main_bar">\n                    <div id="main_bar_bars" class="menu menu-horizontal main-bar__bar"></div>\n                    <div id="menu_main_box" class="main-bar__box"></div>\n                </div>\n            </section>\n        `}drawModalClose(e){return`\n            <header class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <nav class="menu menu-horizontal text-right">\n                        <ul>\n                            <li>\n                                <div class="padding-regular">\n                                    <button \n                                        type="button" \n                                        class="button button-small button-gray ${this.cssButtonClose} has-tooltip" \n                                        title="" ${gameHtml.attShortcut}="esc"\n                                        onclick="gamePage.handleClose('${e}')"\n                                    >\n                                        <i class="fa fa-times" aria-hidden="true"></i>\n                                    </button>\n                                </div>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </header>\n        `}drawModalCenter(){const e=this.pagesCenter;let t=`\n            <section id="modal" class="modal modal-middle modal-close modal-size-small theme-black">\n                <div class="modal-box">\n                    ${this.drawModalClose("middle")}\n                    <div class="responsive-row modal-body">\n                        <div class="responsive-column-regular-12 modal-content">\n        `;return e.forEach((e=>{const a=e.id,i=e.css;t+=`<section id="page_${a}" class="js-page responsive-row ${i}"></section> `})),t+="\n                        </div>\n                    </div>\n                </div>\n            </section>\n        ",t}drawModalLeft(){return`\n            <section id="modal_left" class="modal modal__left modal-close theme-black">\n                <div class="modal-box">\n                    ${this.drawModalClose("left")}\n                    <div class="responsive-row modal-body">\n                        <div class="responsive-column-regular-12 modal-content">\n                            <div class="responsive-row modal-body" id="talk_detail"></div>\n                            <div class="responsive-row modal-body talk" id="talk"></div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        `}drawModalRight(){const e=this.pagesRight;let t=`\n            <section id="modal_right" class="modal modal__right modal-close theme-black">\n                <div class="modal-box">\n                    ${this.drawModalClose("right")}\n                    <div class="responsive-row modal-body">\n                        <div class="responsive-column-regular-12 modal-content">\n        `;return e.forEach((e=>{const a=e.id,i=e.css;t+=`<section id="page_${a}" class="js-page responsive-row ${i}"></section> `})),t+="\n                        </div>\n                    </div>\n                </div>\n            </section>\n        ",t}toggleModalMidleClose(e){"show"===e?libHelper.show(this.elModalCloseMiddle):libHelper.hide(this.elModalCloseMiddle)}updateHtml(){this.elModalLeft=document.getElementById("modal_left"),this.elModalCloseLeft=this.elModalLeft.querySelector(`.${this.cssButtonClose}`),this.elModalMiddle=document.getElementById("modal"),this.elModalCloseMiddle=this.elModalMiddle.querySelector(`.${this.cssButtonClose}`),this.elModalRight=document.getElementById("modal_right"),this.elModalCloseRight=this.elModalRight.querySelector(`.${this.cssButtonClose}`),this.elModalBoxLeft=this.elModalLeft.querySelector(`.${this.cssPage}`),this.elModalBoxMiddle=this.elModalMiddle.querySelector(`.${this.cssPage}`),this.elModalBoxRight=this.elModalRight.querySelector(`.${this.cssPage}`),this.elPageLeft=this.elModalLeft?.querySelectorAll(`.${this.cssPage}`),this.elPageMiddle=this.elModalMiddle?.querySelectorAll(`.${this.cssPage}`),this.elPageRight=this.elModalRight?.querySelectorAll(`.${this.cssPage}`),this.elTalk=document.getElementById("talk"),this.elTalkDetail=document.getElementById("talk_detail"),this.elTalkResponse=document.getElementById("talk_response")}}export class Interval{constructor(){this.time=1e3,this.timeChat=300,this.timeAnalytics=100,this.timeChatCurrent=0,this.counterCharacter=0,this.counterAnalytics=0,this.counterChat=0,this.idleInterval=0}build(e){const t=this;e?this.idleInterval=setInterval((function(){t.increment()}),this.time):clearInterval(this.idleInterval)}increment(){this.counterCharacter++,this.counterChat++,this.counterAnalytics++,gameCharacter.isMoving&&this.resetCharacter(),this.counterCharacter>gameConfiguration.player.idle&&!gameBattle.isBattle&&gameAnimation.animateSleep("character",!0),this.counterChat>this.timeChat&&(gameChat.verifyNewMessage(),gameAnalytics.send("chat","verify message"),this.counterChat=0)}resetCharacter(){this.counterCharacter=0}}export class Inventory{addItem(e){const t=Number(e.id),a=`<div class="loot-${gameLayout.findInObject(globalLoot,"id",t,"cssLoot")}"></div>`,i=gameTranslation?.translation?.interface?.action?.amount,s=`&nbsp;<span class="color-blue">${e.quantity}</span>`,n=a+e.text+i+s;libNotification.add({content:n}),gameAnalytics.send("resource",`add item ${t}`),gamePageAttribute.requestUpdate(),gamePageInventory.updateLoot(!1)}drawNoRoom(){const e=gameTranslation?.translation?.game?.loot.no_room;return libNotification.add({content:e})}getItemAttribute(e){return{id:e.getAttribute("data-id"),idLore:Number(e.getAttribute("data-id-lore")),kind:e.getAttribute("data-kind")}}}export class ItemDetail{constructor(){this.details=["attack","capacity","durability","defense","dexterity","hitPoint","initiative","intelligence","kind","manaPoint","speed","strength","vitality","hotkey","weight"],this.detailsLength=this.details.length,this.pageBack="",this.currentItemId=0,this.elRecipeList,this.elRecipeListItem,this.attributeRecipe='[data-id="detail_recipe"]'}build(){this.update()}buildItem(e){const t="craft"===e.itemProperty.action;this.buildCurrentItem(e),this.buildDetail(e),this.toggleRecipeVisibility(t)}buildMenuDisplayRight(e){const t=e.id,a=e.kind,i=e.from;this.buildMenuDisplayHideAll(),"inventory"===i&&this.buildMenuDisplayInventory(a),"equipment"===i&&this.buildMenuDisplayEquipment(t)}buildMenuDisplayLeft(e){const t=e.kind;this.buildMenuDisplayNpc(t)}buildMenuDisplayHideAll(){this.elModalRightMenu.querySelectorAll(".button").forEach((e=>{"detail_button_back"!==e.getAttribute("data-id")&&libHelper.hide(e.parentNode)}))}buildMenuDisplayInventory(e){const t=gameEquipment.equipments.includes(e),a=this.elButtonDelete.parentNode,i=this.elButtonEquip.parentNode,s=this.elButtonUse.parentNode;libHelper.show(this.elQuantity),libHelper.show(a),t?libHelper.show(i):libHelper.hide(i),"usable"===e&&libHelper.show(s)}buildMenuDisplayEquipment(e){"skin"!==gameLayout.findInObject(globalLoot,"id",e,"kind")&&libHelper.show(this.elButtonUnequip.parentNode),libHelper.hide(this.elQuantity)}buildMenuDisplayNpc(e){const t=gameHtml.elTalkDetail.querySelector(`[data-id="detail_button_${e}"]`);if(!t)return;const a=t.parentNode;libHelper.show(a)}async buildDetail(e){const t=e.id,a=e.idLore,i=e.target,s=e.quantity,n=e.itemProperty,l=`${gamePageInventory.classBackEnd}&m=getDetail&id=${t}&idLore=${a}`;await libHelper.ajax({parameter:l}).then((e=>{const l={id:t,itemProperty:n,idLore:a,target:i,data:e,quantity:s};this.buildDetailResponse(l)}))}buildDetailResponse(e){const t=Number(e.idLore),a=e.id,i=""!==e.data?JSON.parse(e.data):null,s=e.quantity,n=gameLayout.findInObject(globalLoot,"id",t,"kind"),l=this.buildDetailHtmlTranslate(t,n),r=e.target,o="left"===r,c={dataId:t,text:l};i.quantity=s,i.itemProperty=e.itemProperty;const d=gameLayout.buildCard(c),u=o?this.elDetailImageLeft:this.elDetailImageRight,m=o?gameHtml.elModalLeft:gameHtml.elModalRight,g=m.querySelector('[data-id="item-detail-attribute"]'),h=gameComponentPageDetail.buildDetailInput(i);if(this.elRecipeList=m.querySelector(this.attributeRecipe),g.innerHTML=h,!o){const e={page:"page_inventory_detail",position:r};gamePage.open(e)}this.currentItemId=a,this.currentItemIdLore=t,u.innerHTML=d,gameCraft.toggleListRecipe(),this.buildDetailHtmlImage(t,r),this.buildDetailHtmlPrice(i)}buildDetailHtmlTranslate(e,t){const a=gameLayout.findInObject(globalLoot,"id",e,"translation");switch(t){case"resource":case"usable":case"money":return gameTranslation?.translation?.game?.loot[a];default:return gameTranslation?.translation?.game?.equipment[a]}}buildDetailHtmlValue(e){for(let t=0;t<this.detailsLength;t++)this.buildDetailHtmlValueLoop(e,t)}buildDetailHtmlValueLoop(e,t){const a=e.json;if(!a)return;const i=e.porcentage,s=e.target,n=this.details[t];let l=a[n];if("durability"===n){const e=gameItemDetail.currentItem;if(!e)return;const t=e.idLore,i=gameLayout.findInObject(globalLoot,"id",t,"kind");if(gameEquipment.noDurabilities.includes(i))return;l=e.durability;const s={value:l,maximum:gameConfiguration.item.durability.maximum,return:"string"};a.durability=gameLayout.calculatePercentage(s)}return l?"left"===s?this.buildDetailHtmlValueLeft(n,l):void this.buildDetailHtmlValueRight({target:n,value:l,json:a,i:t,porcentage:i}):void 0}buildDetailHtmlValueLeft(e,t){const a=gameHtml.elTalkDetail.querySelector(`[data-id="detail_field_${e}"]`);a&&(libHelper.show(a),a.querySelector(".input").value=t)}buildDetailHtmlValueRight(e){const t=e.target,a=gamePageInventory.elDetail.querySelector(`[data-id="detail_field_${t}"]`);if(!a)return;const i=a.querySelector(".input"),s=e.json[t],n="hitPoint"===t||"manaPoint"===t?e.porcentage:"";libHelper.show(a),i.value=s+n}buildDetailHtmlPrice(e){if(!e)return;const t=("left"===e.itemProperty.side?gameHtml.elTalkDetail:gameHtml.elPageDetail).querySelector('[data-id="detail_field_price"]');if(!t)return;const a=t.querySelector(".input"),i=e.price,s=null!==i?Number(i):0;libHelper.show(t),"buy"===gameNpc.currentAction&&(a.value=gameConfiguration.costBuy(s)),"sell"===gameNpc.currentAction&&(a.value=s)}buildDetailHtmlImage(e,t){const a=gameLayout.findInObject(globalLoot,"id",e,"cssLoot"),i=this.elDetailImageLeft.querySelector(".item-box"),s=this.elDetailImageRight.querySelector(".item-box"),n="left"===t?i:s;n.setAttribute("class",""),libHelper.addClass(n,"item-box"),libHelper.addClass(n,`loot-${a}`)}buildCurrentItem(e){const t=e.id,a=e.idLore,i=gameData.getPlayerInventory()[t],s=gameEquipment.searchById(t),n={id:t,idLore:a};let l=null;i&&(l=i.d),s&&(l=s.d),null!==l&&(n.durability=l),this.currentItem=n}changeQuantity(){const e=gameNpc.npcCurrent.name;let t=[];"cubris"===e&&(t=gameCraftPlant.arrCraftAllowed),"safur"===e&&(t=gameCraftDrawWell.arrCraftAllowed),this.watchQuantityBuildValue(t)}doDelete(){const e=gamePageInventory.elDetail.querySelector('[data-id="detail_field_quantity"]').querySelector("input"),t=gamePageInventory.elDetail.querySelector('[data-id="detail_button_back"]'),a=Number(e.value),i=gameTranslation?.translation.alert.action_delete;gamePageInventory.modify("remove",[gameItemDetail.currentItemId,a]),libNotification.add({content:i}),t.click()}handleDelete(){window.gameConfirmation.open({action:"gameItemDetail.doDelete()"})}toggleRecipeVisibility(e=!0){const t=gamePageInventory.elDetail.querySelector(this.attributeRecipe),a=gameHtml.elModalLeft.querySelector(this.attributeRecipe);e?(libHelper.show(t),libHelper.show(a)):(libHelper.hide(t),libHelper.hide(a))}update(){this.elRecipeList=gameHtml.elModalLeft.querySelector(this.attributeRecipe),this.elRecipeList&&(this.elRecipeListItem=this.elRecipeList.querySelector('[data-id="recipe_item"]')),this.elModalRightMenu=gameHtml.elModalRight.querySelector('[data-id="detail_menu"]'),this.elDetailImageLeft=gameHtml.elModalLeft.querySelector('[data-item="detail-image"]'),this.elDetailImageRight=gameHtml.elModalRight.querySelector('[data-item="detail-image"]'),this.elButtonUnequip=gamePageInventory.elDetail.querySelector('[data-id="detail_button_unequip"]'),this.elButtonEquip=gamePageInventory.elDetail.querySelector('[data-id="detail_button_equip"]'),this.elButtonBack=gamePageInventory.elDetail.querySelector('[data-id="detail_button_back"]'),this.elButtonUse=gamePageInventory.elDetail.querySelector('[data-id="detail_button_use"]'),this.elButtonDeposit=gamePageInventory.elDetail.querySelector('[data-id="detail_button_deposit"]'),this.elButtonDelete=gamePageInventory.elDetail.querySelector('[data-id="detail_button_delete"]'),this.elButtonBackDetail=gameHtml.elTalkDetail.querySelector('[data-id="detail_button_back"]'),this.elQuantity=gamePageInventory.elDetail.querySelector('[data-id="detail_field_quantity"]'),this.elQuantity&&(this.elQuantityInput=this.elQuantity.querySelector(".input"))}updateId(e){const t=e.getAttribute("data-id"),a=e.getAttribute("data-id-lore");this.currentItemId=Number(t),this.currentItemIdLore=Number(a)}watchQuantityBuildValue(e){const t=Object.keys(e).length,a=gameLayout.findInObject(e,"id",this.currentItemId,!1);for(let i=0;i<t-1;i++){const t=e[a].recipe[i].amount,s=n.value*t,n=this.elRecipeListItem.querySelectorAll(".card")[i].querySelector("footer");n.innerHTML=s}}}export const cssStandBottom="stand-bottom";export const cssStandTop="stand-top";export const cssStandRight="stand-right";export const cssStandLeft="stand-left";export const cssWalkBottom="walk-bottom";export const cssDisplayNone="display-none";export const cssButtonTab="menu-tab-button";export const cssMenuTabActive="menu-tab-active";export const cssSide={top:"stand-top",bottom:cssStandBottom,left:"stand-left",right:"stand-right"};export class Layout{constructor(){this.isLocalhost=!0,this.padding=10,this.tileSize=50,this.tileSizeHalf=this.tileSize/2,this.barMainHeight=0,this.mapWidth=0,this.mapHeight=0,this.windowWidth=0,this.windowHeight=0,this.battleBoxWidth=0,this.classResponsiveBox="responsive-column responsive-column-extra-small-12 responsive-column-small-4 responsive-column-regular-3 responsive-column-big-3 responsive-column-extra-big-2",this.classResponsiveBoxBig="responsive-column responsive-column-extra-small-12 responsive-column-small-6 responsive-column-regular-4 responsive-column-big-4 responsive-column-extra-big-3",this.token="",this.barMaximum=100,this.handleMutation=this.handleMutation.bind(this),this.durabilityColor=["green","red","orange"]}buildListener(){if(gameConfiguration.isDevelop)return;const e=gameHtml.elMap.querySelectorAll("div");let t=new(window.MutationObserver||window.WebKitMutationObserver)(this.handleMutation),a={childList:!0,characterData:!0,attributes:!0,subtree:!0};e.forEach((e=>{t.observe(e,a)}))}buildCard(e){const t=e.onclick?e.onclick:e.click,a=t?`onclick="${t}"`:"",i=e.kind?`data-kind="${e.kind}"`:"",s=e.id?`id="${e.id}"`:"",n=e.css?`loot-${e.css}`:"",l=e.text?e.text:"&nbsp;",r=e.dataId?`data-id="${e.dataId}"`:"",o=e.dataItemLore?`data-id-lore="${e.dataItemLore}"`:"",c={value:Number(e.durability),maximum:gameConfiguration.item.durability.maximum},d=gameLayout.calculatePercentage(c),u=e.durability?d:null,m=gameTranslation?.translation?.game?.generic.durability,g=this.buildDurabilityColor(e.durability),h=d+"%";let p=null!==u?`\n            <div class="tooltip tooltip--black" data-tooltip="${m}: ${h}">\n                <div class="progress progress-regular progress-style-${g}">\n                    <div class="progress-bar" style="width: ${h};"></div>\n                </div>\n            </div>\n        `:"";return gameEquipment.noDurabilities.includes(e.kind)&&(p=""),`\n        <div class="box-item">\n            ${p}\n            <div class="card" ${s} ${r} ${o} ${a} ${i}>\n                <div class="card-body">\n                    <div class="responsive-row item-box ${n}"></div>\n                </div>\n                <footer>${l}</footer>\n            </div>\n        </div>\n        `}buildCardArray(e){const t=Number(e.i),a=e.arr[e.i],i="object"==typeof a,s=i?a.il:t,n=gameLayout.findInObject(globalLoot,"id",s,"cssLoot"),l=gameLayout.findInObject(globalLoot,"id",s,"kind"),r=i?a.i:t,o=i?1:a,c=i?a.d:null;return{dataId:r,dataItemLore:i?a.il:t,kind:l,css:n,text:o,durability:c}}buildCapacityColor(e){const t=this.buildProgressSize(),a=this.durabilityColor;return e<=t?a[0]:e<=2*t?a[2]:a[1]}buildDurabilityColor(e){const t=this.buildProgressSize(),a=this.durabilityColor;return e<=t?a[2]:e<=2*t?a[1]:a[0]}buildProgressSize(){return 100/this.durabilityColor.length}buildLoading2(){return'\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12 text-center">\n                    <div class="spinner">\n                        <div class="bounce1"></div>\n                        <div class="bounce2"></div>\n                        <div class="bounce3"></div>\n                    </div>\n                </div>\n            </div>\n        '}buildLoading(e,t,a="gray"){const i=document.querySelector(t),s=`\n            <div class="responsive-row loading">\n                <div class="responsive-column-regular-12 text-center padding-big">\n                    <span class="fa fa-circle-o-notch fa-spin fa-2x color-${a}"></span>\n                </div>\n            </div>\n        `;if("add"===e)return i.insertAdjacentHTML("afterbegin",s);libHelper.remove(i)}buildStatusBars(){let e="<ul>";[{id:"hit_point",css:"hit-point",size:"regular"},{id:"mana_point",css:"mana-point",size:"regular"},{id:"experience",css:"experience",size:"small"}].forEach((t=>{e+=`\n                <li class="tooltip tooltip--black tooltip--right">\n                    <div class="bar main-bar__bar--${t.size}" title="">\n                        <div id="bar_status_${t.id}" class="main-bar__bar--${t.css}"></div>\n                        <div class="shadow"></div>\n                    </div>\n                </li>elMainBarHit\n            `})),e+="</ul>",gameHtml.elMainBarBars.innerHTML=e}buildBattleMenu(){const e=gameData.getPlayerAttributes().class,t=e=>gameHotkey.find("id",e).shortcut,a=gameConfiguration.skills,i=a.fireball.cost,s=a.power.cost,n=a.stone.cost,l=a.arrow.cost,r=t("attackPhysical"),o=t("attackByClass"),c=t("attackRun"),d=gameTranslation?.translation?.game?.battle,u=gameTranslation?.translation?.interface?.default,m=u?.mana_cost,g=u?.shortcut,h=(e,t)=>`${d[e]} ${g} ${t}`,p=(e,t,a)=>{return`${h(e,t)} ${i=m,s=a,gameTranslation.replacePlaceholder(i,s)}`;var i,s},b=h("attack",r),y=p("fireball",o,i),v=p("power",o,s),f=p("stone",o,n),C=p("arrow",o,l),_=h("run",c);let P="<ul>";[{id:"attack",shortcut:r,icon:"gavel",onclick:"attackPhysical",translation:b,classRequired:null},{id:"fireball",shortcut:o,icon:"certificate",onclick:"attackFireball",translation:y,classRequired:1},{id:"power",shortcut:o,icon:"rocket",onclick:"attackPower",translation:v,classRequired:0},{id:"stone",shortcut:o,icon:"cube",onclick:"attackStone",translation:f,classRequired:3},{id:"arrow",shortcut:o,icon:"bullseye",onclick:"attackArrow",translation:C,classRequired:2},{id:"run",shortcut:c,icon:"sign-out",onclick:"run",translation:_,classRequired:null}].forEach((t=>{(null===t.classRequired||t.classRequired===e)&&(P+=`\n                    <li>\n                        <button \n                            type="button" \n                            id="battle_${t.id}" \n                            onclick="gameBattleSkill.${t.onclick}();" \n                            ${gameHtml.attTooltip}="${t.translation}" \n                            ${gameHtml.attShortcut}="${t.shortcut}" \n                            class="button button-regular tooltip tooltip--black tooltip--bottom" \n                            title=""\n                        >\n                            <span class="fa fa-${t.icon}" aria-hidden="true"></span>\n                        </button>\n                    </li>\n                `)})),P+="</ul>",gameHtml.elBattle.innerHTML=P,gameHtml.updateBattle()}buildMenuMain(){const e=`\n            <button id="main_bar_button_toggle" type="button" class="button button-regular main-bar__toggle" onclick="gameMenu.handlePlatform('menu')">\n                <i class="fa fa-bars" aria-hidden="true"></i>\n            </button>\n            <nav id="menu_main" class="menu menu-horizontal main-bar__menu">\n                <ul>\n                    ${this.buildMenuMainButtons(!1)};\n                </ul>\n            </nav>\n        `,t=`\n            <nav class="menu menu-vertical" style="width: 100%">\n                <ul>\n                    ${this.buildMenuMainButtons()}\n                </ul>\n            </nav>\n        `;gameHtml.elMainMenu.innerHTML=e,gameHtml.elPageMenu.innerHTML=t}buildMenuMainButtons(e=!0){const t=gameHotkey.find("id","pageAttributes"),a=gameHotkey.find("id","pageInventory"),i=gameHotkey.find("id","pageQuest"),s=gameHotkey.find("id","pageMap"),n=gameHotkey.find("id","pageAchievement"),l=gameHotkey.find("id","pageSetting"),r=t.shortcut,o=a.shortcut,c=i.shortcut,d=s.shortcut,u=n.shortcut,m=l.shortcut,g=gameTranslation?.translation?.interface?.default?.shortcut+" ";let h=gameTranslation?.translation?.interface?.page_attribute?.title,p=gameTranslation?.translation?.interface?.page_inventory?.title,b=gameTranslation?.translation?.interface?.page_quest?.title,y=gameTranslation?.translation?.interface?.page_map?.title,v=gameTranslation?.translation?.interface?.page_achievement?.title,f=gameTranslation?.translation?.interface?.page_setting?.title;e||(h+=". "+g+r,p+=". "+g+o,b+=". "+g+c,y+=". "+g+d,v+=". "+g+u,f+=". "+g+m);const C=[{id:"attribute",shortcut:r,icon:"user",translation:h,action:t.actionString},{id:"inventory",shortcut:o,icon:"suitcase",translation:p,action:a.actionString},{id:"quest",shortcut:c,icon:"list",translation:b,action:i.actionString},{id:"map",shortcut:d,icon:"map-marker",translation:y,action:s.actionString},{id:"achievement",shortcut:u,icon:"trophy",translation:v,action:n.actionString},{id:"setting",shortcut:m,icon:"cog",translation:f,action:l.actionString}];let _="";const P=e?"button button-full button-gray":"button button-regular tooltip tooltip--black tooltip--left";return C.forEach((t=>{const a=e?`<span class="text">${t.translation}</span>`:"",i=e?"":`<span class="fa fa-${t.icon}" aria-hidden="true"></span>`;_+=`\n                <li>\n                    <button type="button"\n                        onclick="${t.action}"\n                        class="${P}" title="${t.translation}" \n                        ${gameHtml.attTooltip}="${t.translation}" \n                        ${gameHtml.attShortcut}="${t.shortcut}"\n                    >\n                        ${i}\n                        ${a}\n                    </button>\n                </li>\n            `})),_}calculatePercentage(e){const t=100*e.value/e.maximum;return"string"===e.return?t+"%":t}centerBattleField(){this.update();const e=this.windowWidth/2-this.tileSizeHalf,t=this.windowHeight/2+this.tileSizeHalf-this.barMainHeight,a=t+this.tileSize+this.tileSizeHalf,i=t-this.tileSize-this.tileSizeHalf;gameAnimation.animatePosition({target:gameHtml.elCharacter,vertical:a,horizontal:e,speed:0}),gameAnimation.animatePosition({target:gameHtml.elEnemyCurrent,vertical:i,horizontal:e,speed:0});const s=e-this.battleBoxWidth/2+this.tileSizeHalf,n=t+this.tileSize;gameAnimation.animatePosition({target:gameHtml.elBattleBox,vertical:n,horizontal:s,speed:0})}decodeJson(e){const t=JSON.parse(e),a=t.n,i=this.notification;return a&&libNotification.add({content:i}),t.default}decodeMessage(e){const t=gameTranslation?.translation,a={r3:t?.game?.generic?.cheat_detected,r4:t.dialog?.default?.no_gold,r5:t.interface?.page_inventory?.empty,r6:t.login?.response.e_mail_registered,r7:t.dialog?.druigar?.item_deposited,r8:t.dialog?.default?.no_diamond,r9:t.dialog?.default?.is_crafting,r10:t.dialog?.default?.no_item,maintenance:t?.game?.generic?.maintenance_under,session_expired:t?.game?.generic?.session_expired,password_expired:t.login?.password_expired,fail:t.login?.fail,inactive:t.login?.response.activate}[e],i=["session_expired","r3","maintenance"].includes(e);return"r0"===e?gameMaintenance.buildMaintenanceWarning(!0):i?location.reload():void libNotification.add({content:a})}defineActiveMenu(e){const t=e.menu.querySelectorAll("li"),a=e.active;t.forEach((e=>{libHelper.removeClass(e,cssMenuTabActive)})),libHelper.addClass(a,cssMenuTabActive)}findInObject(e,t,a,i){const s=e.length;for(let n=0;n<s;n++){const s=e[n];if(s[t]==a)return!1!==i?s[i]:n}}handleMutation(e){e.forEach((()=>{this.decodeMessage("r3")}))}init(){this.token=document.getElementById("token").value,this.buildStatusBars(),gameHtml.updateBars(),gameHtml.updateBattle(),this.moveMouse(),libHelper.hide(gameHtml.elCharacterEmote),this.resize(),this.updateBar()}initTranslated(){this.buildMenuMain()}moveMouse(){document.addEventListener("mousemove",(()=>{gameInterval.resetCharacter(),gameCharacter.isIdle&&gameAnimation.animateSleep("character",!1)}))}resize(){if(this.update(),!gameBattle.isBattle)return gameCamera.center();this.centerBattleField()}update(){const e=gameHtml.elBattle.classList.contains(cssDisplayNone);this.barMainHeight=libHelper.height(gameHtml.elMainBar),this.mapWidth=libHelper.width(gameHtml.elMap),this.mapHeight=libHelper.height(gameHtml.elMap),this.windowWidth=window.innerWidth,this.windowHeight=window.innerHeight,this.battleBoxWidth=libHelper.width(gameHtml.elBattleBox),e&&(libHelper.removeClass(gameHtml.elBattle,cssDisplayNone),libHelper.addClass(gameHtml.elBattle,cssDisplayNone))}updateBar(){this.updateBarBattle()}updateBarBattle(){this.updateBarEnemy()}updateBarStatus(){const e=gameData.getPlayerAttributes(),t=Math.round((e.experience-e.experienceLast)/(e.experienceNext-e.experienceLast)*this.barMaximum),a=Math.round(e.hitPoint*this.barMaximum/e.hitPointMaximum),i=Math.round(e.manaPoint*this.barMaximum/e.manaPointMaximum),s="height",n=gameTranslation?.translation.title;if(!n)return;const l=(t,a,i)=>`${n[t]}: ${e[a]} / ${e[i]}`,r=l("life","hitPoint","hitPointMaximum"),o=l("magic","manaPoint","manaPointMaximum"),c=l("experience","experience","experienceNext");this.updateBarStyle({el:gameHtml.elMainBarExperience,style:s,value:t,translation:c}),this.updateBarStyle({el:gameHtml.elMainBarHit,style:s,value:a,translation:r}),this.updateBarStyle({el:gameHtml.elMainBarMana,style:s,value:i,translation:o})}updateBarEnemy(){const e=document.getElementById(`enemy_${gameBattle.enemy}`),t=e?.querySelector(".progress-bar"),a=gameData.getEnemy(),i=Math.round(a?.hitPoint*this.barMaximum/a?.hitPointMaximum);e&&this.updateBarStyle({el:t,style:"width",value:i})}updateBarStyle(e){const t=e.el,a=e.translation;let i=e.value;t&&(i>this.barMaximum&&(i=this.barMaximum),t.style[e.style]=`${i}%`,t.parentNode.parentNode.setAttribute(gameHtml.attTooltip,a))}}export class Login{constructor(){this.isGuest=!1,this.isForget=!1,this.isSignUp=!1,this.isResend=!1,this.isPageLoginRegisterSend=!1,this.isPageLoginRegisterResendSend=!1,this.isPageLoginRegisterForgetSend=!1,this.classBackEnd="&c=Form",this.classBackEndLogin="&c=Login"}buildLoginPage(e){switch(gamePage.open({page:e,position:"middle"}),e){case"page_login":this.buildLoginPageLogin();break;case"page_login_forget":this.buildLoginPageForget();break;case"page_login_sign_up":this.buildLoginPageSignUp();break;case"page_login_resend":this.buildLoginPageResend()}}buildLoginPageLogin(){""===this.elEMail.value&&this.elEMail.focus()}buildLoginPageForget(){this.elForgetEmail.focus()}buildLoginPageSignUp(){this.elRegisterUser.focus()}buildLoginPageResend(){this.elResendEmail.focus()}buildLoginGuest(){const e=gameConfiguration.account.guest;gameLogin.isGuest=!0,this.elEMail.value=e.email,this.elPassword.value=e.password,this.elButtonLogin.click()}buildLogin(){const e=document.getElementById("page_login_response"),t="undefined"!=typeof grecaptcha?grecaptcha.getResponse():"";if(this.elEMail.focus(),e.innerHTML="",!this.buildLoginValidate())return;gamePageSetting.eMail=this.elEMail.value;const a=this.elEMail.value,i=this.elPassword.value;this.elButtonLogin.setAttribute("disabled",!0);const s=`${this.classBackEndLogin}&m=buildLogin&email=${a}&password=${i}&captcha=${t}`;let n=libHelper.ajax({parameter:s});const l={email:a,language:globalLanguage};this.buildLoginSetData(l),n.then((e=>this.buildLoginSuccess(e)))}buildLoginAjax(){const e="winterjeferson@gmail.com",t=`${this.classBackEndLogin}&m=buildLogin&email=${e}&password=teste789&captcha=`;let a=libHelper.ajax({parameter:t});const i={email:e,language:globalLanguage};this.buildLoginSetData(i),a.then((e=>this.buildLoginSuccess(e)))}buildLoginSetData(e){console.log("buildLoginSetData() data",e);const t=gameData.buildProperty(e,[{id:"email",type:"string"},{id:"language",type:"string"}]);gameData.setAccount(t)}buildLoginSuccess(e){if(console.log("buildLoginSuccess() data",e),"characterSelect"===e)return gameManagement.buildCharacterCustomizeSelect();gameLayout.decodeMessage(e),this.elButtonLogin.removeAttribute("disabled")}buildLoginValidate(){const e=gameTranslation?.translation.login.response.white_space;return""===this.elEMail.value?this.elEMail.focus():""===this.elPassword.value?this.elPassword.focus():libHelper.validateEmptySpace(this.elEMail)?(this.elEMail.focus(),libNotification.add({content:e}),!1):!libHelper.validateEmptySpace(this.elPassword)||(this.elPassword.focus(),libNotification.add({content:e}),!1)}buildResetPassword(){const e=document.querySelector(".js-forget-content");this.isForget?(this.isForget=!1,libHelper.hide(e)):(this.isForget=!0,libHelper.show(e))}buildSignUp(){const e=document.querySelector(".js-sign-up-content");this.isSignUp?(this.isSignUp=!1,libHelper.hide(e)):(this.isSignUp=!0,libHelper.show(e))}buildSignUpSend(){const e=this.elRegisterUser.value,t=this.elRegisterEmail.value,a=this.elRegisterPassword.value,i=void 0!==window.jsonLanguage?window.jsonLanguage:"pt",s=this.elRegisterAcceptNewletter.checked,n=`${this.classBackEnd}&m=registerForm&user=${e}&e_mail=${t}&password=${a}&l=${i}&newsletter=${s}`;if(this.elResponseRegister.innerHTML="",!this.buildSignUpSendValidate(this.elResponseRegister))return;libHelper.ajax({parameter:n}).then((e=>this.buildSignUpSendSucess(e)))}buildSignUpSendSucess(e){const t=gameTranslation?.translation.login;let a="";switch(e){case"sc":a=t.response.special_character,this.elRegisterUser.focus(),libNotification.add({content:a});break;case"1062":case"23000":a=t.response.duplicate,this.elRegisterUser.focus(),libNotification.add({content:a});break;case"error_email_invalid":a=t.response.e_mail_invalid,this.elRegisterEmail.focus(),libNotification.add({content:a});break;case"r6":case"error_email_registered":this.elRegisterEmail.focus(),gameLayout.decodeMessage("r6");break;case"do":a=t.response.activate,gameAnalytics.send("form","register"),libNotification.add({content:a}),this.isPageLoginRegisterSend=!0;break;default:a=t.response.error,libNotification.add({content:a})}}buildSignUpSendValidate(){const e=this.elRegisterAcceptTerms.checked,t=[this.elRegisterUser,this.elRegisterEmail,this.elRegisterPassword,this.elRegisterPasswordVerify],a=t.length;let i="";for(let e=0;e<a;e++){const a=t[e];if(""===a.value)return a.focus(),i=gameTranslation?.translation.login.response.empty,libNotification.add({content:i}),!1}return this.elRegisterPassword.value!==this.elRegisterPasswordVerify.value?(this.elRegisterPassword.focus(),i=gameTranslation?.translation.login.response.password,libNotification.add({content:i}),!1):!!e||this.elRegisterAcceptTerms.focus()}buildSignUpResend(){let e=document.querySelector(".js-sign-up-resend");libHelper.show(e),this.isResend?(this.isResend=!1,libHelper.hide(e)):this.isResend=!0}buildSignUpResendForm(){const e=this.elResendEmail.value,t=`${this.classBackEnd}&m=resendConfirmation&e_mail=${e}`,a=gameTranslation?.translation.login.response.empty;if(""===this.elResendEmail.value)return libNotification.add({content:a}),void this.elResendEmail.focus();libHelper.ajax({parameter:t}).then((e=>this.buildSignUpResendFormSuccess(e)))}buildSignUpResendFormSuccess(e){let t="";switch(e){case"actived":this.elResendButtonSend.setAttribute("disabled",!0),t=gameTranslation?.translation.login.response.already_actived,libNotification.add({content:t});break;case"error_email_invalid":t=gameTranslation?.translation.login.response.e_mail_invalid,libNotification.add({content:t}),this.elResendEmail.focus();break;case"email_not_found":t=gameTranslation?.translation.login.response.not_found,libNotification.add({content:t}),this.elResendEmail.focus();break;case"done":gameAnalytics.send("form","re send"),t=gameTranslation?.translation.login.response.activate,libNotification.add({content:t}),this.isPageLoginRegisterResendSend=!0}}buildResetPasswordForm(){const e=this.elForgetEmail.value,t=`${this.classBackEnd}&m=resetPassword&e_mail=${e}`;if(!this.buildResetPasswordFormValidate())return;this.elResponseForget.innerHTML="",this.elForgetButtonSend.setAttribute("disabled",!0),libHelper.ajax({parameter:t}).then((e=>this.buildResetPasswordFormSuccess(e)))}buildResetPasswordFormSuccess(e){let t="";switch(e){case"error_email_invalid":t=gameTranslation?.translation.login.response.e_mail_invalid,libNotification.add({content:t}),this.elForgetButtonSend.removeAttribute("disabled"),this.elForgetEmail.focus();break;case"email_not_found":t=gameTranslation?.translation.login.response.not_found,libNotification.add({content:t}),this.elForgetButtonSend.removeAttribute("disabled"),this.elForgetEmail.focus();break;case"done":t=gameTranslation?.translation.login.response.password_reset,gameAnalytics.send("form","reset password"),libNotification.add({content:t}),this.isPageLoginRegisterForgetSend=!0}}buildResetPasswordFormValidate(){let e="";return""===this.elForgetEmail.value?(e=gameTranslation?.translation.login.response.empty,libNotification.add({content:e}),this.elForgetEmail.focus(),!1):!libHelper.validateEmptySpace(this.elForgetEmail)||(e=gameTranslation?.translation.login.response.white_space,this.elForgetEmail.focus(),libNotification.add({content:e}),!1)}init(){this.updateHtml(),this.buildLoginPage("page_login")}updateHtml(){this.elPage=document.getElementById("page_login"),this.elButtonGuest=document.getElementById("page_login_button_guest"),this.elButtonLogin=document.getElementById("page_login_button_login"),this.elButtonSignUp=document.getElementById("page_login_button_sign_up"),this.elEMail=document.getElementById("page_login_e_mail"),this.elPassword=document.getElementById("page_login_password"),this.elCaptcha=document.getElementById("page_login_captcha"),this.elForget=document.getElementById("page_login_forget"),this.elForgetEmail=document.getElementById("page_login_forget_e_mail"),this.elForgetButtonSend=document.getElementById("page_login_forget_button_send"),this.elSignUp=document.getElementById("page_login_sign_up"),this.elSignUpButtonRegister=document.getElementById("page_login_sign_up_button_register"),this.elSignUpButtonResend=document.getElementById("page_login_sign_up_button_resend"),this.elLoginResend=document.getElementById("page_login_resend"),this.elResendEmail=document.getElementById("page_login_resend_e_mail"),this.elSignUpButtonResendBack=document.getElementById("page_login_resend_button_back"),this.elSignUpButtonBack=document.getElementById("page_login_sign_up_button_back"),this.elRegisterEmail=document.getElementById("page_login_register_e_mail"),this.elRegisterPassword=document.getElementById("page_login_register_password"),this.elRegisterPasswordVerify=document.getElementById("page_login_register_password_verify"),this.elRegisterUser=document.getElementById("page_login_register_user"),this.elRegisterAcceptNewletter=document.getElementById("page_login_sign_up_accept_newsletter"),this.elRegisterAcceptTerms=document.getElementById("page_login_sign_up_accept_terms"),this.elRegisterAcceptTermsLink=this.elRegisterAcceptTerms?.parentNode.querySelector(".link"),this.elResendButtonSend=document.getElementById("page_login_resend_button_send"),this.elButtonForget=document.getElementById("page_login_button_forget"),this.elButtonForgetBack=document.getElementById("page_login_forget_button_back"),this.elResponseRegister=document.getElementById("page_login_register_response"),this.elResponseForget=document.getElementById("page_login_register_forget_response"),this.elSelectLanguage=document.getElementById("page_login_select_language")}}export class LoreQuest{buildQuest1(e){switch(e){case"empty":case"do":this.buildQuest1Needs();break;case"verify":this.buildQuest1Verify()}}buildQuest1Verify(){this.update(),this.elText.innerHTML=gameTranslation?.translation?.game?.quest.quest_1.almost,libHelper.show(this.elMenu.parentNode)}buildQuest1Reward(){libHelper.ajax({parameter:"&c=GameLoreQuest&m=buildQuest1Reward"}).then((()=>this.buildQuest1RewardSuccess()))}buildQuest1RewardSuccess(){gameAnalytics.send("quest 1","reward"),this.elText.innerHTML=gameTranslation?.translation?.game?.quest.done,this.hideMenu(),gamePageQuest.updateQuest(),gamePageInventory.updateLoot(!1)}buildQuest1Needs(){libHelper.ajax({parameter:"&c=GameLoreQuest&m=returnQuestNeeds&p=1"}).then((e=>this.buildQuest1NeedsSuccess(e)))}buildQuest1NeedsSuccess(e){const t=JSON.parse(e);let a=t.length;if(this.update(),this.elText){this.elText.innerHTML=gameTranslation?.translation?.game?.quest.quest_1.description;for(let e=0;e<a;e++){const a=gameLayout.findInObject(globalLoot,"id",t[e][0],"translation"),i=`<span class="color-red">${t[e][1]}</span>`,s=this.elText.querySelector(`[data-id="item-${e}"]`),n=this.elText.querySelector(`[data-id="value-item-${e}"]`);s.innerHTML=gameTranslation?.translation?.game?.loot[a],n.innerHTML=i}gamePageQuest.updateQuest()}}buildQuest1NeedsText(){const e=document.getElementById("quest_1");if(!e)return;const t=e.querySelectorAll("td")[1],a=gamePageQuest.arrQuest[0].qN1,i=JSON.parse(a),s=i.length;for(let e=0;e<s;e++){const a=i[e][0],s=i[e][1],n=gameLayout.findInObject(globalLoot,"id",Number(a),"translation"),l=gameTranslation?.translation?.game?.loot[n],r=t.querySelector(`[data-id="item-${e}"]`),o=t.querySelector(`[data-id="value-item-${e}"]`);r&&o&&(r.innerHTML=l,o.innerHTML=s)}}hideMenu(){const e=this.elMenu.parentNode;libHelper.hide(e)}update(){this.elList=gameHtml.elTalk.querySelector('[data-id="list_quest"]'),this.elList&&(this.elText=this.elList.querySelector(".text"),this.elMenu=this.elList.querySelector(".menu"))}}export class Maintenance{constructor(){this.isNotify=!1,this.notifyCount=0,this.interval}buildMaintenanceWarning(e){const t=this;if(this.isNotify)return!1;e?this.interval=setInterval((function(){t.isNotify=!0,t.buildMaintenanceWarning()}),5e3):clearInterval(this.interval)}buildMaintenanceWarning(){const e=gameTranslation?.translation?.game?.generic.maintenance_warning;this.notifyCount++,libNotification.add({text:e,color:"orange"}),this.notifyCount>=5&&(this.notifyCount=0,this.isNotify=!1,this.buildMaintenanceWarning(!1),gameManagement.buildLogout())}}export class Management{constructor(){this.status="",this.characterDelete=0,this.notification=""}async build(){switch(this.status){case"updateQuest":gameLoreQuest.update(),await gamePageQuest.updateQuest();break;case"updateAchievement":this.start()}}buildCharacterCustomizeSelect(){gameCharacterSelect.buildCharacterCustomizeSelect("initial"),gameConfiguration.isLogin=!0,gameTransition.populateTip(),this.buildCharacterSelectModal(),gameBattle.unbuild(),libHelper.hide(gameHtml.elCharacter),gamePageSetting.isSelectCharacter?libHelper.show(gameHtml.elMainBar):libHelper.hide(gameHtml.elMainBar),gamePage.open({page:"page_character_select",position:"middle"})}buildCharacterSelectModal(){libHelper.removeClass(gameHtml.elModal,"modal-size-small"),libHelper.addClass(gameHtml.elModal,"modal-size-big"),gameCharacterSelect.buildCharacterSelect(),gamePageInventory.buildPageFilterMenuAction()}init(){gameData.init(),gameTutorial.init(),gamePage.init(),gameCharacter.init(),gameCharacterSelect.init(),gameLayout.init(),gameResource.init(),gamePageTransition.init(),gamePageInventory.update(),gameConfiguration.define(),gameBattle.disable(),gameTransition.buildLayout("hide"),gameTranslation.init()}start(){const e=""!==this.notification,t=this.notification;gamePlayer.build(),gameComponentPageDetail.build(),gameItemDetail.update(),gameMenu.isMenuByClass=!1,gameLayout.buildBattleMenu(),gameHotkey.build(),gameCharacter.buildCharacterAppearancePerson({el:gameHtml.elCharacter,elSetting:"player",css:cssStandBottom}),gameAnimation.animateMove("character",!1,cssStandBottom),gameInterval.build(!0),gameMap.build(),gamePage.close(),gameAudio.init(),libHelper.removeClass(gameHtml.elMainContent,"full-screen"),libHelper.hide(gameHtml.elTutorial),libHelper.show(gameHtml.elMap),libHelper.show(gameHtml.elEnemy),libHelper.hide(gameHtml.elBattlefield),libHelper.show(gameHtml.elMainBar),libHelper.show(gameHtml.elCharacter),gameInterface.toggleModalMidleClose("show"),e&&libNotification.add({content:t})}translate(){gamePageInventory.init(),gamePageQuest.init(),gamePageAchievement.init(),gamePageAdvise.init(),gamePageAttribute.init(),gamePageStatistic.init(),gamePageCharacterSelect.init(),gamePageCharacterSelectClass.init(),gamePageTutorialHistory.init(),gamePageTutorialWalk.init(),gamePageSetting.init(),gamePageMap.init(),gameCustomization.init(),gameLayout.initTranslated(),gameComponent.buidConfirmaton(),this.buildCharacterCustomizeSelect()}watchLoad(){gameInterface.init(),gameHtml.init(),editorMap.build("game"),this.init(),this.watchResize(),gameMap.calculate(),gameItemDetail.build(),gameTransition.buildSpinner(!1)}watchResize(){window.addEventListener("resize",(()=>{gameLayout.resize(),gameMap.resize()}))}}export class Map{constructor(){this.width=0,this.height=0,this.current=0,this.lastMap=0,this.currentCity=0,this.currentX=0,this.currentY=0,this.currentSubX=0,this.currentSubY=0,this.tileTotal=0,this.tileTotalX=0,this.tileTotalY=0,this.tileTotalXView=0,this.tileTotalYView=0,this.positionX=0,this.positionY=0,this.scrollWidth=0,this.scrollHeight=0,this.limitXReset=0,this.limitYTop=0,this.limitYBottom=0,this.limitXLeft=0,this.limitXRight=0,this.limitYReset=0,this.enemySlot=0,this.arrEnemyLevel=[],this.arrForbiddenTile=[],this.arrForbiddenTileLength=0,this.tileTotalX=41,this.tileTotalY=34,this.arrEnemy=[],this.arrDoor=[],this.arrNpc=[],this.arrMap=[],this.arrMapLength=0,this.buildArray("x"),this.buildArray("y"),this.doorUsed=!1}addDataId(){this.arrMap=[];gameHtml.elMap.querySelectorAll("span").forEach((e=>{const t=editorMap.convertTileId(e);e.setAttribute("data-id",t),e.setAttribute("onclick","gameMap.clickTile(this)"),this.arrMap.push(t)})),this.arrMapLength=this.arrMap.length}build(){const e=`&c=Map&m=build&map=${this.current}&door=${this.doorUsed}`;libHelper.ajax({parameter:e}).then((e=>this.buildSuccess(e)))}buildSuccess(e){const t=JSON.parse(e);gameHtml.elMap.setAttribute("data-current",this.current),gamePageAchievement.isUpdate=!1,this.currentCity=t.city,this.resourceSlot=t.resource.slot,this.buildDoor(t.door),this.buildNpc(t.npc),this.setPositionCharacter(),this.buildEnemy(t),this.buildResource(t),gameTransition.buildLayout("show"),gameAnalytics.send("map change",this.current)}buildArray(e){const t=libHelper.capitalize(e),a=this[`tileTotal${t}`];for(let i=0;i<=a;i++)this[`arr${t+i}`]=[],this[e+i]=0}buildForbiddenTile(){this.arrForbiddenTile=[],this.arrNpc.forEach((e=>{this.arrForbiddenTile.push(e.tile)}));for(let e=0;e<this.tileTotal;e++){const t=gameHtml.elMap.querySelector(`span[data-id='${e}']`);if(t){const a="class",i=t.getAttribute("class"),s=editorMap.decodeMapIndice({searchBy:a,key:i,returnBy:"enemy"}),n=editorMap.decodeMapIndice({searchBy:a,key:i,returnBy:"door"});s||this.arrForbiddenTile.push(e),n&&this.buildForbiddenTileSpace(e)}}this.buildForbiddenTileSpace(gameCharacter.dataTile),this.arrForbiddenTileLength=this.arrForbiddenTile.length}buildForbiddenTileSpace(e){const t=Number(e);this.arrForbiddenTile.push(t),this.arrForbiddenTile.push(t+1),this.arrForbiddenTile.push(t-1),this.arrForbiddenTile.push(t-this.tileTotalX),this.arrForbiddenTile.push(t-this.tileTotalX+1),this.arrForbiddenTile.push(t-this.tileTotalX-1),this.arrForbiddenTile.push(t+this.tileTotalX),this.arrForbiddenTile.push(t+this.tileTotalX+1),this.arrForbiddenTile.push(t+this.tileTotalX-1)}buildDoor(e){this.arrDoor=[],e.forEach((e=>{this.arrDoor.push(e)}))}buildEnemy(e){const t=e.enemy,a=t.kind;this.arrEnemyLevel=t.level,this.enemySlot=t.slot,gameEnemy.arrEnemy=[],gameEnemy.arrEnemyPosition=[],a.forEach((e=>{const t=Object.keys(gameEnemy.enemy)[e];gameEnemy.arrEnemy.push(t)}))}buildResource(e){const t=e.resource.kind;this.arrResource=e.resource,this.resourceSlot=e.resource.slot,gameResource.arrResource=[],gameResource.arrResourcePosition=[],t.forEach((e=>{gameResource.arrResource.push(e)}))}buildNpc(e){this.arrNpc=[],e.forEach((e=>{e.actions=[],this.arrNpc.push(e)}))}calculate(){this.update(),this.setStyle();for(let e=0;e<this.tileTotalY;e++){this[`y${e}`]=Number(gameLayout.tileSize*e);for(let t=this.tileTotalX*e;t<this.tileTotalX*(e+1);t++)this[`arrY${e}`].push(t);for(let t=0;t<this.tileTotalX;t++)this[`arrX${t}`].push(this.tileTotalX*e+t)}for(let e=0;e<this.tileTotalX;e++)this[`x${e}`]=Number(gameLayout.tileSize*e);this.resize()}change(e){const t=this.arrDoor.length;this.lastMap=this.current,gameHtml.elCharacter.style.opacity=0,gameHtml.elNpc.innerHTML="",gameHtml.elEnemy.innerHTML="";for(let a=0;a<t;a++){const t=this.arrDoor[a];if(t.id===e){this.changeDoor(t),this.doorUsed=t.door.substring(1);break}}gamePage.close(),this.build()}changeDoor(e){const t=e.door;this.current=e.map,editorMap.usedDoor=t.substring(1),gameCharacter.dataTile=e.tile;for(let e=0;e<this.arrMapLength;e++){const a=this.arrMap[e];if(a.map===this.lastMap){a[t]=1;break}}}decode(){this.addDataId(),gameCharacter.updatePosition(),gameNpc.build(),this.buildForbiddenTile(),gameEnemy.build(),gameResource.build(),gameLayout.resize(),gameLayout.buildListener(),gameHtml.elCharacter.style.opacity=1,gameTransition.buildLayout("hide")}getPosition(e){const t=this[`tileTotal${e.coordinate.toUpperCase()}`];for(let a=0;a<t;a++){const t=this.getPositionLoop(a,e);if(void 0!==t)return t}}getPositionLoop(e,t){const a=t.coordinate.toUpperCase(),i=`position${a+e}`,s=this[`arr${a+e}`].indexOf(t.tile);if(this[i]=s,-1!==this[i])return e}clickTile(e){const t=gamePageTransition.elPage,a=Number(e.getAttribute("data-id"));t.classList.contains(cssDisplayNone)&&!gameBattle.isBattle&&(this.tileClicked=a,gameConfiguration.define(),gameMove.move(a))}reset(){this.dataTile=gameConfiguration.player.map.initial.id}resize(){const e=Number(gameLayout.tileSize+gameLayout.tileSizeHalf);this.tileTotalXView=Math.ceil(gameLayout.windowWidth/gameLayout.tileSize),this.tileTotalYView=Math.ceil((gameLayout.windowHeight-gameLayout.barMainHeight)/gameLayout.tileSize),this.limitYTop=e,this.limitYBottom=Number(gameLayout.windowHeight-e),this.limitXLeft=e,this.limitXRight=Number(gameLayout.windowWidth-e),this.limitXReset=0,this.limitYReset=0,this.scrollWidth=Number(gameLayout.tileSize*this.tileTotalXView),this.scrollHeight=Number(gameLayout.tileSize*this.tileTotalYView)}setPositionCharacter(){const e=`${gameCharacterSelect.classBackEnd}&m=setSessionPosition&map=${this.current}`;libHelper.ajax({namespace:gameCharacterSelect.namespace,parameter:e}).then((()=>this.setPositionCharacterSuccess()))}setPositionCharacterSuccess(){editorMap.buildMap(this.current),gamePageMap.setPositionCharacter()}setPosition(e){["x","y"].forEach((t=>{const a=t.toUpperCase();for(let i=0;i<this[`tileTotal${a}`];i++)this.setPositionLoop({coordinate:t,id:i,target:e.target,tile:e.tile})}))}setPositionLoop(e){-1!==this[`arr${e.coordinate.toUpperCase()+e.id}`].indexOf(e.tile)&&this.setPositionPlace(e)}setPositionPlace(e){const t=e.coordinate.toUpperCase(),a=e.target;if(null==a)return;const i=libHelper.getTranslateValue(e.target),s=Math.floor(i.y),n=Math.floor(i.x),l=this[e.coordinate+e.id],r="y"===e.coordinate?l:s,o="x"===e.coordinate?l:n;if(a.style.transform=`translate(${o+"px"} ,${r+"px"})`,a.setAttribute("data-"+e.coordinate,e.id),e.target===gameHtml.elCharacter){gameCharacter["data"+t]=e.id}}randomPlace(e){const t=libHelper.randomNumber(this.tileTotal);return-1!==this.arrForbiddenTile.indexOf(t)?this.randomPlace(e):(this.arrForbiddenTile.push(t),t)}setStyle(){const e="px";gameHtml.elMap.style.width=this.width+e,gameHtml.elMap.style.maxWidth=this.width+e,gameHtml.elMap.style.height=this.height+e,gameHtml.elMap.style.maxHeight=this.height+e,gameHtml.elBattlefield.style.width=this.width+e,gameHtml.elBattlefield.style.maxWidth=this.width+e,gameHtml.elBattlefield.style.height=this.height+e,gameHtml.elBattlefield.style.maxHeight=this.height+e}update(){this.tileTotalX=editorMap.tileTotalX,this.tileTotalY=editorMap.tileTotalY,this.tileTotal=editorMap.tileTotalX*editorMap.tileTotalY,this.width=this.tileTotalX*gameLayout.tileSize,this.height=this.tileTotalY*gameLayout.tileSize}updateData(e){console.log("updateData() map"),console.log(e)}}export class Menu{constructor(){this.spacement=10,this.arrBtn=["attribute","inventory","map","quest","achievement","setting","menu","social"],this.arrBtnLength=this.arrBtn.length,this.isSub=!1,this.isSubAnimation=!1,this.isMenuByClass=!1}attackByClass(){const e=gameData.getPlayerAttributes().class;let t;0===e&&(t="Power"),1===e&&(t="Fireball"),2===e&&(t="Arrow"),3===e&&(t="Stone"),gameBattleSkill[`attack${t}`]()}handlePlatform(e){gamePage.toggle({page:`page_${e}`,position:"right"}),"inventory"===e&&gamePageInventory.buildPageFilterMenuActive(),"attribute"===e&&gamePageAttribute.requestUpdate(),"achievement"===e&&(gamePageAchievement.isUpdate=!0,gamePageAchievement.updateAchievement())}useItem(e){gamePageInventory.elPageItem.querySelector(`[data-id="${e}"]`)&&gamePageInventory.handleUse(e,!1,!0)}}export class Move{constructor(){this.side}moveBattle(e,t,a,i,s,n,l){const r=gameHtml.elCharacter,o=libHelper.getTranslateValue(r),c=o.y-gameLayout.tileSize,d=o.x,u=gameAnimation.animatePosition({target:r,vertical:c,horizontal:d});this.side="top",gameAnimation.animateMove("character",!1,"walk-top"),u.then((()=>this.moveBattleDone(e,t,a,i,s,n,l)))}moveBattleDone(e,t,a,i,s,n,l){gameBattle.buidDamage({el:gameHtml.elCharacter,damage:e}),gameAnimation.animateDamage(gameHtml.elCharacter,l),this.moveBattleBack(t,a,i,s,n)}moveBattleBack(e,t,a,i,s){const n=gameHtml.elCharacter,l=libHelper.getTranslateValue(n),r=l.y+gameLayout.tileSize,o=l.x,c=gameAnimation.animatePosition({target:n,vertical:r,horizontal:o});gameAnimation.animateMove("character",!1,"walk-top"),c.then((()=>this.moveBattleBackDone(e,t,a,i,s)))}moveBattleBackDone(e,t,a,i,s){e?(gameEnemy.lootId=t,gameEnemy.lootAmount=a,gameBattle.buildResult("character")):(gameBattle.disable(),gameBattle.buildTurn("pass"),gameAnimation.animateMove("character",!1,"stand-top")),i&&gameCharacter.buildLevelUp(s)}moveMoved(e,t,a){gameCharacter.dataTile=e,gameCharacter.isMoving=!1;const i=this.moveVerifyEnemy(e),s=this.moveVerifyDoor(e);if(e===gameMap.tileClicked){this.moveVerifyResource(e)}gameBattle.isBattle||(void 0===a&&(a="bottom"),gameAnimation.animateMove("character",!1,"stand-"+a)),i||s||(gameMap.setPosition({target:gameHtml.elCharacter,tile:gameCharacter.dataTile}),e!==t&&this.move(gameCharacter.dataTileWantMove)),gameCamera.center()}move(e){const t=gameMap.getPosition({target:gameHtml.elCharacter,tile:e,coordinate:"x"}),a=gameMap.getPosition({target:gameHtml.elCharacter,tile:e,coordinate:"y"});if(gameCharacter.dataTileWantMove=e,gameCharacter.isBlocked)return gameCharacter.isBlocked=!1,gameAnimation.animateMove("character",!1,cssStandBottom);if(this.moveVerifyWalk(e)&&!gameBattle.isBattle){if(gameCharacter.dataY>a)return this.moveSide(e,"top");if(gameCharacter.dataY<a)return this.moveSide(e,"bottom");if(gameCharacter.dataY===a){if(gameCharacter.dataX>t)return this.moveSide(e,"left");if(gameCharacter.dataX<t)return this.moveSide(e,"right")}}}moveSide(e,t){let a,i,s,n,l=`walk-${t}`;const r=libHelper.getTranslateValue(gameHtml.elCharacter),o=Math.floor(r.y),c=Math.floor(r.x);if(this.side=t,!gameCharacter.isMoving){switch(gameCharacter.isMoving=!0,t){case"top":a=gameCharacter.dataTile-gameMap.tileTotalX,i=o-gameLayout.tileSize,s=!1;break;case"bottom":a=gameCharacter.dataTile+gameMap.tileTotalX,i=o+gameLayout.tileSize,s=!1;break;case"left":a=gameCharacter.dataTile-1,i=!1,s=c-gameLayout.tileSize;break;case"right":a=gameCharacter.dataTile+1,i=!1,s=c+gameLayout.tileSize}this.moveVerifyWalk(a)&&(gameAnimation.animateMove("character",!1,l),n=gameAnimation.animatePosition({target:gameHtml.elCharacter,vertical:i,horizontal:s}),n.then((()=>this.moveMoved(a,e,t))))}}moveVerifyWalk(e){const t=gameHtml.elMap.querySelector(`[data-id="${e}"]`);if(!t)return;const a=t.getAttribute("class").split(" ")[0],i=editorMap.decodeMapIndice({searchBy:"class",key:a,returnBy:"walk"});return i||(gameCharacter.isBlocked=!0,this.moveMoved(gameCharacter.dataTile)),i}moveVerifyDoor(e){if(gameCharacter.dataTile!==e)return;const t=gameHtml.elMap.querySelector(`[data-id="${e}"]`);if(!t)return;const a=t.getAttribute("class").split(" ")[0];editorMap.decodeMapIndice({searchBy:"class",key:a,returnBy:"door"})&&(gameMap.lastMap=gameMap.current,gameMap.change(e))}moveVerifyEnemy(e){if(-1!==gameEnemy.arrEnemyPosition.indexOf(e))for(let t=0;t<=gameEnemy.enemyOnTheMap-1;t++)if(e===gameEnemy[`enemy${t}Position`])return gameBattle.build(t),!0;return!1}moveVerifyResource(e){if(-1!==gameResource.arrResourcePosition.indexOf(e))for(let t=0;t<=gameResource.elementOnTheMap-1;t++)if(e===gameResource[`resource${t}Position`])return gameResource.pick(t),!0;return!1}}export class Notification{updateData(e){console.log("updateData() notification"),console.log(e)}}export class Npc{constructor(){this.npcCurrent={},this.currentAction="",this.arrBuy=[],this.classFrontEnd="gameNpc",this.actions=[{id:0,label:"buy"},{id:1,label:"sell"},{id:2,label:"quest"},{id:3,label:"craft"},{id:4,label:"customizeApply"},{id:5,label:"customizeBuy"},{id:6,label:"bankDeposit"},{id:7,label:"bankWithdraw"}],this.crafts=[{id:0,label:"wood"},{id:1,label:"plant"},{id:2,label:"fabric"},{id:3,label:"drawWell"},{id:4,label:"witch"},{id:5,label:"stone"}]}build(){if(0===gameMap.arrNpc.length)return;let e="";gameMap.arrNpc.forEach((t=>{const a=t.id,i=t.name,s=libHelper.capitalize(i),n=window[`gameNpc${s}`].props,l=gameComponent.buildPerson(n);window[`gameNpc${s}`].person=l,e+=`\n                <div id="npc_${a}" data-x="" data-y="" data-npc="${i}" onclick="gameNpc.clickNpc(this);">\n                    ${l}\n                </div>\n            `})),gameHtml.elNpc.innerHTML=e,gameMap.arrNpc.forEach((e=>{this.setNpc(e.id)}))}buildCustomize(){const e=gameHtml.elTalk.querySelector(`[data-id="${gameNpcActionCustomize.dataIdCustomizeApply}"]`);libHelper.show(e)}buildCraft(){const e=gameHtml.elTalk.querySelector('[data-id="list_craft"]');libHelper.show(e)}buildCustomizeBuy(){const e=gameHtml.elTalk.querySelector(`[data-id="${gameNpcActionCustomize.dataIdCustomizeBuy}"]`);libHelper.show(e)}buildQuest(){const e=gameHtml.elTalk.querySelector('[data-id="list_quest"]'),t=gameHtml.elTalk.querySelector('[data-id="current_money"]'),a=gameHtml.elTalk.querySelector('[data-id="current_diamond"]');libHelper.show(e),libHelper.hide(t),libHelper.hide(a)}buildCurrentMoney(){const e=gameHtml.elTalk?.querySelector('[data-id="current_money"]'),t=gameHtml.elTalk?.querySelector('[data-id="current_diamond"]');if(!libHelper.isElementVisible(e))return;const a=gamePlayer.getMoney(),i=a.gold,s=a.diamond,n=e?.querySelector("input"),l=t?.querySelector("input");libHelper.setInputValue(n,i),libHelper.setInputValue(l,s)}buildMenu(){this.update(),this.clickFirstButton()}buildParameterNpc(){return`&npc=${this.npcCurrent.name}`}clickBack(){const e=this[`elButtonTab${libHelper.capitalize(this.currentAction)}`];gamePage.open({page:`talk_${this.npcCurrent}`,position:"left"}),e&&e.click()}clickBuy(){this.currentAction="buy",gameNpcActionBuy.doBuy()}clickSell(){this.currentAction="sell",gameNpcActionSell.doSell()}clickTabBuy(){this.currentAction="buy",this.hideContentList(),gameNpcActionBuy.build(),this.defineActiveMenu("buy")}clickTabCraft(){const e=libHelper.capitalize(gameCraft.currentCraft);this.currentAction="craft",this.hideContentList(),this.buildCraft(),window[`gameCraft${e}`].build(),this.defineActiveMenu("craft")}clickTabCustomize(){this.currentAction="customizeApply",this.hideContentList(),this.buildCustomize(),this.defineActiveMenu("customize_apply")}clickTabBank(e){const t=e.getAttribute("data-id");this.defineActiveMenu(t),gameNpcActionBank.action=t,this.hideContentList()}clickTabBankDeposit(e){this.clickTabBank(e),gameNpcActionBank.update(),gameNpcActionBank.buildDeposit()}clickTabBankWithdraw(e){this.clickTabBank(e),gameNpcActionBank.withdraw()}clickTabCustomizeBuy(){this.currentAction="customizeBuy",this.hideContentList(),this.buildCustomizeBuy(),this.defineActiveMenu("customize_buy")}clickTabQuest(){this.currentAction="quest",this.hideContentList(),this.buildQuest(),this.defineActiveMenu("quest")}clickTabSell(){this.currentAction="sell",this.hideContentList(),gameNpcActionSell.build(),this.defineActiveMenu("sell")}clickFirstButton(){const e=gameHtml.elTalk.querySelector(".menu-tab");if(!e)return;const t=e.querySelector("button");t&&t.click()}clickNpc(e){const t=e.getAttribute("data-npc"),a=gameMap.arrNpc.find((e=>e.name===t));this.npcCurrent=a,this.talk(t)}defineActiveMenu(e){const t=gameHtml.elTalk.querySelector(`[data-id="${e}"]`);if(!t)return;const a=t.parentNode,i=a.parentNode;gameLayout.defineActiveMenu({menu:i,active:a})}draw(){const e=this.npcCurrent.actions;let t=[],a=[];e.forEach((e=>{const i=libHelper.capitalize(e);t[e]=gameComponentMenuTab[`build${i}`](),a.push(gameComponentNpc[`build${i}`]())})),a.push(gameComponent.buildMoney());const i=gameComponentNpc.buildTemplate({buttons:t,contents:a});gameHtml.elTalk.innerHTML=i}handleBack(e){const t="talk_detail";if(e.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.id===t){const e=document.getElementById(t);return gameHtml.elTalk.classList.remove(cssDisplayNone),void e.classList.add(cssDisplayNone)}gameHtml.elPageInventory.classList.remove(cssDisplayNone),gameHtml.elPageDetail.classList.add(cssDisplayNone)}hideContentList(){const e=gameHtml.elTalk.querySelector('[data-id="list_buy"]'),t=gameHtml.elTalk.querySelector(`[data-id="${gameNpcActionCustomize.dataIdCustomizeApply}"]`),a=gameHtml.elTalk.querySelector(`[data-id="${gameNpcActionCustomize.dataIdCustomizeBuy}"]`),i=gameHtml.elTalk.querySelector('[data-id="list_craft"]'),s=gameHtml.elTalk.querySelector('[data-id="current_diamond"]'),n=gameHtml.elTalk.querySelector('[data-id="current_money"]'),l=gameHtml.elTalk.querySelector('[data-id="list_quest"]'),r=gameHtml.elTalk.querySelector('[data-id="list_sell"]'),o=gameNpcActionBank.elListAccountDeposit,c=gameNpcActionBank.elListAccountWithdraw;libHelper.hide(e),libHelper.hide(r),libHelper.hide(t),libHelper.hide(a),libHelper.hide(i),libHelper.hide(l),libHelper.hide(o),libHelper.hide(c),libHelper.show(n),libHelper.show(s)}setNpc(e){const t=gameMap.arrNpc[e],a=document.getElementById(`npc_${t.id}`),i=t.tile,s=libHelper.capitalize(t.name),n=`${this.classFrontEnd}${s}`;gameMap.setPosition({target:a,tile:i}),gameCharacter.buildCharacterAppearancePerson({el:a,elSetting:n,css:cssStandBottom})}async talk(e){const t=`&c=${libHelper.capitalize(e)}&m=talk${this.buildParameterNpc()}`;await libHelper.ajax({namespace:"Game\\Npc",parameter:t}).then((e=>{gameData.updateObserver(e),gameNpc.talkReturn()}))}talkReturn(){this.populate("actions"),this.populate("crafts"),this.draw();const e=gameNpc.npcCurrent.actions,t=gameNpc.npcCurrent.crafts,a=e.includes("customizeApply"),i=e.includes("customizeBuy");gameCraft.currentCraft=t?t[0]:void 0,e&&((a||i)&&gameNpcActionCustomize.update(),a&&gameNpcActionCustomize.modifyCharacterModel("Apply"),i&&gameNpcActionCustomize.modifyCharacterModel("Buy"),this.clickFirstButton(),libHelper.show(gameHtml.elTalk),libHelper.hide(gameHtml.elTalkDetail),gamePage.open({page:!1,position:"left"}))}talkSuccess(e){const t=e.response,a=e.npc,i=gameTranslation?.translation?.dialog[a].presentation,s=gameHtml.elTalk;s.innerHTML=t;const n=s.querySelector(".text"),l=s.querySelector("[data-name]");n.innerHTML=i,l.innerHTML=a,gameTranslation.translateTalk(),gameTranslation.translateDefaultText(),gameNpcActionSell.empty(),this.hideContentList(),this.buildMenu(),window[`${this.classFrontEnd}{capitalize}`].talk(),gamePage.open({page:!1,position:"left"})}talkResponse(e){const t=gameHtml.elTalkResponse.querySelector(".text");gamePage.close({page:"talk_response",position:"left"}),t.innerHTML=e}populate(e){const t=this.npcCurrent.name,a=this[e],i=libHelper.capitalize(t),s=window[`${this.classFrontEnd}${i}`][e],n=Object.entries(a);s&&(this.npcCurrent[e]=[],n.forEach((([t,i])=>{const n=s[t],l=((e,t)=>a.find((e=>e.id===t)))(0,n);if(l){const t=l.label;this.npcCurrent[e].push(t)}})))}update(){this.updateHtml()}updateHtml(){this.elButtonBack=gameHtml.elTalkDetail.querySelector('[data-id="detail_button_back"]'),this.elButtonBuy=gameHtml.elTalkDetail.querySelector('[data-id="detail_button_buy"]'),this.elButtonSell=gameHtml.elTalkDetail.querySelector('[data-id="detail_button_sell"]'),this.elButtonTabBuy=gameHtml.elTalk.querySelector('[data-id="button_buy"]'),this.elButtonTabSell=gameHtml.elTalk.querySelector('[data-id="button_sell"]'),this.elButtonTabQuest=gameHtml.elTalk.querySelector('[data-id="button_quest"]'),this.elButtonTabCustomize=gameHtml.elTalk.querySelector('[data-id="button_customize"]'),this.elButtonTabCustomizeBuy=gameHtml.elTalk.querySelector('[data-id="button_customize_buy"]'),this.elButtonTabCraft=gameHtml.elTalk.querySelector('[data-id="button_craft"]'),this.elButtonTabDeposit=gameHtml.elTalk.querySelector('[data-id="deposit"]'),this.elButtonTabWithdraw=gameHtml.elTalk.querySelector('[data-id="withdraw"]')}updateData(e){const t=e=>void 0!==e&&Object.keys(e).length>0,a=gameNpc.npcCurrent.name,i=libHelper.capitalize(a),s=e[a],n=s.actions,l=s.banks,r=s.buys,o=s.crafts,c=s.customizations,d=s.quests;t(n)&&(window[`gameNpc${i}`].actions=n),t(l)&&gameNpcActionBank.updateVariable(l),t(r)&&gameNpcActionBuy.updateVariable(r),t(o)&&(window[`gameNpc${i}`].crafts=o),t(c)&&gameNpcActionCustomize.updateVariable(c),t(d)&&gameNpcActionQuest.updateVariable(d)}view(e){if("enabled"===e)return libHelper.show(gameHtml.elNpc);libHelper.hide(gameHtml.elNpc)}}export class Person{constructor(){}buildData(e){const t=e=>libHelper.isStringEmpty(e)?"":e,a=e=>libHelper.isStringEmpty(e)?0:e,i=e=>libHelper.isStringEmpty(e)?{}:e,s=e?.attributes,n=e?.customizations,l=e?.equipments,r=t(e?.animation),o=t(e?.id),c=t(s?.class),d=t(s?.name);return{animation:r,id:o,attributes:{class:c,level:t(s?.level),name:d},customizations:{clothes:a(n?.clothes),eye:a(n?.eye),hair:a(n?.hair),skin:a(n?.skin)},equipments:{amulet:i(l?.amulet),armor:i(l?.armor),backpack:i(l?.backpack),bracelet:i(l?.bracelet),belt:i(l?.belt),boot:i(l?.boot),eye:i(l?.eye),face:i(l?.face),glove:i(l?.glove),hair:i(l?.hair),helmet:i(l?.helmet),ring:i(l?.ring),rune:i(l?.rune),shield:i(l?.shield),pants:i(l?.pants),weapon:i(l?.weapon)}}}}export class Player{build(){this.draw(),gameHtml.updatePlayer(),libHelper.hide(gameHtml.elCharacterEmote)}draw(){const e=gameComponent.drawPlayer({animation:"stand-bottom"});gameHtml.elCharacter.innerHTML=e}getMoney(){const e=gameConfiguration.item.itens,t=e.diamond.id,a=e.gold.id,i=e=>e||0,s=gameData.getPlayerInventory();return{gold:s?i(s[a]):0,diamond:s?i(s[t]):0}}}export class Resource{build(){const e=this.arrResource.length;this.buildLayout();for(let t=0;t<gameMap.resourceSlot;t++){const a=Math.floor(Math.random()*e),i=this.arrResource[a];""!==i&&this.buildLoop(t,i)}}buildLayout(){let e="";this.elementOnTheMap=gameMap.resourceSlot;for(let t=0;t<this.elementOnTheMap;t++){const a=this.buildHtml(t);void 0!==a&&(e+=a)}this.elResource.innerHTML=e}buildLoop(e,t){const a=gameMap.randomPlace(e),i=gameLayout.findInObject(globalLoot,"id",Number(t),"cssTile"),s=`resource${e}Position`,n=document.getElementById(`resource_${e}`);this[s]=a,gameHtml.updateResource(e),n.setAttribute("data-tile",a),""!==i&&libHelper.addClass(n,i),this.arrResourcePosition.push(a),gameMap.setPosition({target:n,tile:a})}buildHtml(e){return`\n            <div id="resource_${e}" data-x="" data-y="" data-tile="">\n                ${gameConfiguration.isDevelopResource?`<span class="dev">${e}</span>`:""}\n            </div>\n        `}init(){this.update()}async pick(e){const t=document.getElementById(`resource_${e}`);if(!t)return;const a=Number(t.getAttribute("data-tile"));if(gameCharacter.dataTile!==a)return;const i=t.getAttribute("class"),s=`&c=Resource&m=pickItem&item=${gameLayout.findInObject(globalLoot,"cssTile",i,"id")}`;await libHelper.ajax({parameter:s}).then((e=>{this.pickResponse({el:t,item:e})}))}pickResponse(e){const t=e.item,a=gameTranslation?.translation?.game?.loot.collected_item+". ";if(""===t)return gameInventory.drawNoRoom();gameInventory.addItem({id:t,quantity:1,text:a}),libHelper.remove(e.el)}update(){this.elResource=document.getElementById("resource")}}export class Transition{constructor(){this.arrTip=[],this.tipFirstAccess="",this.firstAccess=!0,this.cssSpinner="spinner",this.elSpinner=document.querySelector(`[data-id="${this.cssSpinner}"]`)}buildSpinner(e=!1){e?libHelper.addClass(this.elSpinner,this.cssSpinner):libHelper.removeClass(this.elSpinner,this.cssSpinner)}buildLayout(e){if("show"===e)return this.buildSpinner(!0),this.buildTip(),void libHelper.show(gamePageTransition.elPage);this.buildSpinner(!1),setTimeout((()=>{gameCharacter.updatePosition(),libHelper.hide(gamePageTransition.elPage)}),gameConfiguration.timeTransitionTip)}populateTip(){this.arrTip=[gameTranslation?.translation?.game?.tip.deposit_item,gameTranslation?.translation?.game?.tip.enemy_strong,gameTranslation?.translation?.game?.tip.increase_vitality,gameTranslation?.translation?.game?.tip.increase_intelligence,gameTranslation?.translation?.game?.tip.increase_strength,gameTranslation?.translation?.game?.tip.increase_dexterity,gameTranslation?.translation?.game?.tip.recover_status,gameTranslation?.translation?.game?.tip.sell_item,gameTranslation?.translation?.game?.tip.social_discord,gameTranslation?.translation?.game?.tip.social_facebook,gameTranslation?.translation?.game?.tip.social_facebook_2,gameTranslation?.translation?.game?.tip.social_twitter,gameTranslation?.translation?.game?.tip.social_instagram,gameTranslation?.translation?.game?.tip.social_youtube,gameTranslation?.translation?.game?.tip.social_blog,gameTranslation?.translation?.game?.tip.potion],this.tipFirstAccess=gameTranslation?.translation?.game?.tip.walk_end,this.arrTip.push(this.tipFirstAccess),gameLogin.isGuest&&this.arrTip.push(gameTranslation?.translation?.game?.tip.do_login)}buildTip(){const e=gamePageTransition.elPage.querySelector(".tip");let t="";this.firstAccess?(this.firstAccess=!1,t=this.tipFirstAccess,setTimeout((()=>{gameTutorial.buildWalk()}),2e3)):t=libHelper.randomInArray(this.arrTip),e.innerHTML=t}}export class Translation{constructor(){this.translation={},this.replacaPattern=/\{\{(.+?)\}\}/g}buildData(){const e=gameConfiguration.skills,t=gameConfiguration.player.class,a=t.hunter,i=t.merchant,s=t.warrior,n=t.wizard,l=a.attribute,r=i.attribute,o=s.attribute,c=n.attribute,d=this.translation.game.player,u=d[l],m=d[c],g=d[o],h=d[r],p=gameConfiguration.npc,b=p.bank.cost,y=p.bank.level,v=p.customization.cost;this.data={classes:{hunter:{attribute:u},merchant:{attribute:h},warrior:{attribute:g},wizard:{attribute:m}},battle:{defense:{turns:e.defense.turns,cost:e.defense.cost},lose:{penalty:"-----"},power:{damage:e.power.cost},run:{chance:e.run.cost},stone:{cost:e.stone.cost},arrow:{cost:e.arrow.cost},fireball:{cost:e.fireball.cost}},npc:{craft:{maximum:p.craft.maximum}},linkBlog:urls.blog,linkDiscord:urls.discord,linkFacebook:urls.facebook,linkFacebookGroup:urls.facebookGroup,linkInstagram:urls.instagram,linkTwitter:urls.twitter,linkYoutube:urls.youtube,costUseBank:b,levelUseBank:y,costCustomize:v}}changeVariables(){const e=t=>{Object.keys(t).forEach((a=>{const i=t[a];if("string"==typeof i){const e={target:i,isInitial:!0};t[a]=this.replacePlaceholders(e)}else"object"==typeof i&&null!==i&&e(i)}))};e(this.translation)}async init(){await this.loadFile(),this.buildData(),this.changeVariables(),gameManagement.translate()}async loadFile(){await libTranslate.translate("game"),await libTranslate.translate("dialog"),await libTranslate.translate("interface"),await libTranslate.translate("login"),this.translation=libTranslate.translation}replacePlaceholder(e,t){return e.replace(this.replacaPattern,t)}replacePlaceholders(e){const t=e.target,a=e?.data||this.data,i=e?.isInitial||!1,s=["costMana"];return t.replace(this.replacaPattern,((e,t)=>{const n=i&&s.includes(t),l=t.split(".").reduce(((e,t)=>e&&e[t]),a)||"";return n?`{{${t}}}`:l}))}translateClass(){const e=gameData.getPlayerAttributes(),t=gameTranslation?.translation;if(0===Object.keys(t).length)return;const a=gameConfiguration.getClassName(e?.class),i=t?.game?.player?.[`class_${a}`];return i}}export class Tutorial{constructor(){this.cssCursor="animation-tutorial-cursor",this.isTutorial=!1,this.handleClickDocument=this.handleClickDocument.bind(this)}build(e,t){this.buildDisplay(e),this.buildPosition(t)}buildDisplay(e){if("build"===e)return this.isTutorial=!0,libHelper.addClass(this.elCursor,this.cssCursor),void libHelper.show(this.elTutorial);this.unbuild()}buildPosition(e){switch(e){case"initial":return this.buildPositionInitial();case"combat":return this.buildPositionCombat()}}buildPositionInitial(){const e=gameLayout.windowHeight/2,t=gameLayout.windowWidth/2;this.elCursor.style.top=e+"px",this.elCursor.style.left=t+"px"}buildPositionCombat(){const e=gameHtml.elBattleAttack;if(!e)return;const t=libHelper.offset(e),a=t.top-35,i=t.left+60;this.elCursor.style.top=a+"px",this.elCursor.style.left=i+"px"}buildWalk(){const e=gameLogin.isGuest,t=0!==gameCharacter.experience;let a=gameTranslation?.translation?.game?.tip.do_login;e&&libNotification.add({text:a,color:"red"}),t||(a=gameTranslation?.translation?.interface?.page_advise?.alpha,libNotification.add({content:a}),this.build("build","initial"),libHelper.addClick(document,this.handleClickDocument))}handleClickDocument(){gameTutorial.unbuild(),document.removeEventListener("click",this.handleClickDocument)}handleProcedHistory(){gamePageAchievement.buildAchievementTutorial(),gamePageAttribute.isUpdate=!1,gamePageAttribute.requestUpdate(),gamePage.open({page:"page_character_tutorial_walk",position:"middle"})}handleProcedWalk(){this.unbuild(),gameManagement.status="updateQuest",gameManagement.build()}init(){this.update()}unbuild(){libHelper.removeClass(this.elCursor,this.cssCursor),libHelper.hide(this.elTutorial)}update(){this.elTutorial=document.getElementById("tutorial"),this.elCharacterHistory=document.getElementById("page_character_tutorial_history"),this.elCharacterWalk=document.getElementById("page_character_tutorial_walk"),this.elCursor=this.elTutorial.querySelector(".tutorial-cursor")}}export class Component{buildCardPerson(){const e={equipments:gameData.getPlayerEquipments(),customizations:gameData.getPlayerCustomizations(),animation:cssStandBottom},t={content:`\n            <div class="item-box" data-id="person">\n                ${this.buildPerson(e)}\n            </div>\n        `,header:" ",footer:" "};return libComponent.buildCard(t)}buildClickItemProperty(e){const t=t=>e[t]?`${t}:'${e[t]}',`:"",a=t=>e[t]?`${t}:${e[t]},`:"",i=t("action"),s=t("side"),n=t("from"),l=t("kind"),r=t("id"),o=t("idLore"),c=a("quantity"),d=a("price"),u=a("durability");return`${e.frontEnd}.handleClick({el:this, ${i+s+n+l+c+r+o+d+u}});`}buidConfirmaton(){const e=gameInterface.elBody,t=this.drawConfirmation();e.insertAdjacentHTML("afterBegin",t),gameHtml.updateConfirmation(),gameConfirmation.init()}buildMoney(){const e=gameTranslation?.translation?.interface?.page_inventory?.current_money,t=gameTranslation?.translation?.interface?.page_inventory?.current_diamond,a=libComponent.buildInput({value:0,attribute:"readonly"});return`\n            <form class="form padding-big responsive-row">\n                <div class="responsive-column-regular-12 form-field" data-id="current_money">\n                    <div class="responsive-row">\n                        <div class="responsive-column-regular-8 text-right">\n                            <label>${e}</label>\n                        </div>\n                        <div class="responsive-column-regular-4">${a}</div>\n                    </div>\n                </div>\n                <div class="responsive-column-regular-12 form-field" data-id="current_diamond">\n                    <div class="responsive-row">\n                        <div class="responsive-column-regular-8 text-right">\n                            <label>${t}</label>\n                        </div>\n                        <div class="responsive-column-regular-4">${a}</div>\n                    </div>\n                </div>\n            </form>\n        `}buildPerson(e){const t=e=>libHelper.isStringEmpty(e)?"":e,a=e=>gameLayout.findInObject(globalLoot,"id",Number(e),"cssPerson"),i=e=>{return""!==t(e)?(a=e,gameCustomization.cssCustomization+gameLayout.findInObject(gameCustomization.colors,"id",Number(a),"color")):"";var a},s=e=>""!==t(e)?(e=>null!==a(e)&&void 0!==a(e)?a(e):"")(t(e.il?e.il:e)):"",n=t(e?.animation),l=e?.customizations,r=e?.equipments,o=i(l?.eye),c=i(l?.hair),d=s(l?.clothes),u=(m=l?.skin,""!==t(m)?(g=m,gameCustomization.cssSkin+gameLayout.findInObject(gameCustomization.skins,"id",Number(g),"color")):"");var m,g;const h=s(r?.armor),p=s(r?.backpack),b=s(r?.boot),y=s(r?.eye),v=s(r?.face),f=s(r?.glove),C=s(r?.hair),_=s(r?.helmet),P=s(r?.shield);return`\n            <div class="person">\n                <div class="sprite-box ${n} ${u} skin" data-element="skin" data-color="skin"></div>\n                <div class="sprite-box ${n} skin-stroke" data-element="skin_stroke"></div>\n                <div class="sprite-box ${n} eye-white" data-element="eye_white"></div>\n                <div class="sprite-box ${n} ${o} eye-color" data-element="eye_color" data-color="eye"></div>\n                <div class="sprite-box ${n} shadow" data-element="shadow"></div>\n                <div class="sprite-box ${n} ${d}" data-element="clothes" data-customization="clothes"></div>\n                <div class="sprite-box ${n} ${s(r?.pants)}" data-element="pants"></div>\n                <div class="sprite-box ${n} ${h}" data-element="armor"></div>\n                <div class="sprite-box ${n} ${b}" data-element="boot"></div>\n                <div class="sprite-box ${n} ${f}" data-element="glove"></div>\n                <div class="sprite-box ${n} ${s(r?.weapon)}" data-element="weapon"></div>\n                <div class="sprite-box ${n} ${P}" data-element="shield"></div>\n                <div class="sprite-box ${n} ${p}" data-element="backpack"></div>\n                <div class="sprite-box ${n} ${c} ${C}" data-element="hair" data-customization="hair" data-color="hair"></div>\n                <div class="sprite-box ${n} ${_}" data-element="helmet"></div>\n                <div class="sprite-box ${n} ${y}" data-element="eye"></div>\n                <div class="sprite-box ${n} ${v}" data-element="face"></div>\n            </div>\n        `}drawConfirmation(){const e=gameTranslation?.translation?.interface?.action,t=e?.confirm,a=e?.cancel,i=e?.confirm_action;return`\n            <section id="confirm" class="confirmation ${cssDisplayNone}">\n                <div id="confirm_body" class="confirmation__body">\n                    <div class="confirm confirm-gray confirm-regular">\n                        <header>\n                            <div class="responsive-row">\n                                <div class="responsive-column-regular-12 text">\n                                    ${i}\n                                </div>\n                            </div>\n                        </header>\n                        <footer>\n                            <div class="responsive-row ${cssDisplayNone} confirmation__warning" id="confirm_warning">\n                                <div class="responsive-column-regular-12">\n                                    <p class="color-red text"></p>\n                                </div>\n                            </div>\n                            <div class="responsive-row">\n                                <div class="responsive-column-regular-12">\n                                    <nav class="menu menu-horizontal">\n                                        <ul>\n                                            <li>\n                                                <button type="button" class="button button-regular button-green" data-id="button_confirm">\n                                                    ${t}\n                                                </button>\n                                            </li>\n                                            <li>\n                                                <button type="button" class="button button-regular button-gray" data-id="button_cancel">\n                                                    ${a}\n                                                </button>\n                                            </li>\n                                        </ul>\n                                    </nav>\n                                </div>\n                            </div>\n                        </footer>\n                    </div>\n                </div>\n            </section>\n        `}drawPlayer(e){return`\n            <div class="tile sprite-box">\n                <div class="damage"></div>\n                <div class="sprite-box effect-hit" data-element="effect-hit">\n                    <div></div>\n                </div>\n                ${this.buildPerson(e)}\n                <div id="character_emote">\n                    <div class="balloon">\n                        <div class="text"></div>\n                    </div>\n                </div>\n            </div>\n        `}drawProgrerssBar(e){const t=e.id,a=e.color?e.color:"yellow",i=e.size?e.size:"regular",s=e.style?e.style:"width";let n=Number(e.value);n>100&&(n=100),n<0&&(n=0);return`\n            <div class="tooltip tooltip--black tooltip--bottom" data-tooltip="${e.translation?e.translation+" "+n+"%":n+"%"}">\n                <div class="progress progress-style-${a} progress-${i}" id="${t}">\n                    <div class="progress-bar" style="${s}: ${n}%"></div>\n                </div>\n            </div>\n        `}}export class ComponentMenuTab{constructor(){this.idCustomizationCost="input_customization_cost_"}buildBankDeposit(){const e={onclick:"gameNpc.clickTabBankDeposit(this);",cssComponent:cssButtonTab,dataCustom:[{label:"id",value:"deposit"}],text:gameTranslation?.translation?.interface?.action?.deposit};return libComponent.buildButton(e)}buildBankWithdraw(){const e={onclick:"gameNpc.clickTabBankWithdraw(this);",cssComponent:cssButtonTab,dataCustom:[{label:"id",value:"withdraw"}],text:gameTranslation?.translation?.interface?.action?.withdraw};return libComponent.buildButton(e)}buildBuy(){const e={onclick:"gameNpc.clickTabBuy();",cssComponent:cssButtonTab,dataCustom:[{label:"id",value:"buy"}],text:gameTranslation?.translation?.interface?.action?.buy};return libComponent.buildButton(e)}buildCraft(){const e={onclick:"gameNpc.clickTabCraft();",cssComponent:cssButtonTab,dataCustom:[{label:"id",value:"craft"}],text:gameTranslation?.translation?.interface?.action?.craft};return libComponent.buildButton(e)}buildCustomizeApply(){const e={onclick:"gameNpc.clickTabCustomize();",cssComponent:cssButtonTab,dataCustom:[{label:"id",value:"customize_apply"}],text:gameTranslation?.translation?.interface?.action?.customize_character};return libComponent.buildButton(e)}buildCustomizeBuy(){const e={onclick:"gameNpc.clickTabCustomizeBuy();",cssComponent:cssButtonTab,dataCustom:[{label:"id",value:"customize_buy"}],text:gameTranslation?.translation?.interface?.action?.customize_buy};return libComponent.buildButton(e)}buildQuest(){const e={onclick:"gameNpc.clickTabQuest();",cssComponent:cssButtonTab,dataCustom:[{label:"id",value:"quest"}],text:gameTranslation?.translation?.interface?.page_quest?.title};return libComponent.buildButton(e)}buildSell(){const e={onclick:"gameNpc.clickTabSell();",cssComponent:cssButtonTab,dataCustom:[{label:"id",value:"sell"}],text:gameTranslation?.translation?.interface?.action?.sell};return libComponent.buildButton(e)}}export class ComponentNpc{constructor(){this.idCustomizationCost="input_customization_cost_"}buildBankDeposit(){return'\n            <div class="responsive-row" data-id="list_deposit" data-content="page">\n                <h3 data-id="no_item" class="subtitle color-red"></h3>\n                <div class="text-center" data-id="list"></div>\n            </div>\n        '}buildBankWithdraw(){const e=gameTranslation?.translation?.dialog.druigar.no_item_access;return`\n            <div class="responsive-row" data-id="list_withdraw" data-content="page">\n                <h3 data-id="no_item" class="subtitle color-red">${e}</h3>\n                <div class="text-center" data-id="list"></div>\n            </div>\n        `}buildBuy(){return'<div data-id="list_buy" class="text-center"></div>'}buildCraft(){const e={onclick:"gameNpcActionCustomize.handleBuy();",cssStyle:"green",dataCustom:[{label:"id",value:"proceed"}],text:gameTranslation?.translation?.interface?.action?.buy},t=libComponent.buildButton(e),a={onclick:"gameNpcActionCustomize.handleBuy();",cssStyle:"green",dataCustom:[{label:"id",value:"proceed"}],text:gameTranslation?.translation?.interface?.action?.buy},i=libComponent.buildButton(a),s=e=>`\n            <div class="responsive-column-regular-12 text-center ${cssDisplayNone}">\n                <nav class="menu menu-horizontal">\n                    <ul>\n                        <li>\n                            ${e}\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        `;return`\n            <div class="responsive-row" data-id="list_craft">\n                <div class="responsive-column-regular-12 text-center">\n                    <h3 data-id="response" class="subtitle color-red"></h3>\n                </div>\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12 text-center">\n                        <div data-id="list_craft_text_quantity">\n                        </div>\n                    </div>\n                </div>\n                <div class="responsive-row">\n                    <div data-id="list_craft_item">\n                    </div>\n                </div>\n                ${s(t)}\n            </div>\n            <div class="responsive-row" data-id="list_craft_result">\n                ${s(i)}\n            </div>\n        `}buildCustomizeApply(){const e="apply",t={attribute:"disabled",onclick:"gameNpcActionCustomize.handleApply();",cssStyle:"blue",dataCustom:[{label:"id",value:"customize"}],text:gameTranslation?.translation?.interface?.action?.customize_character},a={value:0,dataCustom:[{label:"id",value:this.idCustomizationCost+e}],attribute:"readonly"},i=libComponent.buildButton(t),s=libComponent.buildInput(a),n=gameComponent.buildCardPerson(),l=gameConfiguration.npc.customization.idCoin,r=gameLayout.findInObject(globalLoot,"id",l,"translation"),o=gameTranslation?.translation?.game?.loot[r],c=`${gameTranslation?.translation?.dialog.grevanni.customize} (${o})`,d=gameNpcActionCustomize.buildSelect(e);return`\n            <div class="responsive-row" data-id="${gameNpcActionCustomize.dataIdCustomizeApply}">\n                <div class="responsive-column-extra-small-12 text-center" data-id="description">\n                    ${c}\n                </div>\n                <div class="responsive-column-extra-small-12">\n                    <form class="form padding-big">\n                        <div class="responsive-row">\n                            <div class="responsive-column-regular-8">\n                                <div class="padding-regular">\n                                    <div class="form-field responsive-row">\n                                        ${d}\n                                        <div class="responsive-column-regular-4">\n                                            <label>${gameTranslation?.translation?.game?.loot.detail_price_buy}</label>\n                                        </div>\n                                        <div class="responsive-column-regular-8">\n                                            ${s}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="responsive-column-regular-4" id="list_customize_character">\n                                ${n}\n                            </div>\n                        </div>\n                        <nav class="menu menu-horizontal text-right">\n                            <ul>\n                                <li>${i}</li>\n                            </ul>\n                        </nav>\n                    </form>\n                </div>\n            </div>\n        `}buildCustomizeBuy(){const e=gameComponent.buildCardPerson(),t={attribute:"disabled",onclick:"gameNpcActionCustomize.handleBuy();",cssStyle:"green",dataCustom:[{label:"id",value:"buy"}],text:gameTranslation?.translation?.interface?.action?.buy},a={value:0,dataCustom:[{label:"id",value:this.idCustomizationCost+"buy"}],attribute:"readonly"},i=libComponent.buildInput(a),s=libComponent.buildButton(t),n=gameNpcActionCustomize.buildSelect("buy");return`\n            <div class="responsive-row" data-id="${gameNpcActionCustomize.dataIdCustomizeBuy}">\n                <div class="responsive-column-extra-small-12 text-center" data-id="description">\n                    ${gameTranslation?.translation?.dialog.grevanni.customize_buy}\n                </div>\n                <div class="responsive-column-extra-small-12">\n                    <form class="form padding-big">\n                        <div class="responsive-row">\n                            <div class="responsive-column-regular-8">\n                                <div class="padding-regular">\n                                    <div class="form-field responsive-row">\n                                        ${n}\n                                        <div class="responsive-column-regular-4">\n                                            <label>${gameTranslation?.translation?.game?.loot.detail_price_buy}</label>\n                                        </div>\n                                        <div class="responsive-column-regular-8">\n                                            ${i}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="responsive-column-regular-4" id="list_customize_character_buy">\n                                ${e}\n                            </div>\n                        </div>\n                        <nav class="menu menu-horizontal text-right">\n                            <ul>\n                                <li>\n                                    ${s}\n                                </li>\n                            </ul>\n                        </nav>\n                    </form>\n                </div>\n            </div>\n        `}buildQuest(){const e=gameNpcActionQuest.quests,t=Object.values(e);let a='\n            <div class="responsive-row list-quest" data-id="list_quest">\n                    <div class="responsive-column-regular-12 text-center"></div>\n        ';return t.forEach((e=>{const t=e.status,i=libHelper.capitalize(t);a+=this[`buildQuestStatus${i}`](e)})),a+="</div>",a}buildQuestStatusInitial(e){const t=e.id,a=gameTranslation?.translation?.game?.quest,i=a[`quest_${t}`].description,s=e.needs,n=e.rewards;let l=this.buildQuestStatusText(i);if(s){const e={itens:s.itens,title:a.needs};l+=this.buildQuestStatusInitialCard(e)}if(n){const e={itens:n.itens,title:a.rewards};l+=this.buildQuestStatusInitialCard(e)}return l+=`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12 text-center">\n                    ${a.come_back}\n                </div>\n            </div>\n        `,l}buildQuestStatusInitialCard(e){const t=e.title,a=e.itens;let i=`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12 text-center">\n                    <h6>${t}</h6>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12 text-center">\n        `;return a.forEach((e=>{const t=e.item,a=gameLayout.findInObject(globalLoot,"id",t,"cssLoot"),s=t,n=e.amount;i+=gameLayout.buildCard({dataId:t,dataItemLore:s,css:a,text:n})})),i+="\n                </div>\n            </div>\n        ",i}buildQuestStatusWaiting(e){const t=e.id,a=gameTranslation?.translation?.game?.quest[`quest_${t}`],i=a?.title,s=a?.waiting,n={cssStyle:"green",onclick:`gameNpcActionQuest.handleConclude(${t})`,text:gameTranslation?.translation?.interface?.action?.proceed};return`\n            <div class="responsive-column-regular-12 text-center">${i}</div>\n            <div class="responsive-column-regular-12 text text-center">${s}</div>\n            <div class="responsive-column-regular-12 text-center">\n                <nav class="menu menu-horizontal">\n                    <ul>\n                        <li>\n                            ${libComponent.buildButton(n)}\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        `}buildQuestStatusDone(){const e=gameTranslation?.translation?.game?.quest.no_more;return this.buildQuestStatusText(e)}buildQuestStatusText(e){return`<div class="responsive-column-regular-12 text text-center">${e}</div>`}buildSell(){const e=gameTranslation?.translation?.interface?.page_inventory?.empty;return`\n            <div class="text-center" data-id="list_sell">\n                <div class="responsive-column-regular-12 text-center js-empty">\n                    <h3 class="subtitle color-red">${e}</h3>\n                </div>\n            </div>\n        `}buildTalkText(){const e=gameNpc.npcCurrent.name,t=gameTranslation?.translation?.dialog?.[e].greet;return`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title" data-name="">${e}</h2>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12 text">\n                    ${t}\n                </div>\n            </div>\n        `}buildTemplate(e){return this.buildTalkText()+libComponent.buildMenuTab(e.buttons)+libComponent.buildMenuTabContent(e.contents)}}export class ComponentPageDetail{build(){const e=this.buildDetail();this.update(),gameHtml.elPageDetail.innerHTML=e,gameHtml.elTalkDetail.innerHTML=e}buildDetail(){const e=gameTranslation?.translation?.interface?.action?.detail;return`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title" data-id="detail_title">${e}</h2>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-extra-small-12 responsive-column-small-12 responsive-column-regular-9 responsive-column-big-9 responsive-column-extra-big-9">\n                    <form class="form padding-small responsive-row" data-id="item-detail-attribute"></form>\n                </div>\n                <div class="responsive-column-extra-small-12 responsive-column-small-12 responsive-column-regular-3 responsive-column-big-3 responsive-column-extra-big-3">\n                    <div class="responsive-row">\n                        <div class="responsive-column-extra-small-12 responsive-column-big-4" data-item="detail-image"></div>\n                    </div>\n                </div>\n            </div>\n            ${this.buildDetailRecipe()}\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <nav class="menu menu-horizontal text-center menu-mobile" data-id="detail_menu"></nav>\n                </div>\n            </div>\n        `}buildDetailRecipe(){const e=gameTranslation?.translation?.interface?.action?.necessary_items;return`\n            <section data-id="detail_recipe" class="responsive-row text-center">\n                <div class="responsive-column-regular-12">\n                        <h2 class="title" data-id="detail_title">${e}</h2>\n                    </div>\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12">\n                        <hr/>\n                    </div>\n                </div>\n                <div class="responsive-column-regular-12">\n                    <h2 class="title" data-id="detail_recipe_title"></h2>\n                </div>\n                <div class="responsive-row">\n                    <div data-id="recipe_item"></div>\n                </div>\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12">\n                        <hr/>\n                    </div>\n                </div>\n            </section>\n        `}buildDetailInput(e){const t=Object.values(this.inputs);let a="";return t.forEach((t=>{a+=this.buildDetailInputItem(e,t)})),a}buildDetailInputItem(e,t){const a=e.kind,i=0===a||1===a?"%":"",s=["hitPoint","manaPoint"],n=t.disabled,l=t.change,r=t.css,o=t.id,c=t.label,d=t.min,u=t.type,m=e.itemProperty,g=m.side,h=e[o],p="right"===g&&"price"===o,b={dataCustom:[{label:"id",value:o}]};let y="";if(n&&(b.attribute="readonly"),u&&(b.type=u),r&&(b.css=r),d&&(b.min=d),c&&(b.label=c),l&&(b.change=l),"quantity"===o&&(b.value=d,b.max=this.buildDetailInputItemMax(e,m)),h&&!p){s.includes(o)?b.value=h+i:b.value=h;const e={id:o,label:c,input:libComponent.buildInput(b)};y+=this.buildDetailInputHtml(e)}return y}buildDetailInputItemMax(e,t){const a=gameData.getPlayerInventory(),i=gameNpcActionBank.storage,s=t.id,n=t.action,l=gamePlayer.getMoney().gold,r=e.price,o=gameConfiguration.costBuy(r),c=Math.floor(l/o),d="number"==typeof i[s]?i[s]:1,u=a[s];let m="number"==typeof u?u:1;return"buy"===n&&(m=c),"withdraw"===n&&(m=d),Number(m)}buildDetailInputHtml(e){return`\n            <div class="form-field responsive-column-regular-6 responsive-column-big-12 responsive-column-extra-big-12" data-id="detail_field_${e.id}">\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-4"><label>${e.label}</label></div>\n                    <div class="responsive-column-regular-8">${e.input}</div>\n                </div>\n            </div>\n        `}buildDetailMenu(e){const t="button",a=e.from,i=e.action?e.action:"",s=e.kind,n=libHelper.capitalize(i),l=gameEquipment.equipments.includes(s);let r=[],o="<ul>";return r.push(this[t+"Back"]),r.push(this[t+n]),"inventory"===a&&r.push(this[t+"Delete"]),"equipment"===a&&r.push(this[t+"Unequip"]),"usable"===s&&r.push(this[t+"Use"]),l&&r.push(this[t+"Equip"]),r.forEach((e=>{o+=this.buildDetailMenuItem(e)})),o+="</ul>",o}buildDetailMenuItem(e){if(!e)return"";const t=e.id,a=e.cssStyle,i=e.onclick,s={dataCustom:[{label:"id",value:"detail_button_"+t}],text:e.text};let n="";a&&(s.cssStyle=a),i&&(s.onclick=i);return n+=`<li>${libComponent.buildButton(s)}</li>`,n}update(){const e=gameTranslation?.translation,t=e?.interface?.action,a=e?.game?.loot;this.buttonBack={id:"back",prefix:"button",onclick:"gameNpc.handleBack(this);",cssStyle:"gray",text:t?.back},this.buttonBuy={id:"buy",prefix:"button",onclick:"gameNpcActionBuy.doBuy();",cssStyle:"blue",text:t?.buy},this.buttonCraft={id:"craft",prefix:"button",onclick:"gameCraft.handleCraft();",cssStyle:"blue",text:t?.craft},this.buttonDeposit={id:"deposit",prefix:"button",cssStyle:"blue",text:t?.deposit},this.buttonDelete={id:"delete",prefix:"button",onclick:"gameItemDetail.handleDelete();",cssStyle:"red",text:t?.delete},this.buttonEquip={id:"equip",prefix:"button",onclick:"gamePageInventory.handleEquip();",cssStyle:"blue",text:t?.equip},this.buttonUnequip={id:"unequip",prefix:"button",onclick:"gamePageInventory.handleUnequip();",cssStyle:"orange",text:t?.unequip},this.buttonUse={id:"use",prefix:"button",onclick:"gamePageInventory.handleUse();",cssStyle:"blue",text:t?.use},this.buttonSell={id:"sell",prefix:"button",onclick:"gameNpcActionSell.doSell();",cssStyle:"blue",text:t?.sell},this.buttonWithdraw={id:"withdraw",prefix:"button",cssStyle:"blue",text:t?.withdraw},this.inputs=[{disabled:!0,id:"category",label:a?.detail_category},{disabled:!0,id:"durability",label:e?.game?.generic.durability},{disabled:!0,id:"weight",label:a?.detail_weight},{disabled:!0,id:"hitPoint",label:a?.detail_life},{disabled:!0,id:"manaPoint",label:a?.detail_magic},{disabled:!0,id:"initiative",label:a?.detail_initiative},{disabled:!0,id:"experience",label:a?.detail_experience},{disabled:!0,id:"attack",label:a?.detail_attack},{disabled:!0,id:"defense",label:a?.detail_defense},{disabled:!0,id:"vitality",label:a?.detail_vitality},{disabled:!0,id:"intelligence",label:a?.detail_intelligence},{disabled:!0,id:"strength",label:a?.detail_strength},{disabled:!0,id:"dexterity",label:a?.detail_dexterity},{disabled:!0,id:"capacity",label:a?.detail_capacity},{disabled:!0,id:"speed",label:a?.detail_speed},{disabled:!0,id:"price",label:a?.detail_price},{id:"quantity",change:"gameItemDetail.changeQuantity();",label:e?.alert?.select_quantity,min:1,type:"number"},{disabled:!0,css:"color-blue",label:e?.game?.generic.hotkey,id:"hotkey"}]}}export const globalLoot=[{id:0,cssLoot:null,cssPerson:null,cssTile:null,translation:null,kind:null},{id:1,cssLoot:"animal-skin-worm",cssPerson:null,cssTile:null,translation:"skin_worm",kind:"resource"},{id:2,cssLoot:"animal-tooth-rat",cssPerson:null,cssTile:null,translation:"tooth_rat",kind:"resource"},{id:3,cssLoot:"animal-web",cssPerson:null,cssTile:null,translation:"web",kind:"resource"},{id:50,cssLoot:"animal-footprint",cssPerson:null,cssTile:null,translation:"footprint",kind:"resource"},{id:54,cssLoot:"animal-wing-butterfly",cssPerson:null,cssTile:null,translation:"wing_butterfly",kind:"resource"},{id:55,cssLoot:"animal-egg-spider",cssPerson:null,cssTile:null,translation:"egg_spider",kind:"resource"},{id:56,cssLoot:"animal-wing-bat",cssPerson:null,cssTile:null,translation:"wing_bat",kind:"resource"},{id:57,cssLoot:"animal-egg-ant",cssPerson:null,cssTile:null,translation:"egg_ant",kind:"resource"},{id:58,cssLoot:"animal-wing-ladybug",cssPerson:null,cssTile:null,translation:"wing_ladybug",kind:"resource"},{id:74,cssLoot:"animal-clay",cssPerson:null,cssTile:null,translation:"clay",kind:"resource"},{id:77,cssLoot:"animal-egg-ladybug",cssPerson:null,cssTile:null,translation:"egg_ladybug",kind:"resource"},{id:78,cssLoot:"animal-egg-butterfly",cssPerson:null,cssTile:null,translation:"egg_butterfly",kind:"resource"},{id:79,cssLoot:"animal-leg-ant",cssPerson:null,cssTile:null,translation:"leg_ant",kind:"resource"},{id:80,cssLoot:"animal-tooth-bat",cssPerson:null,cssTile:null,translation:"tooth_bat",kind:"resource"},{id:129,cssLoot:"rock-limestone",cssPerson:null,cssTile:"resource-limestone",translation:"limestone",kind:"collectable"},{id:130,cssLoot:"rock-limestone-brick",cssPerson:null,cssTile:null,translation:"limestone-brick",kind:"resource"},{id:4,cssLoot:"money-bronze",cssPerson:null,cssTile:null,translation:"coin_bronze",kind:"money"},{id:76,cssLoot:"money-diamond",cssPerson:null,cssTile:null,translation:"diamond",kind:"money"},{id:73,cssLoot:"food-cheese",cssPerson:null,cssTile:null,translation:"cheese",kind:"usable"},{id:94,cssLoot:"food-strawberry",cssPerson:null,cssTile:null,translation:"strawberry",kind:"usable"},{id:95,cssLoot:"food-blueberry",cssPerson:null,cssTile:null,translation:"blueberry",kind:"usable"},{id:96,cssLoot:"food-carrot",cssPerson:null,cssTile:null,translation:"carrot",kind:"usable"},{id:117,cssLoot:"food-carrot-radioactive",cssPerson:null,cssTile:null,translation:"carrot_radioactive",kind:"usable"},{id:97,cssLoot:"food-radish",cssPerson:null,cssTile:null,translation:"radish",kind:"usable"},{id:118,cssLoot:"food-radish-radioactive",cssPerson:null,cssTile:null,translation:"radish_radioactive",kind:"usable"},{id:98,cssLoot:"food-radish-white",cssPerson:null,cssTile:null,translation:"radish_white",kind:"usable"},{id:99,cssLoot:"food-coconut",cssPerson:null,cssTile:null,translation:"coconut",kind:"usable"},{id:100,cssLoot:"potion-empty-tiny",cssPerson:null,cssTile:null,translation:"potion_empty_tiny",kind:"resource"},{id:101,cssLoot:"potion-empty-medium",cssPerson:null,cssTile:null,translation:"potion_empty_medium",kind:"resource"},{id:102,cssLoot:"potion-empty-large",cssPerson:null,cssTile:null,translation:"potion_empty_large",kind:"resource"},{id:103,cssLoot:"potion-water-tiny",cssPerson:null,cssTile:null,translation:"potion_water_tiny",kind:"usable"},{id:104,cssLoot:"potion-water-medium",cssPerson:null,cssTile:null,translation:"potion_water_medium",kind:"usable"},{id:105,cssLoot:"potion-water-large",cssPerson:null,cssTile:null,translation:"potion_water_large",kind:"usable"},{id:5,cssLoot:"potion-life-tiny",cssPerson:null,cssTile:null,translation:"potion_life_tiny",kind:"usable"},{id:6,cssLoot:"potion-life-medium",cssPerson:null,cssTile:null,translation:"potion_life_medium",kind:"usable"},{id:7,cssLoot:"potion-life-large",cssPerson:null,cssTile:null,translation:"potion_life_large",kind:"usable"},{id:8,cssLoot:"potion-mana-tiny",cssPerson:null,cssTile:null,translation:"potion_mana_tiny",kind:"usable"},{id:9,cssLoot:"potion-mana-medium",cssPerson:null,cssTile:null,translation:"potion_mana_medium",kind:"usable"},{id:10,cssLoot:"potion-mana-large",cssPerson:null,cssTile:null,translation:"potion_mana_large",kind:"usable"},{id:11,cssLoot:"potion-rejuvenation-tiny",cssPerson:null,cssTile:null,translation:"potion_rejuvenation_tiny",kind:"usable"},{id:12,cssLoot:"potion-rejuvenation-medium",cssPerson:null,cssTile:null,translation:"potion_rejuvenation_medium",kind:"usable"},{id:13,cssLoot:"potion-rejuvenation-large",cssPerson:null,cssTile:null,translation:"potion_rejuvenation_large",kind:"usable"},{id:75,cssLoot:"plant-seed-mixed",cssPerson:null,cssTile:null,translation:"seed_mixed",kind:"resource"},{id:109,cssLoot:"plant-seed-quality",cssPerson:null,cssTile:null,translation:"seed_quality",kind:"resource"},{id:110,cssLoot:"plant-seed-radioactive",cssPerson:null,cssTile:null,translation:"seed_radioactive",kind:"resource"},{id:115,cssLoot:"plant-seed-mixed-eat",cssPerson:null,cssTile:null,translation:"seed_mixed_eat",kind:"resource"},{id:112,cssLoot:"plant-random",cssPerson:null,cssTile:null,translation:"seed_mixed",kind:"resource"},{id:113,cssLoot:"plant-random-eat",cssPerson:null,cssTile:null,translation:"seed_quality",kind:"resource"},{id:114,cssLoot:"plant-random-radioactive",cssPerson:null,cssTile:null,translation:"seed_radioactive",kind:"resource"},{id:106,cssLoot:"plant-clover",cssPerson:null,cssTile:null,translation:"plant_clover",kind:"resource"},{id:107,cssLoot:"plant-daisy",cssPerson:null,cssTile:null,translation:"plant_daisy",kind:"resource"},{id:108,cssLoot:"plant-bamboo",cssPerson:null,cssTile:"resource-bamboo",translation:"plant_bamboo",kind:"collectable"},{id:131,cssLoot:"plant-bamboo-plank",cssPerson:null,cssTile:null,translation:"plant_bamboo_plank",kind:"resource"},{id:116,cssLoot:"plant-fiber",cssPerson:null,cssTile:"resource-plant-fiber",translation:"plant_fiber",kind:"collectable"},{id:14,cssLoot:"weapon-sword-1",cssPerson:"g-w-s-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:15,cssLoot:"weapon-sword-2",cssPerson:"g-w-s-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:16,cssLoot:"weapon-sword-3",cssPerson:"g-w-s-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:17,cssLoot:"weapon-axe-1",cssPerson:"g-w-a-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:18,cssLoot:"weapon-axe-2",cssPerson:"g-w-a-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:19,cssLoot:"weapon-axe-3",cssPerson:"g-w-a-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:20,cssLoot:"weapon-hammer-1",cssPerson:"g-w-h-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:21,cssLoot:"weapon-hammer-2",cssPerson:"g-w-h-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:22,cssLoot:"weapon-hammer-3",cssPerson:"g-w-h-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:81,cssLoot:"weapon-magic-1",cssPerson:"g-w-m-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:82,cssLoot:"weapon-magic-2",cssPerson:"g-w-m-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:83,cssLoot:"weapon-magic-3",cssPerson:"g-w-m-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:84,cssLoot:"weapon-bow-1",cssPerson:"g-w-b-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:85,cssLoot:"weapon-bow-2",cssPerson:"g-w-b-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:86,cssLoot:"weapon-bow-3",cssPerson:"g-w-b-medium-1",cssTile:null,translation:"weapon",kind:"weapon"},{id:23,cssLoot:"equipment-helmet-1",cssPerson:"g-e-h-viking-1",cssTile:null,translation:"helmet",kind:"helmet"},{id:24,cssLoot:"equipment-helmet-2",cssPerson:"g-e-h-wooden-1",cssTile:null,translation:"helmet",kind:"helmet"},{id:25,cssLoot:"equipment-helmet-3",cssPerson:"g-e-h-iron-1",cssTile:null,translation:"helmet",kind:"helmet"},{id:51,cssLoot:"equipment-helmet-6",cssPerson:"g-e-h-wizard-1",cssTile:null,translation:"helmet",kind:"helmet"},{id:26,cssLoot:"equipment-glove-1",cssPerson:"g-e-g-leather-1",cssTile:null,translation:"glove",kind:"glove"},{id:27,cssLoot:"equipment-glove-2",cssPerson:"g-e-g-leather-1",cssTile:null,translation:"glove",kind:"glove"},{id:28,cssLoot:"equipment-glove-3",cssPerson:"g-e-g-steel-1",cssTile:null,translation:"glove",kind:"glove"},{id:29,cssLoot:"equipment-armor-1",cssPerson:"g-e-a-leather-1",cssTile:null,translation:"armor",kind:"armor"},{id:30,cssLoot:"equipment-armor-2",cssPerson:"g-e-a-leather-1",cssTile:null,translation:"armor",kind:"armor"},{id:31,cssLoot:"equipment-armor-3",cssPerson:"g-e-a-leather-2",cssTile:null,translation:"armor",kind:"armor"},{id:120,cssLoot:"equipment-armor-4",cssPerson:"g-e-a-leather-2",cssTile:null,translation:"armor",kind:"armor"},{id:121,cssLoot:"equipment-armor-5",cssPerson:"g-e-a-steel-1",cssTile:null,translation:"armor",kind:"armor"},{id:122,cssLoot:"equipment-armor-6",cssPerson:"g-e-a-steel-1",cssTile:null,translation:"armor",kind:"armor"},{id:123,cssLoot:"equipment-armor-7",cssPerson:"g-e-a-steel-2",cssTile:null,translation:"armor",kind:"armor"},{id:59,cssLoot:"equipment-boot-1",cssPerson:"g-e-bo-leather-1",cssTile:null,translation:"boot",kind:"boot"},{id:60,cssLoot:"equipment-boot-2",cssPerson:"g-e-bo-leather-1",cssTile:null,translation:"boot",kind:"boot"},{id:61,cssLoot:"equipment-boot-3",cssPerson:"g-e-bo-leather-1",cssTile:null,translation:"boot",kind:"boot"},{id:126,cssLoot:"equipment-boot-4",cssPerson:"g-e-bo-steel-1",cssTile:null,translation:"boot",kind:"boot"},{id:127,cssLoot:"equipment-boot-5",cssPerson:"g-e-bo-steel-1",cssTile:null,translation:"boot",kind:"boot"},{id:128,cssLoot:"equipment-boot-6",cssPerson:"g-e-bo-steel-1",cssTile:null,translation:"boot",kind:"boot"},{id:93,cssLoot:"cosmetic-eye-1",cssPerson:"g-c-glasses-1",cssTile:null,translation:"eye",kind:"eye"},{id:87,cssLoot:"equipment-quiver-1",cssPerson:"g-e-q-leather-1",cssTile:null,translation:"quiver",kind:"shield"},{id:88,cssLoot:"equipment-quiver-2",cssPerson:"g-e-q-leather-1",cssTile:null,translation:"quiver",kind:"shield"},{id:89,cssLoot:"equipment-quiver-3",cssPerson:"g-e-q-leather-1",cssTile:null,translation:"quiver",kind:"shield"},{id:90,cssLoot:"equipment-orb-1",cssPerson:"g-e-o-orb-1",cssTile:null,translation:"orb",kind:"shield"},{id:91,cssLoot:"equipment-orb-2",cssPerson:"g-e-o-orb-1",cssTile:null,translation:"orb",kind:"shield"},{id:92,cssLoot:"equipment-orb-3",cssPerson:"g-e-o-orb-1",cssTile:null,translation:"orb",kind:"shield"},{id:32,cssLoot:"equipment-shield-1",cssPerson:"g-e-s-shield-1",cssTile:null,translation:"shield",kind:"shield"},{id:33,cssLoot:"equipment-shield-2",cssPerson:"g-e-s-shield-1",cssTile:null,translation:"shield",kind:"shield"},{id:34,cssLoot:"equipment-shield-3",cssPerson:"g-e-s-shield-2",cssTile:null,translation:"shield",kind:"shield"},{id:35,cssLoot:"equipment-pants-1",cssPerson:"g-e-p-leather-1",cssTile:null,translation:"pants",kind:"pants"},{id:62,cssLoot:"equipment-pants-2",cssPerson:"g-e-p-leather-1",cssTile:null,translation:"pants",kind:"pants"},{id:63,cssLoot:"equipment-pants-3",cssPerson:"g-e-p-leather-1",cssTile:null,translation:"pants",kind:"pants"},{id:124,cssLoot:"equipment-pants-4",cssPerson:"g-e-p-steel-1",cssTile:null,translation:"pants",kind:"pants"},{id:125,cssLoot:"equipment-pants-5",cssPerson:"g-e-p-steel-1",cssTile:null,translation:"pants",kind:"pants"},{id:64,cssLoot:"equipment-belt-1",cssPerson:null,cssTile:null,translation:"belt",kind:"belt"},{id:65,cssLoot:"equipment-belt-2",cssPerson:null,cssTile:null,translation:"belt",kind:"belt"},{id:66,cssLoot:"equipment-belt-3",cssPerson:null,cssTile:null,translation:"belt",kind:"belt"},{id:67,cssLoot:"equipment-backpack-1",cssPerson:"g-e-b-leather-1",cssTile:null,translation:"backpack",kind:"backpack"},{id:68,cssLoot:"equipment-backpack-2",cssPerson:"g-e-b-leather-1",cssTile:null,translation:"backpack",kind:"backpack"},{id:69,cssLoot:"equipment-backpack-3",cssPerson:"g-e-b-leather-1",cssTile:null,translation:"backpack",kind:"backpack"},{id:70,cssLoot:"equipment-bracelet-1",cssPerson:null,translation:"bracelet",kind:"bracelet"},{id:71,cssLoot:"equipment-bracelet-2",cssPerson:null,cssTile:null,translation:"bracelet",kind:"bracelet"},{id:72,cssLoot:"equipment-bracelet-3",cssPerson:null,cssTile:null,translation:"bracelet",kind:"bracelet"},{id:36,cssLoot:"jewelry-amulet-1",cssPerson:null,cssTile:null,translation:"amulet",kind:"amulet"},{id:37,cssLoot:"jewelry-amulet-2",cssPerson:null,cssTile:null,translation:"amulet",kind:"amulet"},{id:38,cssLoot:"jewelry-amulet-3",cssPerson:null,cssTile:null,translation:"amulet",kind:"amulet"},{id:39,cssLoot:"jewelry-ring-1",cssPerson:null,cssTile:null,translation:"ring",kind:"ring"},{id:40,cssLoot:"jewelry-ring-2",cssPerson:null,cssTile:null,translation:"ring",kind:"ring"},{id:41,cssLoot:"jewelry-ring-3",cssPerson:null,cssTile:null,translation:"ring",kind:"ring"},{id:42,cssLoot:"jewelry-rune-1",cssPerson:null,cssTile:null,translation:"rune",kind:"rune"},{id:43,cssLoot:"jewelry-rune-2",cssPerson:null,cssTile:null,translation:"rune",kind:"rune"},{id:44,cssLoot:"jewelry-rune-3",cssPerson:null,cssTile:null,translation:"rune",kind:"rune"},{id:45,cssLoot:"cosmetic-hair-mohican-1",cssPerson:"g-c-h-mohican-1",cssTile:null,translation:"hair",kind:"hair"},{id:46,cssLoot:"cosmetic-hair-short-1",cssPerson:"g-c-h-short-1",cssTile:null,translation:"hair",kind:"hair"},{id:47,cssLoot:"cosmetic-hair-long-1",cssPerson:"g-c-h-long-1",cssTile:null,translation:"hair",kind:"hair"},{id:48,cssLoot:"cosmetic-hair-long-2",cssPerson:"g-c-h-long-2",cssTile:null,translation:"hair",kind:"hair"},{id:49,cssLoot:"cosmetic-face-beard-1",cssPerson:"g-c-b-long-1",cssTile:null,translation:"face",kind:"face"},{id:119,cssLoot:"cosmetic-face-lipstick-1",cssPerson:"g-c-l-1",cssTile:null,translation:"face",kind:"face"},{id:52,cssLoot:"cosmetic-skin-man-1",cssPerson:"clothes-man",cssTile:null,translation:"skin",kind:"skin"},{id:53,cssLoot:"cosmetic-skin-woman-1",cssPerson:"clothes-woman",cssTile:null,translation:"skin",kind:"skin"},{id:111,cssLoot:"fabric-piece",cssPerson:null,cssTile:null,translation:"cloth_piece",kind:"resource"}];export const globalLootNotSellable=buildGlobalLootNotSellable();function buildGlobalLootNotSellable(){const e=Object.entries(globalLoot);let t=[];return e.forEach((([e,a])=>{const i=e.kind,s=e.id;[null,"money","collectable"].includes(i)&&t.push(s)})),t}export class Craft{constructor(){this.isCraftUpdate=!0,this.craftMax=20,this.namespace="Game\\Craft",this.classBackEnd="&c=",this.classFrontEnd="gameCraft"}build(){const e=this.getCurrentCraft()?"result":"craft";this.update(),gameNpc.buildCurrentMoney(),"craft"===e?this.buildListCraft():this.buildListResult()}buildListResult(){const e=this.getCurrentCraft(),t="done"===this.verifyTimeRemaining(e[2]);return null===e?this.translate("noItem"):t?(this.translate("done"),this.verifyDone()):void this.showTimeLeft()}async buildListCraft(){const e=libHelper.capitalize(this.currentCraft),t=`${this.classBackEnd}${e}&m=getCraftList`,a=this.namespace;await libHelper.ajax({namespace:a,parameter:t}).then((e=>{this.buildListCraftSuccess(e)}))}buildListCraftSuccess(e){libHelper.show(this.elListCraft),libHelper.show(this.elListCraftItem),this.arrCraftAllowed=JSON.parse(e),this.buildListCraftSuccessHtml()}buildListCraftSuccessHtml(){const e=this.arrCraftAllowed.length;let t="";libHelper.show(this.elListCraft);for(let a=0;a<e;a++){const e=gameLayout.findInObject(globalLoot,"id",this.arrCraftAllowed[a].id,"translation"),i=gameTranslation?.translation?.game?.loot[e];t+=this.buildListCraftHtml(this.arrCraftAllowed[a].id,i)}this.translate(),this.elListCraftItem.innerHTML=t}buildListCraftHtml(e,t){const a=gameLayout.findInObject(globalLoot,"id",e,"cssLoot"),i=gameLayout.findInObject(globalLoot,"id",e,"kind"),s={frontEnd:gameNpcActionDetail.classFrontEnd,from:"npc",side:"left",action:"craft",quantity:1};return gameLayout.buildCard({dataId:e,dataItemLore:e,css:a,text:t,onclick:gameComponent.buildClickItemProperty(s)+`${this.classFrontEnd}.buildListRequired(this);`,kind:i})}buildListRequired(e){gameItemDetail.updateId(e),this.buildListRequiredItem()}buildListRequiredItem(){const e=gameItemDetail.currentItemId,t=gameLayout.findInObject(this.arrCraftAllowed,"id",e,!1),a=this.arrCraftAllowed[t].recipe,i=Object.entries(a);let s="";i.forEach((([e,t])=>{const a=t.id,i=t.amount;s+=this.buildListRequiredHTML(a,i)})),this.elListRecipe.innerHTML=s}buildListRequiredHTML(e,t){const a=gameLayout.findInObject(globalLoot,"id",e,"cssLoot"),i=gameLayout.findInObject(globalLoot,"id",e,"kind"),s=e,n=t;return gameLayout.buildCard({dataId:s,css:a,text:n,click:!1,kind:i})}convertTime(e){const t=36e5;if(e>=t){const a=Math.floor(e/t),i=gameTranslation?.translation?.game?.generic.time_hour;return`${a} ${i}`}if(e>=6e4){const t=Math.floor(e/6e4),a=gameTranslation?.translation?.game?.generic.time_minute;return`${t} ${a}`}if(e>=1e3){const t=Math.floor(e/1e3),a=gameTranslation?.translation?.game?.generic.time_second;return`${t} ${a}`}return"done"}getCurrentCraft(){const e=gameData.getPlayerCrafts();return e[this.currentCraft]?e[this.currentCraft]:gameData.valueDefault}async handleCraft(){this.update();const e=libHelper.capitalize(this.currentCraft),t=gameItemDetail.currentItemIdLore,a=Number(this.elInputQuantity.value),i=`${this.classBackEnd}${e}&m=doCraft&item=${t}&quantity=${a}`,s=this.namespace;await libHelper.ajax({namespace:s,parameter:i}).then((e=>{const i={data:e,item:t,quantity:a};this.handleCraftResult(i)}))}handleCraftResult(e){const t=e.data,a=["r3","r4","r9","r10"].includes(t),i=`current ${this.currentCraft} item ${e.item} quantity ${e.quantity}`;if(a)return gameLayout.decodeMessage(t);const s=JSON.parse(t);gameAnalytics.send("craft",i),gameData.setPlayerCrafts({[this.currentCraft]:s}),this.update(),gamePageInventory.updateLoot(!1),libHelper.trigger(this.elButtonBack,"click"),this.buildListResult()}hideCraft(){libHelper.hide(this.elListResult),libHelper.hide(this.elListCraft),libHelper.hide(this.elListResponse),libHelper.hide(this.elListCraftItem),libHelper.hide(this.elListCraftQuantity)}showTimeLeft(){libHelper.hide(this.elListCraftItem),libHelper.hide(this.elListCraftQuantity),libHelper.show(this.elListCraft),libHelper.show(this.elListResponse),this.translate("timeLeft")}toggleListRecipe(){const e="craft"===gameNpc.currentAction,t=this.elListRecipe,a=this.elListRecipeDetail;e?(libHelper.show(t),libHelper.show(a)):(libHelper.hide(t),libHelper.hide(a))}translate(e=void 0){const t=gameData.getPlayerCrafts()[this.currentCraft],a=gameTranslation?.translation?.dialog?.default,i=t?this.verifyTimeRemaining(t[2]):"",s={noItem:a?.no_item,done:a?.crafted,timeLeft:`${a?.time_left} ${i}`};this.elListCraftQuantity.innerHTML=a?.maximum,e&&(this.elListResponse.innerHTML=s[e])}update(){const e=gameHtml.elModalLeft;this.elButtonDetailCraft=e.querySelector('[data-id="detail_button_craft"]'),this.elButtonBack=e.querySelector('[data-id="detail_button_back"]'),this.elListCraft=e.querySelector('[data-id="list_craft"]'),this.elListCraftItem=e.querySelector('[data-id="list_craft_item"]'),this.elListCraftQuantity=e.querySelector('[data-id="list_craft_text_quantity"]'),this.elListResult=e.querySelector('[data-id="list_craft_result"]'),this.elListResponse=e.querySelector('[data-id="response"]'),this.elListRecipe=e.querySelector('[data-id="recipe_item"]'),this.elListRecipeDetail=e.querySelector('[data-id="detail_recipe"]'),this.elInputQuantity=e.querySelector('[data-id="detail_field_quantity"] .input')}verifyTimeRemaining(e){const t=new Date,a=new Date(e+"-04:00");return this.convertTime(a-t)}verifyDone(){const e=libHelper.capitalize(this.currentCraft),t=`${this.classBackEnd}${e}&m=verifyDone`,a=this.namespace;libHelper.ajax({namespace:a,parameter:t}).then((e=>this.verifyDoneSuccess(e)))}verifyDoneSuccess(e){const t=JSON.parse(e),a=Object.keys(t).length;for(let e=0;e<=a-1;e++){const a=gameTranslation?.translation?.interface?.action?.amount,i=`<div class="loot-${gameLayout.findInObject(globalLoot,"id",Number(t[e][0]),"cssLoot")}"></div>`+`${a} : <span class="color-blue">${t[e][1]}</span>`;libNotification.add({content:i})}gameData.setPlayerCrafts({[this.currentCraft]:gameData.valueDefault}),gamePageAttribute.requestUpdate(),gamePageInventory.updateLoot(!1),libHelper.show(this.elListCraft),libHelper.show(this.elListResponse),libHelper.hide(this.elListCraftQuantity)}}export class CraftDrawWell{constructor(){this.arrCraftAllowed=[],this.isCraftUpdate=!1}build(){this.update(),gameCraft.isCraft=!1,gameCraft.build()}update(){gameCraft.update(),gameCraft.arrCraftAllowed=this.arrCraftAllowed,gameCraft.isCraftUpdate=this.isCraftUpdate}}export class CraftFabric{constructor(){this.arrCraftAllowed=[],this.isCraftUpdate=!1}build(){this.update(),gameCraft.isCraft=!1,gameCraft.build()}update(){gameCraft.update(),gameCraft.arrCraftAllowed=this.arrCraftAllowed,gameCraft.isCraftUpdate=this.isCraftUpdate}}export class CraftPlant{constructor(){this.arrCraftAllowed=[],this.isCraftUpdate=!1}build(){this.update(),gameCraft.isCraft=!1,gameCraft.build()}update(){gameCraft.update(),gameCraft.arrCraftAllowed=this.arrCraftAllowed,gameCraft.isCraftUpdate=this.isCraftUpdate}}export class CraftStone{constructor(){this.arrCraftAllowed=[],this.isCraftUpdate=!1}build(){this.update(),gameCraft.isCraft=!1,gameCraft.build()}update(){gameCraft.update(),gameCraft.arrCraftAllowed=this.arrCraftAllowed,gameCraft.isCraftUpdate=this.isCraftUpdate}}export class CraftWitch{constructor(){this.arrCraftAllowed=[],this.isCraftUpdate=!1}build(){this.update(),gameCraft.isCraft=!1,gameCraft.build()}update(){gameCraft.update(),gameCraft.arrCraftAllowed=this.arrCraftAllowed,gameCraft.isCraftUpdate=this.isCraftUpdate}}export class CraftWood{constructor(){this.arrCraftAllowed=[],this.isCraftUpdate=!1}build(){this.update(),gameCraft.isCraft=!1,gameCraft.build()}update(){gameCraft.update(),gameCraft.arrCraftAllowed=this.arrCraftAllowed,gameCraft.isCraftUpdate=this.isCraftUpdate}}export class NpcCrustu{constructor(){this.props={animation:cssStandBottom,customizations:{eye:0,hair:2,skin:2},equipments:{armor:31,boot:61,hair:46,skin:52}},this.person={}}}export class NpcCubris{constructor(){this.props={animation:cssStandBottom,customizations:{eye:8,hair:0,skin:3},equipments:{skin:52,pants:35}},this.person={}}}export class NpcDruigar{constructor(){this.props={animation:cssStandBottom,customizations:{eye:0,hair:0,skin:1},equipments:{armor:29,boot:61,face:49,skin:52,pants:35}},this.person={}}}export class NpcFresale{constructor(){this.props={animation:cssStandBottom,customizations:{eye:0,hair:1,skin:1},equipments:{armor:31,boot:61,hair:47,skin:52,pants:35}},this.person={}}}export class NpcGrevanni{constructor(){this.props={animation:cssStandBottom,customizations:{eye:2,hair:8,skin:0},equipments:{armor:29,boot:61,hair:48,pants:35,skin:53}},this.person={}}}export class NpcGreysli{constructor(){this.props={animation:cssStandBottom,customizations:{eye:3,hair:2,skin:0},equipments:{armor:29,boot:61,face:119,hair:47,skin:53,pants:35}},this.person={}}}export class NpcKalhassi{constructor(){this.props={animation:cssStandBottom,customizations:{eye:8,hair:2,skin:3},equipments:{armor:29,boot:61,face:49,glove:28,helmet:24,shield:34,skin:52,pants:35,weapon:14}},this.person={}}}export class NpcPedaspa{constructor(){this.props={animation:cssStandBottom,customizations:{eye:5,hair:0,skin:1},equipments:{armor:29,boot:61,hair:47,skin:53,pants:35}},this.person={}}}export class NpcPurcilus{constructor(){this.props={animation:cssStandBottom,customizations:{eye:3,hair:6,skin:3},equipments:{boot:61,hair:45,skin:52,pants:35}},this.person={}}}export class NpcSafur{constructor(){this.props={animation:cssStandBottom,customizations:{eye:1,hair:4,skin:1},equipments:{face:119,armor:29,boot:61,hair:48,skin:53,pants:35}},this.person={}}}export class NpcSergales{constructor(){this.props={animation:cssStandBottom,customizations:{eye:0,hair:2,skin:2},equipments:{armor:31,boot:61,glove:27,hair:46,helmet:23,shield:32,skin:52,pants:35}},this.person={}}}export class NpcYsifur{constructor(){this.props={animation:cssStandBottom,customizations:{eye:6,hair:1,skin:0},equipments:{armor:29,hair:47,helmet:51,shield:90,skin:53,pants:35,weapon:83}},this.person={}}}export class NpcZodeu{constructor(){this.props={animation:cssStandBottom,customizations:{eye:0,hair:2,skin:2},equipments:{boot:61,hair:46,helmet:24,skin:52,pants:35}},this.person={}}}export class NpcActionBank{constructor(){this.isUpdate=!1,this.itemId=0,this.namespace="Game\\Action",this.classBackEnd="&c=Bank",this.classFrontEnd="gameNpcActionBank",this.storage={}}build(){gameTranslation.translateBank(),this.update(),libHelper.hide(this.elNoItem)}buildButtonPropertys(e){const t=e.arr,a=Object.entries(t),i=e.action;let s="";return a.forEach((([e,a])=>{const n=e.i?e.i:e,l=e.il?e.il:e,r="deposit"===i?1:"number"==typeof e?e:1,o=e.d,c=gameLayout.buildCardArray({arr:t,i:e}),d={frontEnd:this.classFrontEnd,side:"left",action:i,from:"npc",idLore:l,id:n,quantity:r};o&&(d.durability=o),c.click=gameComponent.buildClickItemProperty(d),s+=gameLayout.buildCard(c)})),s}buildDeposit(){const e=gameData.getPlayerAttributes();if(!this.elListAccountDeposit)return;const t=this.elListAccountDeposit.querySelector('[data-id="no_item"]'),a=gamePageInventory.elEmpty.querySelector(".subtitle").textContent;gameConfiguration.npc.bank.level>e.level||(libHelper.show(this.elListAccountDeposit),gamePageInventory.elEmpty.classList.contains(cssDisplayNone)?libHelper.hide(t):(libHelper.show(t),t.innerHTML=a,this.isUpdate=!0),this.buildDepositList())}buildDepositList(){const e=gameData.getPlayerInventory(),t=this.elListAccountDepositList,a=this.buildButtonPropertys({arr:e,action:"deposit"});libHelper.hide(this.elListAccountWithdraw),this.isUpdate||(t.innerHTML=a)}async doDeposit(e){const t=gameHtml.elTalkDetail.querySelector('[data-id="detail_field_quantity"] .input'),a=Number(t.value),i=e.id,s=e.idLore,n=`${this.classBackEnd}&m=doDeposit&id=${i}&idLore=${s}&quantity=${a}`;if(""===a)return t.focus();await libHelper.ajax({namespace:this.namespace,parameter:n}).then((e=>{const t={data:e,quantity:a};this.doDepositResult(t)}))}doDepositResult(e){const t=e.data,a=e.quantity,i=`deposit item ${this.itemId} quantity ${a}`,s=gameHtml.elTalkDetail.querySelector('[data-id="detail_button_back"]');gameLayout.decodeMessage(t),gameAnalytics.send("npc bank deposit",i),"r7"===t&&(this.isUpdate=!1,gamePageInventory.updateLoot().then((()=>{this.buildDeposit(),s.click(),gamePage.close()})))}async doWithdraw(e){const t=gameHtml.elTalkDetail.querySelector('[data-id="detail_field_quantity"] .input'),a=Number(t.value),i=e.id,s=`${this.classBackEnd}&m=doWithdraw&item=${i}&quantity=${a}`,n=this.namespace;await libHelper.ajax({namespace:n,parameter:s}).then((e=>{this.doWithdrawResult({data:e,quantity:a})}))}doWithdrawResult(e){const t=e.data,a=e.quantity,i=`withdraw item ${this.itemId} quantity ${a}`,s=gameTranslation?.translation?.dialog.druigar.item_withdrawn,n=1!==Number(t);gameLayout.decodeMessage(t),gameAnalytics.send("npc bank withdraw",i),n||gamePageInventory.updateLoot().then((()=>{libNotification.add({content:s}),gamePage.close()}))}handleClick(e){const t=e.el,a=gameInventory.getItemAttribute(t),i=a.id,s=a.idLore,n="left",l=e.quantity?e.quantity:1,r=e,o=libHelper.capitalize(this.action),c={id:i,idLore:s,itemProperty:r,target:n,quantity:l};e.action=this.action,e.side=n,libHelper.show(gameHtml.elTalkDetail),libHelper.hide(gameHtml.elTalk),gameItemDetail.buildItem(c),gameNpcActionDetail.buildMenu(e),this.update(),this[`handleClick${o}`](e)}handleClickDeposit(e){const t=JSON.stringify(e);libHelper.show(this.elButtonDeposit.parentNode),this.elButtonDeposit.setAttribute("onclick",`${this.classFrontEnd}.doDeposit(${t});`)}handleClickWithdraw(e){const t=JSON.stringify(e);libHelper.show(this.elButtonWithdraw.parentNode),this.elButtonWithdraw.setAttribute("onclick",`${this.classFrontEnd}.doWithdraw(${t});`)}update(){this.elListAccountWithdraw=gameHtml.elTalk.querySelector('[data-id="list_withdraw"]'),this.elListAccountDeposit=gameHtml.elTalk.querySelector('[data-id="list_deposit"]'),this.elNoItem=gameHtml.elTalk.querySelector('[data-id="no_item"]'),this.elButtonDeposit=gameHtml.elTalkDetail.querySelector('[data-id="detail_button_deposit"]'),this.elButtonWithdraw=gameHtml.elTalkDetail.querySelector('[data-id="detail_button_withdraw"]'),this.elListAccountWithdraw&&(this.elListAccountWithdrawList=this.elListAccountWithdraw.querySelector('[data-id="list"]')),this.elListAccountDeposit&&(this.elListAccountDepositList=this.elListAccountDeposit.querySelector('[data-id="list"]'))}updateVariable(e){this.storage=e.storage}withdraw(){const e=this.storage;if("minimumLevel"===e)return;const t=gameLayout.decodeMessage(e),a=e,i=this.elListAccountWithdraw.querySelector('[data-id="no_item"]'),s={arr:a,action:"withdraw"},n=this.buildButtonPropertys(s);return libHelper.show(this.elListAccountWithdraw),e?(libHelper.hide(i),"r5"===e?libHelper.show(i):"r4"===e?(libHelper.show(i),i.innerHTML=t,i.querySelector(".value").innerHTML=obj.needed):void(this.elListAccountWithdrawList.innerHTML=n)):void 0}}export class NpcActionBuy{constructor(){this.namespace="Game\\Action",this.classBackEnd="&c=Buy"}build(){const e=gameNpc.npcCurrent.name;this.update(),libHelper.show(this.elList),gameAnalytics.send("npc",e),this.buildLayout(this.buys,e),gameNpc.buildCurrentMoney()}buildLayout(e){const t=Object.entries(this.buys);let a="";t.forEach((([t])=>{const i=e[t],s=i.id,n=i.price,l=gameLayout.findInObject(globalLoot,"id",Number(s),"cssLoot"),r={frontEnd:gameNpcActionDetail.classFrontEnd,side:"left",action:"buy",from:"npc",id:s,price:n,quantity:1},o={dataId:s,dataItemLore:s,css:l,text:"$ "+i.price,onclick:gameComponent.buildClickItemProperty(r),kind:!1};a+=gameLayout.buildCard(o)})),this.elList.innerHTML=a}async doBuy(){const e=gameHtml.elTalkDetail.querySelector('[data-id="detail_field_quantity"] input').value,t=gameItemDetail.currentItemId,a=`${this.classBackEnd}&m=doBuy&item=${t}&quantity=${e}`;this.build(npc),await libHelper.ajax({namespace:this.namespace,parameter:a}).then((t=>{this.doBuyReturn(t,e)}))}doBuyReturn(e,t){let a;"done"===e&&(gameAnalytics.send("npc buy",`item ${gameItemDetail.currentItemId} quantity ${t}`),gamePageInventory.updateLoot(),a=gameTranslation?.translation?.interface?.response?.bought),"noGold"===e&&(a=gameTranslation?.translation?.dialog?.default?.no_gold),libNotification.add({content:a}),gamePage.close()}update(){this.elList=gameHtml.elTalk.querySelector('[data-id="list_buy"]')}updateVariable(e){this.buys=e}}export class NpcActionCraft{constructor(){this.namespace="Game\\Craft",this.classBackEnd="&c=",this.classFrontEnd="gameNpcActionCraft"}handleClick(e){console.log("handleClick"),console.log(e)}}export class NpcActionCustomize{constructor(){this.actions=["apply","buy"],this.namespace="Game\\Action",this.classBackEnd="&c=Customize",this.classFrontEnd="gameNpcActionCustomize",this.customizations=["eye","hair","skin"],this.customizationsBuy,this.customizationsApply,this.dataIdCustomizeApply="list_customize_apply",this.dataIdCustomizeBuy="list_customize_buy",this.label="customization"}buildSelect(e){let t="";return this.customizations.forEach((a=>{const i=this.label+"_"+e+"_"+a,s=[{label:"kind",value:a},{label:"id",value:i}],n=libHelper.capitalize(e),l=`${this.classFrontEnd}.changeSelect(this, '${n}');`,r=a.charAt(0),o=this[this.label+"s"+n],c=gameTranslation?.translation?.character?.customization[a],d={label:c,dataCustom:s,id:i,change:l};if(o[r]){const e=o[r],t=this.buildSelectOption(a,e);d.option=t}t+=libComponent.buildSelect(d)})),t}buildSelectOption(e,t){const a="skin",i=e===a,s=Object.entries(t);let n=[];return s.forEach((([e,s])=>{const l="c"===e,r=gameCustomization.colors?.[s],o=gameCustomization?.skins?.[s],c=t.c;let d;if(!l){const e=gameTranslation?.translation?.interface?.default,t=e[i?o?.name:r?.color],n=e[a+"_"+s];d=i?n:t}d&&n.push({dataPrice:c,value:s,text:d})})),n}changeSelect(e,t){const a=e.value,i=e.getAttribute("data-kind"),s=gameCustomization.colors,n=gameCustomization.skins,l=this[`elList${t}`];let r,o;this.changeSelectModifyButton(l),this.changeSelectPrice(l,t),"false"!==a&&("eye"===i&&(o=l.querySelector(`[data-element="${i}_color"]`),r=s[a].css),"hair"===i&&(o=l.querySelector(`[data-element="${i}"]`),r=s[a].css),"skin"===i&&(o=l.querySelector(`[data-element="${i}"]`),r=n[a].css),s.forEach((e=>{const t=e.css;libHelper.removeClass(o,t)})),n.forEach((e=>{const t=e.css;libHelper.removeClass(o,t)})),libHelper.addClass(o,r))}changeSelectPrice(e,t){const a=t.toLowerCase(),i=e.querySelectorAll("select"),s=e.querySelector(`[data-id="input_${this.label}_cost_${a}"]`);let n=0;i.forEach((e=>{const t=e.selectedIndex,a=e.querySelectorAll("option")[t].getAttribute("data-price");n+=Number(a)})),s.value=n}changeSelectModifyButton(e){const t=e.querySelector("button"),a=e.querySelectorAll("select"),i=a.length;let s=0;if(a.forEach((e=>{"false"===e.value&&s++})),i!==s)return t.removeAttribute("disabled");t.setAttribute("disabled",!0)}async handleApply(){const e=this.namespace,t=libHelper.capitalize(this.actions[0]),a=`${this.classBackEnd}&m=apply`+this.handleBuildParameter(t);await libHelper.ajax({namespace:e,parameter:a}).then((e=>{this.handleApplyResult(e)}))}handleApplyResult(e){if("r3"===e||"r8"===e)return gameLayout.decodeMessage(e);const t=JSON.parse(e),a=gameTranslation?.translation?.dialog.grevanni.customize_done;this.customizations.forEach((e=>{const a=e[0],i=t[a],s=void 0!==i,n=Number(i);s&&gameData.setPlayerCustomizations({[e]:n})})),gameCharacter.customizePlayer(),libNotification.add({content:a}),gamePage.close(),gamePageInventory.updateLoot()}handleBuildParameter(e){let t="";return this.customizations.forEach((a=>{const i=this[`elList${e}`].querySelector(`[data-kind="${a}"`).value;t+=`&${a}=${i}`})),t}async handleBuy(){const e=this.namespace,t=libHelper.capitalize(this.actions[1]);let a=`${this.classBackEnd}&m=buy`;a+=this.handleBuildParameter(t),await libHelper.ajax({namespace:e,parameter:a}).then((e=>{this.handleBuyReturn(e)}))}handleBuyReturn(e){const t=JSON.parse(e),a=gameTranslation?.translation?.interface?.response,i=t.message;let s="";"r0"===i&&(s=a.already_have),"r8"===i&&(s=gameTranslation?.translation?.dialog?.default?.no_diamond),"r1"===i&&(s=a.bought,gamePage.closeModal("left")),libNotification.add({content:s}),gamePageInventory.updateLoot()}async loadData(){const e=gameNpc.npcCurrent.name,t=libHelper.capitalize(e),a=window[`gameNpc${t}`].actions,i=JSON.stringify(a),s=gameNpc.buildParameterNpc(),n=this.namespace,l=`${this.classBackEnd}&m=get&actions=${i}${s}`;await libHelper.ajax({namespace:n,parameter:l}).then((e=>{gameData.updateObserver(e)}))}modifyCharacterModel(e){this.update();const t=this[`elList${e}`].getElementsByClassName("person")[0];gameCharacter.buildCharacterAppearancePerson({el:t,elSetting:"player",css:cssStandBottom})}update(){this.elListApply=gameHtml.elTalk.querySelector(`[data-id="${this.dataIdCustomizeApply}"]`),this.elListBuy=gameHtml.elTalk.querySelector(`[data-id="${this.dataIdCustomizeBuy}"]`),this.customizations.forEach((e=>{const t=libHelper.capitalize(e);for(let a in this.actions){const i=this.actions[a],s=libHelper.capitalize(i),n=this[`elList${s}`].querySelector(`[data-kind="${e}"`);this[`elSelect${s+t}`]=n}}))}updateVariable(e){const t=e.apply,a=e.buy;this.customizationsApply=t,this.customizationsBuy=a}}export class NpcActionDetail{constructor(){this.classFrontEnd="gameNpcActionDetail"}buildMenu(e){const t=e.side,a=gameComponentPageDetail.buildDetailMenu(e),i=gameHtml.elModalLeft,s=gameHtml.elModalRight;("left"===t?i:s).querySelector('[data-id="detail_menu"]').innerHTML=a}handleClick(e){const t=e.el,a=e.action,i=gameInventory.getItemAttribute(t),s=i.id,n=i.idLore,l=e.side,r="craft"===a,o={id:s,idLore:n,itemProperty:e,target:l,quantity:e.quantity};"left"===l&&(libHelper.show(gameHtml.elTalkDetail),libHelper.hide(gameHtml.elTalk),gameCraft.update(),r?libHelper.show(gameCraft.elListRecipeDetail):libHelper.hide(gameCraft.elListRecipeDetail)),gameItemDetail.buildItem(o),this.buildMenu(e)}}export class NpcActionQuest{constructor(){this.quests=[],this.classBackEnd="&c=Quest"}async loadData(){const e=gameNpc.npcCurrent.name,t=`${`&c=${libHelper.capitalize(e)}`}&m=talk${gameNpc.buildParameterNpc()}`;await libHelper.ajax({namespace:"Game\\Npc",parameter:t}).then((e=>{gameData.updateObserver(e)}))}async handleConclude(e){const t=`${this.classBackEnd}&m=finishQuest&q=${e}`;await libHelper.ajax({namespace:"Game",parameter:t}).then((t=>{this[`buildQuest${e}RewardSuccess`](t)}))}buildQuest1RewardSuccess(e){if("done"!==e)return;const t=gameTranslation?.translation?.game?.quest.done;gameAnalytics.send("quest 1","reward"),gamePageQuest.updateQuest(),gamePageInventory.updateLoot(!1),gamePage.close(),libNotification.add({content:t})}updateData(e){const t=gameNpc.npcCurrent.name,a=libHelper.capitalize(t);window[`${gameNpc.classFrontEnd}${a}`].updateData(e)}updateVariable(e){const t=Object.values(e);this.quests=e,t.forEach((e=>{const t=e.status;gameLayout.decodeMessage(t)}))}}export class NpcActionSell{constructor(){this.namespace="Game\\Action",this.classBackEnd="&c=Sell"}build(){const e=gameData.getPlayerInventory(),t=Object.keys(e),a=gameHtml.elTalk.querySelector('[data-id="list_sell"]'),i=this.empty();let s="";libHelper.show(a),i&&(t.forEach((t=>{const a=!globalLootNotSellable.includes(Number(t)),i={arr:e,i:t},n=gameLayout.buildCardArray(i),l={frontEnd:gameNpcActionDetail.classFrontEnd,side:"left",action:"sell",from:"npc",id:t,quantity:1};n.click=gameComponent.buildClickItemProperty(l),a&&(s+=gameLayout.buildCard(n))})),a.innerHTML=s)}async doSell(){const e=gameHtml.elTalkDetail.querySelector('[data-id="detail_field_quantity"] input').value,t=gameItemDetail.currentItemId,a=gameItemDetail.currentItemIdLore,i=`${this.classBackEnd}&m=doSell&id=${t}&idLore=${a}&quantity=${e}`;await libHelper.ajax({namespace:this.namespace,parameter:i}).then((t=>{this.doSellReturn(t,e)}))}doSellReturn(e,t){const a=`item ${gameItemDetail.currentItemIdLore} quantity ${t}`,i=gameTranslation?.translation?.interface?.response?.sold_item;"done"===e&&(gameAnalytics.send(`npc ${this.currentAction}`,a),gamePageInventory.updateLoot().then((()=>{libNotification.add({content:i}),gamePage.close(),gameNpc.clickTabSell()})))}empty(){const e=gameHtml.elTalk.querySelector(".js-empty"),t=gameData.getPlayerInventory();return 0===Object.keys(t).length?(libHelper.show(e),!1):(libHelper.hide(e),!0)}}export class NpcActionStatus{updateStatus(e){const t=Number(e.hp),a=Number(e.mp),i=gameTranslation?.translation?.dialog.ysifur.status_restored;gameCharacter.recoverStatus("hitPoint",t),gameCharacter.recoverStatus("manaPoint",a),libNotification.add({content:i})}}export class Page{constructor(){this.cssModalClose="modal-close",this.cssModalAnimate="modal-animate",this.cssPage="js-page",this.cssModalBox="js-page",this.cssButtonClose="modal-close-button",this.opened=null}close(){this.opened=null,this.closePageAll(),this.closeModalAll()}closeModal(e){const t=this[`elModal${libHelper.capitalize(e)}`];"right"===e&&(this.opened=null),libHelper.addClass(t,this.cssModalClose)}closeModalAll(){this.closeModal("middle"),this.closeModal("left"),this.closeModal("right")}closePage(e){this[`elPage${libHelper.capitalize(e)}`].forEach((e=>{libHelper.addClass(e,cssDisplayNone)}))}closePageAll(){this.closePage("middle"),this.closePage("left"),this.closePage("right")}handleClose(e){this.closeModal(e)}init(){this.updateHtml()}open(e){const t=e.page,a=document.getElementById(t),i=e.position,s=libHelper.capitalize(i),n=this[`elModal${s}`],l=this[`elModalBox${s}`];t&&(this.opened=t),this.closePage(e.position),libHelper.removeClass(n,this.cssModalClose),libHelper.addClass(l,this.cssModalAnimate),a&&libHelper.removeClass(a,cssDisplayNone)}resetPages(){gamePageInventory.reset(!1),gamePageAchievement.reset(!1),gamePageAttribute.reset(!1),gamePageQuest.reset(!1),gamePageMap.reset(!1)}toggle(e){const t=e.page;document.getElementById(t).classList.contains(cssDisplayNone)?this.open(e):this.close()}updateHtml(){this.elModalLeft=document.getElementById("modal_left"),this.elModalCloseLeft=this.elModalLeft.querySelector(`.${this.cssButtonClose}`),this.elModalMiddle=document.getElementById("modal"),this.elModalCloseMiddle=this.elModalMiddle.querySelector(`.${this.cssButtonClose}`),this.elModalRight=document.getElementById("modal_right"),this.elModalCloseRight=this.elModalRight.querySelector(`.${this.cssButtonClose}`),this.elModalBoxLeft=this.elModalLeft.querySelector(`.${this.cssPage}`),this.elModalBoxMiddle=this.elModalMiddle.querySelector(`.${this.cssPage}`),this.elModalBoxRight=this.elModalRight.querySelector(`.${this.cssPage}`),this.elPageLeft=this.elModalLeft.querySelectorAll(`.${this.cssPage}`),this.elPageMiddle=this.elModalMiddle.querySelectorAll(`.${this.cssPage}`),this.elPageRight=this.elModalRight.querySelectorAll(`.${this.cssPage}`)}}export class PageAchievement{constructor(){this.prefixPage="achievement",this.pageId=`page_${this.prefixPage}`,this.prefixPageList=`${this.pageId}_list`,this.isUpdate=!1}buildAchievementTutorial(){const e=gameTutorial.elCharacterWalk.querySelector('[data-id="data_map"]'),t=this.buildAchievementTutorialMap(),a=gameData.getPlayerCustomizations(),i=gameData.getPlayerEquipments(),s={animation:cssWalkBottom,customizations:a,equipments:i};let n=gameComponent.buildPerson(s);n+=t,e.innerHTML=n,gameTutorial.build("build","walk"),this.buildAchievementTutorialAnimation(e)}buildAchievementTutorialMap(){let e="";return[12,6,6,6,12,5,1,1,1,7,5,1,1,1,7,5,1,1,1,7,12,8,1,11,12].forEach((t=>{const a=editorMap.decodeMapIndice({searchBy:"id",key:t,returnBy:"class"});e+=`<div class="${a} tile"></div>`})),e}buildAchievementTutorialAnimation(e){const t=e.querySelector(".person");gameTutorial.elCursor.style.top="300px",gameTutorial.elCursor.style.left=`calc(50% + ${gameLayout.tileSizeHalf+"px"})`,t.style.position="absolute",t.style.zIndex=2,t.style.top=50,t.style.left=`calc(50% - ${gameLayout.tileSizeHalf+"px"})`,libHelper.addClass(t,"animation-tutorial-walk")}draw(){const e=gameTranslation?.translation?.interface?.page_achievement?.title,t=gameTranslation?.translation?.interface?.action?.title,a=gameTranslation?.translation?.interface?.action?.description,i=gameTranslation?.translation?.interface?.action?.reward,s=gameTranslation?.translation?.interface?.action?.progress,n=gameTranslation?.translation?.interface?.action?.status,l=`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title">${e}</h2>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <table class="table">\n                        <thead>\n                            <tr>\n                                <th>${t}</th>\n                                <th>${a}</th>\n                                <th>${i}</th>\n                                <th>${s}</th>\n                                <th>${n}</th>\n                            </tr>\n                        </thead>\n                        <tbody id="${this.prefixPageList}"></tbody>\n                    </table>\n                </div>\n            </div>\n        `;this.elPage.innerHTML=l}drawList(e){const t=Object.entries(e);if(0===t.length)return;let a="";t.forEach((([e,t])=>{const i=1===t.d,s=i?"color-green":"color-gray-lighten",n=i?"color-gray":"",l=gameTranslation?.translation?.interface?.page_achievement,r=l?.[`a_${e}_title`],o=l?.[`a_${e}_text`],c=t?.r,d=c[0],u=c[1],m=gameLayout.findInObject(globalLoot,"id",d,"translation"),g=gameTranslation?.translation?.game?.loot[m],h=this.drawListProgress(t,e),p=gameComponent.drawProgrerssBar({value:h,index:e});a+=`\n                <tr id="achievement_${e}">\n                    <td><strong>${r}</strong></td>\n                    <td>${o}</td>\n                    <td class="text-center ${n}">${g} (${u})</td>\n                    <td>${p}</td>\n                    <td class="text-center">\n                        <span class="fa fa-check ${s}" aria-hidden="true" id="achievement_icon_${e}"></span>\n                    </td>\n                </tr>\n            `})),this.elPageList.innerHTML=a}drawListProgress(e,t){const a=e.k,i="a"===a;return"t"===a?this.drawListProgressTask(e):i?this.drawListProgressAmount(e,Number(t)):void 0}drawListProgressTask(e){const t=e.s;if(!t)return;const a=Object.keys(t).length;let i=0;return t.forEach((e=>{1===e&&i++})),this.drawListProgressCalculate(i,a)}drawListProgressAmount(e,t){const a=gameData.getPlayerStatistics(),i=a.l4?a.l4:0,s=e.n,n=[2,3,4,5,6].includes(t),l=[7,8,9,10,11].includes(t),r=Object.entries(a),o=r.length>0;let c=0;return n&&o&&(c=this.drawListProgressSumEnemy(r)),l&&o&&(c=i),this.drawListProgressCalculate(c,s)}drawListProgressSumEnemy(e){let t=0;return e.forEach((([e,a])=>{"e"===e.substring(0,1)&&(t+=a)})),t}drawListProgressCalculate(e,t){return Math.round(100*e/t)}init(){this.update(),this.draw(),this.update()}open(){gameMenu.handlePlatform(this.prefixPage),this.updateData()}reset(){if(!this.elPageList)return;const e=gameData.getPlayerAchievements();this.elPageList.innerHTML="",this.drawList(e)}update(){this.elPage=document.getElementById(this.pageId),this.elPageList=document.getElementById(this.prefixPageList)}updateAchievement(){if(this.isUpdate)return;libHelper.ajax({namespace:"Game\\Page",parameter:"&c=Achievement&m=updateJson"}).then((e=>this.updateAchievementSuccess(e)))}updateAchievementSuccess(e){const t=JSON.parse(e);this.isUpdate=!0,this.drawList(t)}updateAchievementSuccessCheckText(e){if(!e)return;const t=e[0],a=e[1];return"ba"===t?gameTranslation?.translation?.dialog.druigar.item_received:"inv"===t?gameTranslation?.translation?.game?.loot.no_room:"ac"===t?`\n                ${gameTranslation?.translation?.interface?.page_achievement?.done}:&nbsp;\n                <span class="color-blue">\n                    ${gameTranslation?.translation.page_achievement?.["a_"+a].d}\n                </span>\n            `:void 0}updateData(){libHelper.isElementVisible(this.elPage)&&this.reset()}verifyNotification(e){const t=this.updateAchievementSuccessCheckText(e.n);null!==t&&libNotification.add({content:t})}}export class PageAdvise{constructor(){this.prefixPage="page_advise"}draw(){const e=gameTranslation?.translation?.interface?.page_advise?.title,t=gameTranslation?.translation?.interface?.page_advise?.alpha,a=`\n        <div class="responsive-column-regular-12">\n            <h2 class="title" data-id="data_title">${e}</h2>\n        </div>\n        <div class="responsive-row">\n            <div class="responsive-column-regular-12 text-center">\n                <div class="padding-regular" data-id="data_text">${t}</div>\n            </div>\n        </div>\n        <div class="responsive-row">\n            <div class="responsive-column-regular-12">\n                <div class="padding-regular">\n                    <nav class="menu menu-horizontal text-center">\n                        <ul>\n                            <li>\n                                <button type="button" class="button button-regular button-green" data-id="button_proceed"></button>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        </div>\n        `;this.elPage.innerHTML=a}init(){this.update(),this.draw(),this.update()}update(){this.elPage=document.getElementById(this.prefixPage)}}export class PageAttribute{constructor(){this.attributes=["vitality","intelligence","strength","dexterity"],this.profiles=["name","level","experience","experience_next","class","attack","defense","initiative","distribute"],this.statistics=["death","enemy","coin"],this.isUpdate=!1,this.classFrontEnd="gamePageAttribute",this.namespace="Game\\Page",this.classBackEnd="&c=Attribute",this.prefixPage="attribute",this.labelButtonIncrease=`${this.prefixPage}_increase_`,this.pageId=`page_${this.prefixPage}`,this.buttonsIncrease=[]}buildNew(e){this.elPageClass.innerHTML=e.translation,this.build("attributes"),this.build("text"),this.build("reset")}buildAttributes(){const e=gameData.getPlayerAttributes(),t=gameConfiguration.attributesHitPoint(e.vitality),a=Number(e.hitPoint),i=gameConfiguration.attributesHitPoint(e.intelligence),s=Number(e.manaPoint);gameData.setPlayerAttributes({hitPoint:t,hitPointMaximum:a,manaPoint:i,manaPointMaximum:s}),this.build("text")}buildReset(){const e=gameData.getPlayerAttributes(),t=Number(e.hitPointMaximum),a=Number(e.manaPointMaximum);gameData.setPlayerAttributes({hitPoint:t,manaPoint:a}),this.build("text")}draw(){const e=gameTranslation?.translation?.interface,t=this.drawTitle(e?.page_about?.title),a=this.drawTitle(e[this.pageId]?.title),i=this.drawTitle(e[this.pageId]?.statistics),s=`\n            ${t}\n            ${this.drawContent(this.drawProfile())}\n            ${a}\n            ${this.drawContent(this.drawAttributes())}\n            ${i}\n            ${this.drawContent(this.drawStatistics())}\n        `;this.elPage.innerHTML=s,gamePageStatistic.update()}drawAttributes(){const e=this.attributes;let t="";return e.forEach((e=>{t+=this.drawItem({index:e,isButton:!0})})),t}drawContent(e){return`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <form class="form responsive-row">\n                        ${e}\n                    </form>\n                </div>\n            </div>\n        `}drawItem(e){const t=e.index,a=e.isButton,i=gameTranslation?.translation?.interface?.[this.pageId]?.[t];return`\n            <div class="form-field responsive-column-regular-6">\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-4">\n                        <label>${i}</label>\n                    </div>\n                    <div class="responsive-column-regular-8">\n                        <input type="text" class="input" id="attribute_${t}" value="" readonly>\n                        ${a?this.drawItemButton(t):""}\n                    </div>\n                </div>\n            </div>\n        `}drawItemButton(e){const t=gameTranslation?.translation?.game?.tip["increase_"+e],a=`${this.labelButtonIncrease+e}`,i=`${this.classFrontEnd}.handleAttribute('${e}')`;return`\n            <nav class="menu menu-horizontal text-center menu-hover-field">\n                <ul>\n                    <li>\n                        <button type="button" class="button button-small button-green tooltip tooltip--black tooltip--bottom" id="${a}" ${gameHtml.attTooltip}="${t}" onclick="${i}">\n                            <span class="fa fa-plus" aria-hidden="true"></span>\n                        </button>\n                    </li>\n                </ul>\n            </nav>\n        `}drawProfile(){const e=this.profiles;let t="";return e.forEach((e=>{t+=this.drawItem({index:e,isButton:!1})})),t}drawStatistics(){const e=this.statistics;let t=`<div class="responsive-row" id="${gamePageStatistic.pageId}">`;return e.forEach((e=>{const a="statistics_"+e,i=gameTranslation?.translation?.interface?.[this.pageId]?.[a];t+=`\n                <div class="form-field responsive-column-regular-6">\n                    <div class="responsive-row">\n                        <div class="responsive-column-regular-4">\n                            <label>${i}</label>\n                        </div>\n                        <div class="responsive-column-regular-8">\n                            <input type="text" class="input" id="${a}" value="0" readonly>\n                        </div>\n                    </div>\n                </div>\n            `})),t+="</div>",t}drawTitle(e){return`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title">${e}</h2>\n                </div>\n            </div>\n        `}async handleAttribute(e){const t=this.namespace,a=`${this.classBackEnd}&m=increase&attribute=${e}`;await libHelper.ajax({namespace:t,parameter:a}).then((t=>{this.handleAttributeResponse({data:t,attribute:e})}))}handleAttributeResponse(e){const t=e.data,a=e.attribute,i=JSON.parse(t);gameData.setPlayerAttributes(i),gameAnalytics.send("attribute increase",a)}init(){this.updateHtml(),this.draw(),this.updateHtml(),this.updateButtonsIncrease()}open(){gameMenu.handlePlatform(this.prefixPage),this.updateData()}updateButtonsIncrease(){this.buttonsIncrease=this.elPage.querySelectorAll(".button")}updateHtml(){this.elPage=document.getElementById([this.pageId]),this.elPageName=document.getElementById("attribute_name"),this.elPageLevel=document.getElementById("attribute_level"),this.elPageExperience=document.getElementById("attribute_experience"),this.elPageExperienceNext=document.getElementById("attribute_experience_next"),this.elPageClass=document.getElementById("attribute_class"),this.elPageAttack=document.getElementById("attribute_attack"),this.elPageDefense=document.getElementById("attribute_defense"),this.elPageInitiative=document.getElementById("attribute_initiative"),this.elPageVitality=document.getElementById("attribute_vitality"),this.elPageIntelligence=document.getElementById("attribute_intelligence"),this.elPageStrength=document.getElementById("attribute_strength"),this.elPageDexterity=document.getElementById("attribute_dexterity"),this.elPageDistribute=document.getElementById("attribute_distribute"),this.elPageBtnVitality=document.getElementById("attribute_vitality_btn"),this.elPageBtnIntelligence=document.getElementById("attribute_intelligence_btn"),this.elPageBtnStrength=document.getElementById("attribute_strength_btn"),this.elPageBtnDexterity=document.getElementById("attribute_dexterity_btn")}updateData(){const e=gameData.getPlayerAttributes(),t=gameTranslation.translateClass(),a=libHelper.isElementVisible(this.elPage),i=e.distribute>0;a&&(libHelper.setInputValue(this.elPageName,e?.name),libHelper.setInputValue(this.elPageLevel,e?.level),libHelper.setInputValue(this.elPageExperience,e?.experience),libHelper.setInputValue(this.elPageExperienceNext,e?.experienceNext),libHelper.setInputValue(this.elPageDistribute,e?.distribute),libHelper.setInputValue(this.elPageAttack,e?.attack),libHelper.setInputValue(this.elPageDefense,e?.defense),libHelper.setInputValue(this.elPageVitality,e?.vitality),libHelper.setInputValue(this.elPageIntelligence,e?.intelligence),libHelper.setInputValue(this.elPageStrength,e?.strength),libHelper.setInputValue(this.elPageDexterity,e?.dexterity),libHelper.setInputValue(this.elPageInitiative,e?.initiative),libHelper.setInputValue(this.elPageClass,t),this.buttonsIncrease.forEach((e=>{i?libHelper.removeClass(e,cssDisplayNone):libHelper.addClass(e,cssDisplayNone)})))}reset(e=!0){this.isUpdate=!1,e&&this.requestUpdate()}async requestUpdate(){if(this.isUpdate)return;await libHelper.ajax({namespace:"Game\\Page",parameter:"&c=Attribute&m=update"}).then((e=>{const t=JSON.parse(e);gameData.setPlayerAttributes(t)}))}}export class PageCharacterSelect{constructor(){this.prefixPage="page_character_select",this.prefixPageList=`${this.prefixPage}_list`}draw(){const e=gameTranslation?.translation?.game?.quest?.quest_0_build_select_character,t=`\n            <div class="responsive-column-regular-12">\n                <h2 class="title">${e}</h2>\n            </div>\n            <div class="responsive-row page-character-select-list" id="${this.prefixPageList}"></div>\n        `;this.elPage.innerHTML=t}init(){this.update(),this.draw(),this.update()}update(){this.elPage=document.getElementById(this.prefixPage),this.elPageList=document.getElementById(this.prefixPageList)}}export class PageCharacterSelectClass{constructor(){this.prefixPage="page_character_select_class"}draw(){const e=gameTranslation?.translation?.game?.quest?.quest_0_build_class_title,t={onclick:"gamePage.open({ page: 'page_character_select', position: 'middle' })",cssStyle:"gray",dataCustom:[{label:"id",value:`${this.prefixPage}_back`}],text:gameTranslation?.translation?.interface?.action?.back},a=libComponent.buildButton(t),i=`\n        <div class="responsive-column-regular-12">\n            <h2 class="title">${e}</h2>\n        </div>\n        <div class="responsive-row" id="${this.prefixPage}_list"></div>\n        <div class="responsive-row">\n            <div class="responsive-column-regular-12">\n                <div class="padding-regular">\n                    <nav class="menu menu-vertical text-right">\n                        <ul>\n                            <li>\n                                ${a}\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        </div>\n        `;this.elPage.innerHTML=i}init(){this.update(),this.draw(),this.update()}update(){this.elPage=document.getElementById(this.prefixPage)}}export class PageCharacterSelectCustomize{constructor(){this.prefixPage="page_character_select_customize",this.id="customize_"}draw(){const e=gameTranslation?.translation?.game?.quest.quest_0_build_appearance_title,t=gameTranslation?.translation?.game?.player?.name,a={onclick:"gamePage.open({ page: 'page_character_select_class', position: 'middle' })",cssStyle:"gray",dataCustom:[{label:"id",value:`${this.prefixPage}_back`}],text:gameTranslation?.translation?.interface?.action?.back},i=libComponent.buildButton(a),s={onclick:"gameCharacterSelect.buildCharacterCustomizePageCharacterSelectCustomizeProceed()",cssStyle:"green",dataCustom:[{label:"id",value:`${this.prefixPage}_proceed`}],text:gameTranslation?.translation?.interface?.action?.proceed},n=libComponent.buildButton(s),l=this.drawAppearance(),r=this.drawSides(),o=this.drawCustomizations(),c=gameData.getPlayerAttributes();c.animation=cssWalkBottom;const d=gameComponent.buildPerson(c),u=`\n            <div class="responsive-column-regular-12">\n                <h2 class="title">${e}</h2>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <div class="responsive-row">\n                        <div class="responsive-column-regular-8">\n                            <div class="padding-regular">\n                                <form class="form responsive-row">\n                                    <div class="form-field responsive-column-regular-12">\n                                        <div class="responsive-row">\n                                            <div class="responsive-column-regular-4">\n                                                <label>${t}</label>\n                                            </div>\n                                            <div class="responsive-column-regular-8">\n                                                <input id="${this.id}name" class="input" type="text" maxlength="30">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    ${l}\n                                    <div class="responsive-column-regular-12">\n                                        ${o}\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                        <div class="responsive-column-regular-4">\n                            <div class="responsive-row">\n                                <div class="responsive-column-extra-small-12">\n                                    <div class="card">\n                                        <header>\n                                            <h4 class="card-title"></h4>\n                                        </header>\n                                        <div class="card-body">\n                                            <div class="responsive-row">\n                                                <div class="responsive-column-regular-12">\n                                                    <div class="character-select item-box" id="page_character_select_person">\n                                                        ${d}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <footer>&nbsp;</footer>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="responsive-row">\n                                <div class="responsive-column-extra-small-12">\n                                    <nav class="menu menu-horizontal text-center">\n                                        ${r}\n                                    </nav>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <div class="padding-regular">\n                        <nav class="menu menu-horizontal text-right">\n                            <ul>\n                                <li>${i}</li>\n                                <li>${n}</li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n        `;this.elPage.innerHTML=u}drawAppearance(){const e=gameTranslation?.translation?.game?.equipment;let t="";return["clothes","hair"].forEach((a=>{const i=this.drawAppearanceOptions(gameCustomization[a]),s=e[a],n=gameCustomization.prefixSelect+a;t+=`\n                <div class="form-field responsive-column-regular-12">\n                    <div class="responsive-row">\n                        <div class="responsive-column-regular-4">\n                            <label>${s}</label>\n                        </div>\n                        <div class="responsive-column-regular-8">\n                            <select id="${n}" class="input" \n                                onchange="gameCustomization.applyItem({customization: '${a}', 'elSelect': this, 'targetId': 'page_character_select_person'});">\n                                    ${i}\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            `})),t}drawAppearanceOptions(e){let t="";return e.forEach((e=>{const a=e.id,i=e.text;t+=`<option value="${a}">${i}</option>`})),t}drawCustomizations(){const e=gameCustomization.customizations;let t="";return e.forEach((e=>{const a=gameTranslation?.translation?.game?.player?.[`color_${e}`],i=this.id+e,s=this.drawCustomizationsOptions(e);t+=`\n                <div class="form-field responsive-row">\n                    <div class="responsive-column-regular-4">\n                        <label>${a}</label>\n                    </div>\n                    <div class="responsive-column-regular-8">\n                        <select \n                            id="${i}" \n                            data-id="${i}" \n                            class="input" \n                            onchange="gameCustomization.${"skin"===e?"applySkin":"applyColor"}({customization: '${e}', 'elSelect': this, 'targetId': 'page_character_select_person'});\n                        ">\n                            ${s}\n                        </select>\n                    </div>\n                </div>\n            `})),t}drawCustomizationsOptions(e){const t=gameData.getPlayerCustomizations().available,a=e.charAt(0),i=t?.[a],s=gameTranslation?.translation?.interface?.default;let n="";return i?.forEach((t=>{const a=Number(t),i=gameLayout.findInObject(gameCustomization.colors,"id",a,"color"),l=gameCustomization.skins[t]?.name,r="skin"===e,o=s?.[r?l:i];n+=`<option value="${a}">${o}</option>`})),n}drawSides(){let e="<ul>";return[{id:"left",icon:"chevron-left"},{id:"top",icon:"chevron-up"},{id:"bottom",icon:"chevron-down"},{id:"right",icon:"chevron-right"}].forEach((t=>{const a=t.id,i=t.icon,s=libComponent.buildIcon(i),n={onclick:`gameCharacterSelect.changeDirection('${a}')`,cssStyle:"gray",dataCustom:[{label:"id",value:`page_character_select_${this.id}direction_${a}`}],text:s},l=libComponent.buildButton(n);e+=`<li>${l}</li>`})),e+="</ul>",e}init(){this.update(),this.draw(),this.triggerSelects(),this.update()}triggerSelects(){this.elPage.querySelectorAll("select").forEach((e=>{libHelper.trigger(e,"change")}))}update(){this.elPage=document.getElementById(this.prefixPage)}}export class PageInventory{constructor(){this.isPageBuilt=!1,this.speedPenalty=0,this.unequip="",this.filterActive="",this.buildPageFilter=this.buildPageFilter.bind(this),this.prefixPage="inventory",this.prefixInventorryEquipment=`${this.prefixPage}_equipment_`,this.classBackEnd="&c=Inventory",this.namespacePage="Game\\Page"}build(){const e=gameData.getPlayerInventory();if(void 0===e)return;const t=Object.keys(e).length,a=this.elPage?.querySelector(".menu-tab");if(this.buildCapacity(),gamePageAchievement.isUpdate=!1,t<=0)return this.buildEmpty(a);this.buildItem({itens:e,elMenu:a})}buildItem(e){const t=Object.entries(e.itens);let a="";libHelper.hide(this.elEmpty),libHelper.show(e.elMenu),this.elPageItem&&(t.forEach((e=>{const t=e.i?e.i:e[0],i=e.i?e:e[1];a+=this.buildHTML(t,i)})),this.elPageItem.innerHTML=a)}buildEmpty(e){libHelper.show(this.elEmpty),libHelper.hide(e)}buildHTML(e,t){const a="object"==typeof t,i=a?t.i:e,s=a?t.il:e,n=a?1:t,l=gameLayout.findInObject(globalLoot,"id",s,"cssLoot"),r=gameLayout.findInObject(globalLoot,"id",s,"kind"),o={frontEnd:gameNpcActionDetail.classFrontEnd,side:"right",from:"inventory",kind:r,id:i,quantity:1},c={dataId:i,dataItemLore:s,css:l,text:n,onclick:gameComponent.buildClickItemProperty(o),kind:r};return a&&(c.durability=t.d),gameLayout.buildCard(c)}buildEquipment(){const e=gameEquipment.visibles,t=Object.values(e),a=gameData.getPlayerEquipments();t.forEach((e=>{const t=a[e],i=null!==t,s=t?.d,n=t?.il,l=t?.i,r=i?s:null,o=i?gameLayout.findInObject(globalLoot,"id",n,"cssLoot"):null;let c=gameTranslation?.translation?.game?.equipment[e];"shield"===e&&(c=gameTranslation?.translation?.game?.equipment.secondary_hand),"weapon"===e&&(c=gameTranslation?.translation?.game?.equipment.primary_hand);const d={frontEnd:gameNpcActionDetail.classFrontEnd,side:"right",from:"equipment"},u=gameComponent.buildClickItemProperty(d),m=null===t?null:u,g=null!==t?l:null,h=null!==t?n:null,p=null!==t?gameLayout.findInObject(globalLoot,"id",n,"kind"):null,b=gameLayout.buildCard({dataId:g,dataItemLore:h,css:o,durability:r,onclick:m,kind:p,text:c});document.getElementById(`${this.prefixInventorryEquipment+e}`).innerHTML=b}))}buildCapacity(){const e=gameData.getPlayerAttributes(),t=e.capacityPercentage,a=e=>"progress-style-"+e,i=this.elCapacityBar,s=gameLayout.buildCapacityColor(t);this.elCapacity&&(gameLayout.durabilityColor.forEach((e=>{const t=a(e);libHelper.removeClass(i,t)})),libHelper.addClass(i,a(s)),this.elCapacity.value=e.capacity,this.elCapacityTotal.value=e.capacityMaximum,this.buildCapacityBar(t))}buildCapacityBar(e){const t=this.elCapacityBar.querySelector(".progress-bar");gameLayout.updateBarStyle({el:t,style:"width",value:e})}buildEquipmentClearBox(e){const t=document.getElementById(`inventory_equipment_${e}`);if(!t)return;const a=t.querySelector("div");if(!a)return;const i=a.querySelector("div");i.removeAttribute("class"),libHelper.addClass(i,"responsive-row"),libHelper.addClass(i,"item-box")}buildPageFilter(e){const t=e.target,a=t.getAttribute("data-filter"),i={elCard:this.elPageItem.querySelectorAll(".card"),target:a};switch(gameLayout.defineActiveMenu({menu:t.parentNode.parentNode.parentNode,active:t.parentNode}),a){case"all":return this.buildPageFilterAll(i);case"equipment":return this.buildPageFilterEquipment(i);default:return this.buildPageFilterDefault(i)}}buildPageFilterHide(e){e.elCard.forEach((e=>{libHelper.hide(e.parentNode)}))}buildPageFilterAll(e){e.elCard.forEach((e=>{libHelper.show(e.parentNode)}))}buildPageFilterEquipment(e){this.buildPageFilterHide(e),e.elCard.forEach((e=>{const t=e.getAttribute("data-kind");gameEquipment.equipments.includes(t)&&libHelper.show(e.parentNode)}))}buildPageFilterDefault(e){this.buildPageFilterHide(e),e.elCard.forEach((t=>{t.getAttribute("data-kind")===e.target&&libHelper.show(t.parentNode)}))}buildPageFilterMenuActive(){if(!this.elPageItem)return;const e=this.elPageItem.querySelectorAll(".card");let t=!1;if(this.elPageItem.querySelectorAll('*[data-kind="resource"]').length>=1?libHelper.show(this.elButtonFilterResource):libHelper.hide(this.elButtonFilterResource),this.elPageItem.querySelectorAll('*[data-kind="money"]').length>=1?libHelper.show(this.elButtonFilterMoney):libHelper.hide(this.elButtonFilterMoney),this.elPageItem.querySelectorAll('*[data-kind="usable"]').length>=1?libHelper.show(this.elButtonFilterUsable):libHelper.hide(this.elButtonFilterUsable),e.forEach((e=>{const a=e.getAttribute("data-kind");gameEquipment.equipments.includes(a)&&(t=!0)})),t)return libHelper.show(this.elButtonFilterEquipment);libHelper.hide(this.elButtonFilterEquipment)}buildPageFilterMenuAction(){this.elButtonFilterAll&&(libHelper.addClick(this.elButtonFilterAll,this.buildPageFilter),libHelper.addClick(this.elButtonFilterResource,this.buildPageFilter),libHelper.addClick(this.elButtonFilterMoney,this.buildPageFilter),libHelper.addClick(this.elButtonFilterUsable,this.buildPageFilter),libHelper.addClick(this.elButtonFilterEquipment,this.buildPageFilter),this.elButtonFilterAll.click())}clearEquipment(){const e=this.elPage.querySelector(".input-disabled");e&&(e.innerHTML='<div class="js-loot loot-none"></div>')}defineActiveFilter(){const e=this.elPage?.querySelector(".menu-tab .menu-tab-active button");e.click()}drawCategory(){const e=[{id:"all",translation:gameTranslation?.translation?.interface?.action?.all},{id:"resource",translation:gameTranslation?.translation?.game?.equipment.resource},{id:"money",translation:gameTranslation?.translation?.interface?.action?.money},{id:"usable",translation:gameTranslation?.translation?.game?.equipment.usable},{id:"equipment",translation:gameTranslation?.translation?.interface?.action?.equipment}];let t='\n            <nav class="menu-tab menu menu-horizontal menu-drop-down">\n                <ul> \n        ';return e.forEach((e=>{t+=`\n                <li>\n                    <button type="button" id="page_inventory_button_filter_${e.id}" data-filter="${e.id}" class="menu-tab-button button-regular button">\n                        ${e.translation}\n                    </button>\n                </li>\n            `})),t+="\n                </ul>\n            </nav>\n        ",t}draw(){const e=this.drawEquipment(),t=this.drawCategory(),a=gameTranslation?.translation?.interface?.action?.equipment,i=gameTranslation?.translation?.interface?.page_inventory?.title,s=gameTranslation?.translation?.interface?.page_inventory?.capacity,n=gameTranslation?.translation?.interface?.page_inventory?.capacity_current,l=gameTranslation?.translation?.interface?.page_inventory?.capacity_total,r=gameTranslation?.translation?.interface?.page_inventory?.empty,o=`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title">${a}</h2>\n                </div>\n            </div>\n            <div id="page_inventory_equipment" class="page-inventory-equipment">\n                ${e}\n            </div>\n            <div class="responsive-row padding-big">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title">${i}</h2>\n                </div>\n            </div>\n            <div class="responsive-row" id="page_inventory_inventory">\n                <div class="responsive-column-regular-12">\n                    ${t}\n                </div>\n                <div class="responsive-row">\n                    <div class="responsive-row menu-tab-box">\n                        <div class="text-center page-inventory-item" id="page_inventory_item">\n                        </div>\n                        <div class="responsive-row text-center" id="page_inventory_empty">\n                            <h3 class="subtitle color-red">${r}</h3>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="responsive-row padding-big">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title">${s}</h2>\n                </div>\n            </div>\n            <div class="responsive-column-regular-12">\n                <div class="padding-small">\n                    <form class="form responsive-row">\n                        <div class="form-field responsive-column-regular-6">\n                            <div class="responsive-row">\n                                <div class="responsive-column-regular-4">\n                                    <label>${n}</label>\n                                </div>\n                                <div class="responsive-column-regular-8">\n                                    <input type="text" class="input" id="page_inventory_capacity" value="" disabled="">\n                                </div>\n                            </div>\n                        </div>\n                        <div class="form-field responsive-column-regular-6">\n                            <div class="responsive-row">\n                                <div class="responsive-column-regular-4">\n                                    <label>${l}</label>\n                                </div>\n                                <div class="responsive-column-regular-8">\n                                    <input type="text" class="input" id="page_inventory_capacity_total" value="" disabled="">\n                                </div>\n                            </div>\n                        </div>\n                        <div class="form-field responsive-column-regular-12">\n                            <div class="margin-extra-small">\n                                <div class="progress progress-regular" id="page_inventory_capacity_bar">\n                                    <div class="progress-bar"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        `;this.elPage.innerHTML=o}drawEquipment(){const e=gameEquipment.visibles;let t="";return e.forEach((e=>{const a=this.prefixInventorryEquipment+e;t+=`<div id="${a}" class="equipment"></div>`})),t}async handleEquip(){const e=gameItemDetail.currentItemId,t=gameData.getPlayerInventory()[e],a=gameItemDetail.currentItemIdLore,i=gameLayout.findInObject(globalLoot,"id",a,"kind"),s=`${this.classBackEnd}&m=equip&itemKind=${i}&item=${e}`,n=this.namespacePage;await libHelper.ajax({namespace:n,parameter:s}).then((e=>{this.handleEquipReturn({data:e,kind:i,item:t})}))}handleEquipReturn(e){const t=e.data,a=e.kind,i=e.item,s=gameLayout.decodeJson(t);if(gameLayout.decodeMessage(t),"forbidden"===s){const e=null,t=null;gameData.setPlayerEquipments({weapon:e,shield:t,[a]:i}),this.buildEquipmentClearBox("weapon"),this.buildEquipmentClearBox("shield")}"done"===s&&(gamePageAttribute.isUpdate=!1,this.buildEquipmentClearBox(a),gameData.removePlayerInventory(i),gameCharacter.equip(a,i)),this.handleEquipAppearance()}handleEquipAppearance(){const e=gameHtml.elCharacter,t=cssStandBottom;gameCharacter.buildCharacterAppearancePerson({el:e,elSetting:"player",css:t}),this.updateLoot(!0)}async handleUnequip(){const e=gameItemDetail.currentItemId,t=this.elPage.querySelector(`[data-id="${e}"]`),a=gameInventory.getItemAttribute(t),i=a.idLore,s=a.kind,n=`${this.classBackEnd}&m=unequip&itemKind=${s}&item=${e}`,l=this.namespacePage;await libHelper.ajax({namespace:l,parameter:n}).then((e=>{this.handleUnequipReturn(e,s,i)}))}handleUnequipReturn(e,t,a){if("done"===e){const e=gameLayout.findInObject(globalLoot,"id",Number(a),"css"),i=document.getElementById(`inventory_equipment_${t}`).querySelector(".js-loot");gameData.removePlayerEquipments(t),"weapon"===t&&gameData.removePlayerEquipments("weaponKind"),gamePageAttribute.isUpdate=!1,libHelper.removeClass(i,`loot-${e}`),gameCharacter.buildCharacterAppearancePerson({el:gameHtml.elCharacter,elSetting:"player",css:cssStandBottom}),gameCharacter.unequip(a),this.updateLoot(!0)}if("forbidden"===e){const e=gameTranslation?.translation.alert.unequip_forbidden;libNotification.add({content:e})}}async handleUse(e=gameItemDetail.currentItemId,t=!0,a=!1){const i=this.elDetail.querySelector('[data-id="detail_field_quantity"]')?.querySelector("input"),s=t?Number(i.value):1,n=`${this.classBackEnd}&m=use&item=${e}&quantity=${s}`,l=this.namespacePage;await libHelper.ajax({namespace:l,parameter:n}).then((t=>{this.handleUseReturn({data:t,item:e,newQuantity:s,hotkey:a})}))}handleUseReturn(e){const t=JSON.parse(e.data),a=Number(t.hitPoint),i=Number(t.manaPoint),s=gameTranslation?.translation.alert.used,n=this.elDetail.querySelector('[data-id="detail_button_back"]'),l=e.newQuantity,r=e.hotkey,o=e.item;gameAnalytics.send("inventory",`use item ${o} quantity ${l}`),gameLayout.decodeMessage(t),r||n.click(),libNotification.add({content:s}),gameCharacter.recoverStatus("hitPoint",a),gameCharacter.recoverStatus("manaPoint",i),gamePageInventory.updateLoot(),gamePageAttribute.requestUpdate()}init(){this.draw(),this.update(),this.clearEquipment(),this.buildPageFilterMenuAction()}modify(e,t){"remove"===e&&this.modifyRemove(t)}async modifyRemove(e){const t=e[0],a=e[1],i=`${this.classBackEnd}&m=exclude&item=${t}&quantity=${a}`;await libHelper.ajax({parameter:i}).then((e=>{this.modifyRemoveSuccess({response:e,item:t,quantity:a})}))}modifyRemoveSuccess(e){const t=e.response;gameAnalytics.send("inventory",`exclude item ${e.item} quantity ${e.quantity}`),gameLayout.decodeMessage(e),"done"===t&&(this.updateLoot(),this.build())}open(){gameMenu.handlePlatform(this.prefixPage),this.updateData(),this.defineActiveFilter()}reset(){this.elPageItem&&(this.elPageItem.innerHTML="")}update(){this.elPage=document.getElementById("page_inventory"),this.elPageItem=document.getElementById("page_inventory_item"),this.elPageInventoryEquipment=document.getElementById("page_inventory_equipment"),this.elDetail=document.getElementById("page_inventory_detail"),this.elInventory=document.getElementById("page_inventory_inventory"),this.elButtonFilterAll=document.getElementById("page_inventory_button_filter_all"),this.elButtonFilterResource=document.getElementById("page_inventory_button_filter_resource"),this.elButtonFilterMoney=document.getElementById("page_inventory_button_filter_money"),this.elButtonFilterUsable=document.getElementById("page_inventory_button_filter_usable"),this.elButtonFilterEquipment=document.getElementById("page_inventory_button_filter_equipment"),this.elCapacity=document.getElementById("page_inventory_capacity"),this.elCapacityTotal=document.getElementById("page_inventory_capacity_total"),this.elCapacityBar=document.getElementById("page_inventory_capacity_bar"),this.elEmpty=document.getElementById("page_inventory_empty"),this.elEquipmentAmulet=document.getElementById("inventory_equipment_amulet"),this.elEquipmentRing=document.getElementById("inventory_equipment_ring"),this.elEquipmentRune=document.getElementById("inventory_equipment_rune"),this.elEquipmentHelmet=document.getElementById("inventory_equipment_helmet"),this.elEquipmentBackpack=document.getElementById("inventory_equipment_backpack"),this.elEquipmentWeapon=document.getElementById("inventory_equipment_weapon"),this.elEquipmentGlove=document.getElementById("inventory_equipment_glove"),this.elEquipmentArmor=document.getElementById("inventory_equipment_armor"),this.elEquipmentBracelet=document.getElementById("inventory_equipment_bracelet"),this.elEquipmentShield=document.getElementById("inventory_equipment_shield"),this.elEquipmentBelt=document.getElementById("inventory_equipment_belt"),this.elEquipmentPants=document.getElementById("inventory_equipment_pants"),this.elEquipmentBoot=document.getElementById("inventory_equipment_boot"),this.elEquipmentHair=document.getElementById("inventory_equipment_hair"),this.elEquipmentFace=document.getElementById("inventory_equipment_face"),this.elEquipmentEye=document.getElementById("inventory_equipment_eye")}updateData(){libHelper.isElementVisible(this.elPage)&&this.build()}updateLoot(e=!1){return new Promise((t=>{const a=`${this.classBackEnd}&m=updateLoot`;libHelper.ajax({parameter:a}).then((a=>{this.updateLootSuccess(a,e),t()}))}))}updateLootSuccess(e,t){const a=JSON.parse(e),i=e.n,s=a.loot,n=a.total_capacity_current,l=a.total_capacity;this.reset(),gameLayout.decodeMessage(e),gameData.setPlayerAttributes({capacity:n,capacityMaximum:l}),gameData.resetPlayerInventory(),gameData.setPlayerInventory(s),i&&libNotification.add({content:i}),this.buildEquipment(),gameAnimation.animateMove("character",!1,cssStandBottom),t&&this.elDetail.querySelector('[data-id="detail_button_back"]').click(),this.build(),this.defineActiveFilter()}}export class PageLogin{constructor(){this.idPage="page_login"}buildPage(){const e=gameConfiguration.isLocalHost(),t=gameLogin.elPage,a=this.drawPage();t.innerHTML=a,e||grecaptcha.render("recaptcha",{sitekey:gameConfiguration.recaptcha})}buildForget(){const e=gameLogin.elForget,t=this.drawForget();e.innerHTML=t}buildResend(){const e=gameLogin.elLoginResend,t=this.drawResend();e.innerHTML=t}buildSignUp(){const e=gameLogin.elSignUp,t=this.drawSignUp();e.innerHTML=t}drawTitle(){return`\n            <div class="responsive-column-regular-12">\n                <h2 class="title">${this?.translation?.login?.login}</h2>\n            </div>\n        `}drawPage(){const e=this.idPage;let t="",a="";return[{id:"forget",css:"gray",click:"buildLoginPage(`page_login_forget`)",text:this?.translation?.login?.forget},{id:"sign_up",css:"gray",click:"buildLoginPage(`page_login_sign_up`)",text:this?.translation?.login?.sign_up},{id:"guest",css:"orange",click:"buildLoginGuest()",text:this?.translation?.login?.play_guest},{id:"login",css:"green",click:"buildLogin()",text:this?.translation?.login?.login}].forEach((a=>{const i=`button-${a.css}`,s=a.id,n=`gameLogin.${a.click}`,l=a.text;t+=`\n                <li>\n                    <button type="button" class="button button-regular ${i}" id="${e}_button_${s}" onclick="${n}">\n                        ${l}\n                    </button>\n                </li>\n            `})),a+=`\n            <form class="form responsive-row">\n                ${this.drawTitle()}\n                <div class="form-field responsive-column-regular-12">\n                    <div class="responsive-row">\n                        <div class="responsive-column-regular-3">\n                            <label>${this?.translation?.login?.e_mail}</label>\n                        </div>\n                        <div class="responsive-column-regular-9">\n                            <input class="input" type="email" maxlength="100" value="" id="${e}_e_mail">\n                        </div>\n                    </div>\n                </div>\n                <div class="form-field responsive-column-regular-12">\n                    <div class="responsive-row">\n                        <div class="responsive-column-regular-3">\n                            <label>${this?.translation?.login?.password}</label>\n                        </div>\n                        <div class="responsive-column-regular-9">\n                            <input class="input" type="password" value="" id="${e}_password" maxlength="50" autocomplete="off">\n                        </div>\n                    </div>\n                </div>\n                <div id="recaptcha" class="g-recaptcha extend-focus"></div>\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12 text-center">\n                        <nav class="menu menu-horizontal menu-mobile">\n                            <ul>\n                                ${t}\n                            </ul>\n                        </nav>\n                    </div>\n                    <div class="responsive-column-regular-12 text-right">\n                        <div class="padding-regular" id="${e}_response"></div>\n                    </div>\n                </div>\n            </form>\n        `,a}drawForget(){const e=this.idPage+"_forget",t=[{id:"back",css:"gray",click:"buildLoginPage(`page_login`)",text:this.translation?.title?.back},{id:"send",css:"green",click:"buildResetPasswordForm()",text:this?.translation?.login?.send}];let a="",i="";return t.forEach((t=>{const i=`button-${t.css}`,s=t.id,n=`gameLogin.${t.click}`,l=t.text;a+=`\n                <li>\n                    <button type="button" class="button button-regular ${i}" id="${e}_button_${s}" onclick="${n}">\n                        ${l}\n                    </button>\n                </li>\n            `})),i+=`\n            <form class="form form-gray responsive-row">    \n                ${this.drawTitle()}\n                <div class="form-field responsive-column-regular-12">\n                    <div class="responsive-row">\n                        <div class="responsive-column-regular-3">\n                            <label>${this?.translation?.login?.forget}</label>\n                        </div>\n                        <div class="responsive-column-regular-9">\n                            <input class="input" type="email" id="page_login_forget_e_mail">\n                        </div>\n                    </div>\n                </div>\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12">\n                        <nav class="menu menu-horizontal text-center menu-mobile">\n                            <ul>\n                                ${a}\n                            </ul>\n                        </nav>\n                    </div>\n                    <div class="responsive-column-regular-12 text-right">\n                        <div class="padding-regular" id="page_login_register_forget_response">\n                        </div>\n                    </div>\n                </div>\n            </form>\n        `,i}drawResend(){const e=this.idPage+"_resend",t=[{id:"back",css:"gray",click:"buildLoginPage(`page_login_sign_up`)",text:this.translation?.title?.back},{id:"send",css:"green",click:"buildSignUpResendForm()",text:this?.translation?.login?.send}];let a="",i="";return t.forEach((t=>{const i=`button-${t.css}`,s=t.id,n=`gameLogin.${t.click}`,l=t.text;a+=`\n                <li>\n                    <button type="button" class="button button-regular ${i}" id="${e}_button_${s}" onclick="${n}">\n                        ${l}\n                    </button>\n                </li>\n            `})),i+=`\n            <form class="form form-gray responsive-row">    \n                ${this.drawTitle()}\n                <div class="form-field responsive-column-regular-12">\n                    <div class="responsive-row">\n                        <div class="responsive-column-regular-3">\n                            <label>${this?.translation?.login?.e_mail}</label>\n                        </div>\n                        <div class="responsive-column-regular-9">\n                            <input class="input" type="email" id="${e}_e_mail">\n                        </div>\n                    </div>\n                </div>\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12">\n                        <nav class="menu menu-horizontal text-center menu-mobile">\n                            <ul>\n                                ${a}\n                            </ul>\n                        </nav>\n                    </div>\n                    <div class="responsive-column-regular-12 text-right">\n                        <div class="padding-regular" id="${e}_response">\n                        </div>\n                    </div>\n                </div>\n            </form>\n        `,i}drawSignUp(){const e=this.idPage+"_sign_up",t=[{id:"back",css:"gray",click:"buildLoginPage(`page_login`)",text:this.translation?.title?.back},{id:"resend",css:"blue",click:"buildLoginPage(`page_login_resend`)",text:this?.translation?.login?.resend},{id:"register",css:"green",click:"buildSignUpSend()",text:this?.translation?.login?.register}],a=[{id:"user",maxlength:"30",type:"text",text:this?.translation?.login?.user},{id:"e_mail",maxlength:"100",type:"text",text:this?.translation?.login?.e_mail},{id:"password",maxlength:"50",type:"password",text:this?.translation?.login?.password},{id:"password_verify",maxlength:"50",type:"password",text:this?.translation?.login?.password_repeat}];let i="",s="",n="";return t.forEach((t=>{const a=`button-${t.css}`,s=t.id,n=`gameLogin.${t.click}`,l=t.text;i+=`\n                <li>\n                    <button type="button" class="button button-regular ${a}" id="${e}_button_${s}" onclick="${n}">\n                        ${l}\n                    </button>\n                </li>\n            `})),a.forEach((e=>{const t=e.id,a=e.maxlength,i=e.type,n=e.text;s+=`\n                <div class="responsive-row form-field">\n                    <div class="responsive-column-regular-3">\n                        <label>${n}</label>\n                    </div>\n                    <div class="responsive-column-regular-9">\n                        <input class="input" type="${i}" id="page_login_register_${t}" maxlength="${a}" autocomplete="off">\n                    </div>\n                </div>\n            `})),n+=`\n            <form class="form form-gray responsive-row">\n                ${this.drawTitle()}\n                <div class="form-field responsive-column-regular-12">\n                    ${s}\n                    <div class="responsive-row ">\n                        <div class="form__option">\n                            <label for="${e}_accept_newsletter" class="checkbox-label">\n                                ${this?.translation?.login?.sign_up_accept_newsletter}\n                            </label>\n                            <input id="${e}_accept_newsletter" name="checkbox" type="checkbox">\n                        </div>\n                    </div>\n                    <div class="responsive-row ">\n                        <div class="form__option">\n                            <label for="${e}_accept_terms" class="checkbox-label">\n                                ${this?.translation?.login?.sign_up_accept_terms}\n                            </label>\n                            <a class="link link-terms" href="/terms/" target="_blank">\n                                ${this?.translation?.login?.sign_up_accept_terms_link}\n                            </a>\n                            <input id="${e}_accept_terms" name="checkbox" type="checkbox">\n                        </div>\n                    </div>\n                </div>\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12">\n                        <nav class="menu menu-horizontal text-center menu-mobile">\n                            <ul>\n                                ${i}\n                            </ul>\n                        </nav>\n                    </div>\n                    <div class="responsive-column-regular-12 text-right">\n                        <div class="padding-regular" id="page_login_register_response"></div>\n                    </div>\n                </div>\n            </form>\n        `,n}init(){this.translation=gameTranslation?.translation,gameLogin.updateHtml(),this.buildPage(),this.buildForget(),this.buildResend(),this.buildSignUp()}}export class PageMap{constructor(){this.isMapBuilt=!1,this.arrMiniMapMini=[],this.mapMiniSize=10,this.mapMiniTotal=this.mapMiniSize*this.mapMiniSize,this.prefixPage="map",this.arrMiniMap=[],this.arrMiniMapX=0,this.arrMiniMapY=0,this.buildArrayInitial(),this.objCity=[{name:"TORGOTES"},{name:"PADIXA"}],this.objDoor=[{side:"top"},{side:"right"},{side:"bottom"},{side:"left"}]}buildArrayInitial(){for(let e=0;e<this.mapMiniTotal;e++){const t={i:e,k:0,tile:"",map:`x${this.arrMiniMapX}y${this.arrMiniMapY}`,d0:0,d1:0,d2:0,d3:0,c:0};this.arrMiniMapX++,10===this.arrMiniMapX&&(this.arrMiniMapX=0,this.arrMiniMapY++),this.arrMiniMap.push(t)}}buildLayout(){this.update();const e=gameTranslation?.translation?.interface?.page_map?.title,t=`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title">${e}</h2>\n                </div>    \n            </div> \n            <div class="responsive-row">\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12">\n                        <h6 class="subtitle text"></h6>\n                    </div>\n                    <div class="responsive-column-regular-12">\n                        <div class="map">${this.buildLayoutMiniMap()}</div>\n                    </div>\n                </div>\n            </div>\n        `;this.elPage.innerHTML=t}buildLayoutMiniMap(){let e="";for(let t=0;t<this.mapMiniTotal;t++)e+=`\n                <div class="map-tile" id="mini_map_tile_${t}">\n                    <div id="mini_map_tile_skin_${t}"></div>\n                    <div id="mini_map_tile_door_top_${t}"></div>\n                    <div id="mini_map_tile_door_right_${t}"></div>\n                    <div id="mini_map_tile_door_bottom_${t}"></div>\n                    <div id="mini_map_tile_door_left_${t}"></div>\n                </div>\n            `;return e}buildCurrent(){this.isMapBuilt||(this.update(),this.updateMapMini())}clearMapMini(){for(let e=0;e<this.mapMiniSize*this.mapMiniSize;e++){const t=document.getElementById(`mini_map_tile_skin_${e}`);if(!t)return;t.removeAttribute("class"),this.arrMiniMap[e].k=1;for(let t in this.objDoor)this.arrMiniMap[e][`d${t}`]=0;this.arrMiniMap[e].tile=""}}init(){this.buildLayout()}open(){gameMenu.handlePlatform(this.prefixPage),this.updateData()}reset(){this.clearMapMini()}setPositionCharacter(){this.isMapBuilt=!1,this.buildCurrent()}update(){this.elPage=document.getElementById("page_map"),this.elCity=document.getElementById("page_map_current_map"),this.elPosition=document.getElementById("page_map_current_position")}updateData(){libHelper.isElementVisible(this.elPage)}updateMapMiniLoop(e){Object.entries(e).forEach((([e,t])=>{const a=this.arrMiniMap[e],i=t[0]?t[0]:0,s=t[1]?t[1]:0,n=t[2]?t[2]:0,l=t[3]?t[3]:0,r=editorMap.decodeMapIndice({searchBy:"id",key:1,returnBy:"class"});a.k=1,a.d0=i,a.d1=s,a.d2=n,a.d3=l,a.tile=r}))}updateMapMiniLayout(){this.arrMiniMap.forEach((e=>{const t=e.i,a=document.getElementById(`mini_map_tile_skin_${t}`);if(libHelper.removeClass(a,"map-pointer"),libHelper.removeClass(a,"fa"),""!==e.tile&&(libHelper.addClass(a,e.tile),libHelper.addClass(a,"tile-skin")),this.updateMapMiniLayoutDoor({element:e,i:t}),t===Number(gameMap.current)){const t=this.objCity[e.c].name;if(!a)return;libHelper.addClass(a,"map-pointer"),libHelper.addClass(a,"fa"),this.elCity&&(this.elCity.innerHTML=t),this.elPosition&&(this.elPosition.innerHTML=e.map)}}))}async updateMapMini(){await libHelper.ajax({namespace:"Game\\Page",parameter:"&c=Map&m=getMiniMap"}).then((e=>{this.updateMapMiniSuccess(e)}))}updateMapMiniSuccess(e){const t=JSON.parse(e);gameLayout.decodeMessage(e),this.updateMapMiniLoop(t),this.updateMapMiniLayout(),this.isMapBuilt=!0}updateMapMiniLayoutDoor(e){const t=e.element;Object.entries(gamePageMap.objDoor).forEach((([a,i])=>{const s=i.side,n=document.getElementById(`mini_map_tile_door_${s}_${e.i}`),l=`door-${s}`;0!==t[`d${a}`]&&0!==t.k?libHelper.addClass(n,l):libHelper.removeClass(n,l)}))}}export class PageMenu{constructor(){}}export class PageQuest{constructor(){this.prefixPage="quest",this.quests=[]}buildList(){0===this.quests.length?this.buildListEmpty():this.buildListItens()}buildListEmpty(){libHelper.show(this.elEmpty),libHelper.hide(this.elTable)}buildListItens(){const e=gamePageQuest.quests,t=Object.entries(e);let a="";libHelper.hide(this.elEmpty),libHelper.show(this.elTable),t.forEach((([e,t])=>{a+=this.buildHtml(t)})),this.elTableBody.innerHTML=a}buildHtml(e){const t=e.id,a=e.status,i=`quest_${t}`,s=gameTranslation?.translation?.game?.quest,n=s?.[`${i}_title`],l=s?.[`${i}_description`];return`\n            <tr id="${i}">\n                <td><strong>${n}</strong></td>\n                <td>${l}</td>\n                <td class="text-center">\n                    ${"done"===a?'<span class="fa fa-check color-green" aria-hidden="true"></span>':""}\n                </td>\n            </tr>\n        `}draw(){const e=gameTranslation?.translation?.interface?.page_quest?.title,t=gameTranslation?.translation?.interface?.page_quest?.empty,a=gameTranslation?.translation?.interface?.action?.title,i=gameTranslation?.translation?.interface?.action?.description,s=gameTranslation?.translation?.interface?.action?.status,n=`\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title">${e}</h2>\n                </div>    \n            </div> \n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <table class="table table-gray">       \n                        <thead>\n                            <tr>\n                                <th>${a}</th>\n                                <th>${i}</th>\n                                <th>${s}</th>\n                            </tr>\n                        </thead>  \n                        <tbody></tbody>   \n                    </table>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <h3 id="page_quest_empty" class="subtitle color-red">${t}</h3>\n                </div>    \n            </div> \n        `;this.elPage.innerHTML=n}init(){this.update(),this.draw(),this.update()}open(){gameMenu.handlePlatform(this.prefixPage),this.updateData()}update(){this.elPage=document.getElementById(`page_${this.prefixPage}`),this.elPageEmpty=document.getElementById("page_quest_empty"),this.elTable=this.elPage.querySelector(".table"),this.elTableBody=this.elPage.querySelector("tbody"),this.elEmpty=this.elPageEmpty?.parentNode.parentNode}updateData(){libHelper.isElementVisible(this.elPage)}async updateQuest(){await libHelper.ajax({namespace:"Game",parameter:"&c=Quest&m=getAll"}).then((e=>{this.updateQuestReturn(e)}))}updateQuestReturn(e){const t=JSON.parse(e);"updateQuest"===gameManagement.status&&(gameManagement.status="updateAchievement",gameManagement.build()),this.quests=t,this.buildList()}reset(){this.elTableBody&&(this.elTableBody.innerHTML="")}}export class PageSetting{constructor(){this.prefixPage="setting",this.classFrontEnd="gamePageSetting",this.isSelectCharacter=!1,this.eMail=""}draw(){const e=gameTranslation?.translation?.interface?.page_setting?.title,t=this.drawAudio(),a=this.drawMenu(),i=gameTranslation?.translation?.interface?.action?.identifier,s=gameTranslation?.translation?.interface?.action?.progress,n=gameTranslation?.translation?.interface?.action?.action,l=gameTranslation?.translation?.interface?.page_setting?.music,r=gameTranslation?.translation?.interface?.page_setting?.sound_effect,o=`\n            ${t}\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <h2 class="title">${e}</h2>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <table class="table table-gray">\n                        <thead>\n                            <tr>\n                                <th>${i}</th>\n                                <th>${s}</th>\n                                <th>${n}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            ${this.drawRow(l,"page_setting_music_")}\n                            ${this.drawRow(r,"page_setting_sound_effect_")}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12 padding-regular">\n                    <nav class="menu menu-horizontal text-right">\n                        <ul>\n                            ${a}\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        `;this.elPage.innerHTML=o}drawRow(e,t){return`\n            <tr>\n                <td>${e}</td>\n                <td>\n                    <div class="progress progress-style-yellow progress-regular" id="${t}volume">\n                        <div class="progress-bar"></div>\n                    </div>\n                </td>\n                <td>\n                    <nav class="menu menu-horizontal text-right">\n                        <ul>\n                            ${this.drawAudioPlayer(t)}\n                        </ul>\n                    </nav>\n                </td>\n            </tr>\n        `}drawAudio(){let e="";return["music","battle","sound_effect"].forEach((t=>{e+=`<audio id="page_setting_${t}" loop src=""></audio>`})),e}drawAudioPlayer(e){const t=e=>`${this.classFrontEnd}.handle${e}()`;let a="";"page_setting_music_"===e&&(a="Music"),"page_setting_sound_effect_"===e&&(a="SoundEffect");const i=[{id:"increase",class:"button-gray",icon:"plus",onclick:t(a+"Increase")},{id:"decrease",class:"button-gray",icon:"minus",onclick:t(a+"Decrease")},{id:"play",class:"button-green",icon:"play",onclick:t(a+"Play")},{id:"pause",class:"button-red",icon:"pause",onclick:t(a+"Pause")}];let s="";return i.forEach((t=>{s+=`\n                <li>\n                    <button type="button" \n                            class="button button-small ${t.class}" \n                            id="${e+t.id}"\n                            onclick="${t.click}"\n                        >\n                        <span class="fa fa-${t.icon}" aria-hidden="true"></span>\n                    </button>\n                </li>\n            `})),s}drawMenu(){const e=[{id:"character_select",class:"button-blue",translation:gameTranslation?.translation?.interface?.page_setting?.change_character,onclick:`${this.classFrontEnd}.handleCharacterSelect()`},{id:"logout",class:"button-red",translation:gameTranslation?.translation?.interface?.page_setting?.logout,onclick:`${this.classFrontEnd}.handleLogout()`}];let t="";return e.forEach((e=>{t+=`\n                <li>\n                    <button type="button" \n                            class="button button-regular ${e.class}" \n                            id="page_setting_${e.id}" \n                            onclick="${e.click}"\n                    >\n                        ${e.translation}\n                    </button>\n                </li>\n            `})),t}init(){this.update(),this.draw(),this.update(),gameAudio.buildSound()}handleCharacterSelect(){const e=gameTranslation?.translation?.game?.battle.forbidden_change_character,t=gameBattle.isBattle;this.isSelectCharacter=!0,gamePage.close(),gameHtml.elTutorial&&libHelper.hide(gameHtml.elTutorial),t?libNotification.add({text:e,color:"red"}):gameManagement.buildCharacterSelectModal(),gameCharacterSelect.enableButtonPlay()}handleLogout(){const e=gameTranslation?.translation?.game?.battle.forbidden_logout;if(gameBattle.isBattle)return libNotification.add({text:e,color:"red"});this.logout()}handleMusicPlay(){libHelper.useStorage({action:"set",target:gameAudio.storageMusicPause,value:"play"}),gameAudio.buildMusic("music")}handleMusicPause(){libHelper.useStorage({action:"set",target:gameAudio.storageMusicPause,value:"paused"}),gameAudio.buildMusic("music"),this.elMusic.pause(),this.elMusicBattle.pause()}handleMusicDecrease(){this.elMusic.volume>0&&gameAudio.buildVolume("decrease","music",gameAudio.currentVolumeMusic)}handleMusicIncrease(){this.elMusic.volume<1&&gameAudio.buildVolume("increase","music",gameAudio.currentVolumeMusic)}handleSoundEffectPlay(){libHelper.useStorage({action:"set",target:gameAudio.storageSoundEffectPause,value:"play"}),gameAudio.buildMusic("soundEffect")}handleSoundEffectPause(){libHelper.useStorage({action:"set",target:gameAudio.storageSoundEffectPause,value:"paused"}),gameAudio.buildMusic("soundEffect")}handleSoundEffectDecrease(){this.elSoundEffect.volume>0&&gameAudio.buildVolume("decrease","sound_effect",gameAudio.currentVolumeSoundEffect)}handleSoundEffectIncrease(){this.elSoundEffect.volume<1&&gameAudio.buildVolume("increase","sound_effect",gameAudio.currentVolumeSoundEffect)}logout(){libHelper.ajax({parameter:"&c=Login&m=buildLogout"}).then((()=>this.logoutSuccess()))}logoutSuccess(){gameCharacter.reset(),gamePage.close(),libHelper.hide(gameHtml.elCharacter),libHelper.hide(gameHtml.elMainBar),libHelper.hide(gameHtml.elEnemy),libHelper.hide(gameHtml.elNpc),libHelper.hide(gameHtml.elMap),gamePageInventory.build(),gamePageCharacterSelect.elPageList.innerHTML="",window.location.replace(document.URL)}open(){gameMenu.handlePlatform(this.prefixPage),this.updateData()}update(){this.elPage=document.getElementById(`page_${this.prefixPage}`),this.elCharacterSelect=document.getElementById("page_setting_character_select"),this.elLogout=document.getElementById("page_setting_logout"),this.elSoundEffect=document.getElementById("page_setting_sound_effect"),this.elMusicPlay=document.getElementById("page_setting_music_play"),this.elMusicPause=document.getElementById("page_setting_music_pause"),this.elMusicVolume=document.getElementById("page_setting_music_volume"),this.elSoundEffectPlay=document.getElementById("page_setting_sound_effect_play"),this.elSoundEffectPause=document.getElementById("page_setting_sound_effect_pause"),this.elSoundVolume=document.getElementById("page_setting_sound_effect_volume"),this.elMusic=document.getElementById("page_setting_music"),this.elMusicBattle=document.getElementById("page_setting_battle")}updateData(){libHelper.isElementVisible(this.elPage)}}export class PageStatistic{constructor(){this.pageId="page_statistics"}init(){this.update()}update(){this.updateHtml()}updateHtml(){this.elPage=document.getElementById(this.pageId),this.elDeath=document.getElementById("statistics_death"),this.elEnemy=document.getElementById("statistics_enemy"),this.elCoin=document.getElementById("statistics_coin")}updateData(){const e=e=>e||0;if(!libHelper.isElementVisible(this.elPage))return;const t=gameData.getPlayerStatistics();if(!t)return;const a=e(t?.d),i=e(t?.l4),s=Object.entries(t);let n=0;s.forEach((([e,t])=>{"e"===e.substring(1,-1)&&(n+=t)})),libHelper.setInputValue(this.elDeath,a),libHelper.setInputValue(this.elEnemy,n),libHelper.setInputValue(this.elCoin,i)}}export class PageTransition{draw(){const e=`\n            <div class="responsive-row" id="page_transition">\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12">\n                        <img src="${globalPathAssets}img/game/${globalVersion.game}/logo.png" alt="october 31" class="img-responsive" />\n                    </div>\n                </div>\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12">\n                        <h2 class="title tip"></h2>\n                    </div>\n                </div>\n                <div class="responsive-row">\n                    <div class="responsive-column-regular-12 text-center">\n                        <div class="spinner" data-id="spinner">\n                            <div class="bounce1"></div>\n                            <div class="bounce2"></div>\n                            <div class="bounce3"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class="game-version" data-id="game-version"></div>\n            </div>\n        `;this.elPage.innerHTML=e}init(){this.update(),this.draw()}update(){this.elPage=document.getElementById("page_transition")}}export class PageTutorialHistory{draw(){const e=gameTranslation?.translation?.game?.quest.quest_0_build_character_title,t=gameTranslation?.translation?.game?.quest.quest_0_build_character_text,a=gameTranslation?.translation?.interface?.action?.proceed,i=`\n            <div class="responsive-column-regular-12">\n                <h2 class="title" data-id="data_title">${e}</h2>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12 text-center">\n                    <div class="padding-regular">${t}</div>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <div class="padding-regular">\n                        <nav class="menu menu-horizontal text-center">\n                            <ul>\n                                <li>\n                                    <button type="button" class="button button-regular button-green" data-id="button_proceed" onclick="gameTutorial.handleProcedHistory()">${a}</button>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n        `;this.elPage.innerHTML=i}init(){this.update(),this.draw(),this.update()}update(){this.elPage=document.getElementById("page_character_tutorial_history")}}export class PageTutorialWalk{draw(){const e=gameTranslation?.translation?.game?.quest.quest_0_build_tutorial_title,t=gameTranslation?.translation?.game?.quest.quest_0_build_tutorial_text,a=gameTranslation?.translation?.interface?.action?.proceed,i=`\n            <div class="responsive-column-regular-12">\n                <h2 class="title" data-id="data_title">${e}</h2>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12 text-center">\n                    <div data-id="data_map" class="tutorial-map"></div>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12 text-center">\n                    <div class="padding-regular" data-id="data_text">${t}</div>\n                </div>\n            </div>\n            <div class="responsive-row">\n                <div class="responsive-column-regular-12">\n                    <div class="padding-regular">\n                        <nav class="menu menu-horizontal text-center">\n                            <ul>\n                                <li>\n                                    <button type="button" \n                                            class="button button-regular button-green" \n                                            data-id="button_proceed" \n                                            onclick="gameTutorial.handleProcedWalk();"\n                                    >\n                                        ${a}\n                                    </button>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n        `;this.elPage.innerHTML=i}init(){this.update(),this.draw(),this.update()}update(){this.elPage=document.getElementById("page_character_tutorial_walk")}}export class Quest1{build(e){}}